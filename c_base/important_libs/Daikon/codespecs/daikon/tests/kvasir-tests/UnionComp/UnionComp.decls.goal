input-language C/C++
decl-version 2.0
var-comparability none

ppt ..alloc_comp():::ENTER
  ppt-type enter
  variable ::comp_test_ptr
    var-kind variable
    rep-type hashcode
    dec-type comp_test*
  variable ::comp_test_ptr[..]
    var-kind array
    enclosing-var ::comp_test_ptr
    array 1
    rep-type hashcode[]
    dec-type comp_test[]
  variable ::comp_test_ptr[..].comp
    var-kind field comp
    enclosing-var ::comp_test_ptr[..]
    array 1
    rep-type hashcode[]
    dec-type ptrs[]
  variable ::comp_test_ptr[..].comp.name
    var-kind field name
    enclosing-var ::comp_test_ptr[..].comp
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::comp_test_ptr[..].comp.next
    var-kind field next
    enclosing-var ::comp_test_ptr[..].comp
    array 1
    rep-type hashcode[]
    dec-type ptrs*[]
  variable ::comp_test_ptr[..].comp.next->name
    var-kind field name
    enclosing-var ::comp_test_ptr[..].comp.next
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::comp_test_ptr[..].comp.next->next
    var-kind field next
    enclosing-var ::comp_test_ptr[..].comp.next
    array 1
    rep-type hashcode[]
    dec-type ptrs*[]
  variable ::comp_test_ptr[..].comp.next->next[0]
    var-kind field [0]
    enclosing-var ::comp_test_ptr[..].comp.next->next
    array 1
    rep-type hashcode[]
    dec-type ptrs[]
  variable ::comp_test_ptr[..].comp.next[0]
    var-kind field [0]
    enclosing-var ::comp_test_ptr[..].comp.next
    array 1
    rep-type hashcode[]
    dec-type ptrs[]
  variable ::comp_test_ptr[..].not_comp
    var-kind field not_comp
    enclosing-var ::comp_test_ptr[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::comp_test_ptr[..].zero
    var-kind field zero
    enclosing-var ::comp_test_ptr[..]
    array 1
    rep-type int[]
    dec-type int[]

ppt ..alloc_comp():::EXIT0
  ppt-type subexit
  variable ::comp_test_ptr
    var-kind variable
    rep-type hashcode
    dec-type comp_test*
  variable ::comp_test_ptr[..]
    var-kind array
    enclosing-var ::comp_test_ptr
    array 1
    rep-type hashcode[]
    dec-type comp_test[]
  variable ::comp_test_ptr[..].comp
    var-kind field comp
    enclosing-var ::comp_test_ptr[..]
    array 1
    rep-type hashcode[]
    dec-type ptrs[]
  variable ::comp_test_ptr[..].comp.name
    var-kind field name
    enclosing-var ::comp_test_ptr[..].comp
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::comp_test_ptr[..].comp.next
    var-kind field next
    enclosing-var ::comp_test_ptr[..].comp
    array 1
    rep-type hashcode[]
    dec-type ptrs*[]
  variable ::comp_test_ptr[..].comp.next->name
    var-kind field name
    enclosing-var ::comp_test_ptr[..].comp.next
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::comp_test_ptr[..].comp.next->next
    var-kind field next
    enclosing-var ::comp_test_ptr[..].comp.next
    array 1
    rep-type hashcode[]
    dec-type ptrs*[]
  variable ::comp_test_ptr[..].comp.next->next[0]
    var-kind field [0]
    enclosing-var ::comp_test_ptr[..].comp.next->next
    array 1
    rep-type hashcode[]
    dec-type ptrs[]
  variable ::comp_test_ptr[..].comp.next[0]
    var-kind field [0]
    enclosing-var ::comp_test_ptr[..].comp.next
    array 1
    rep-type hashcode[]
    dec-type ptrs[]
  variable ::comp_test_ptr[..].not_comp
    var-kind field not_comp
    enclosing-var ::comp_test_ptr[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::comp_test_ptr[..].zero
    var-kind field zero
    enclosing-var ::comp_test_ptr[..]
    array 1
    rep-type int[]
    dec-type int[]

ppt ..main():::ENTER
  ppt-type enter
  variable ::comp_test_ptr
    var-kind variable
    rep-type hashcode
    dec-type comp_test*
  variable ::comp_test_ptr[..]
    var-kind array
    enclosing-var ::comp_test_ptr
    array 1
    rep-type hashcode[]
    dec-type comp_test[]
  variable ::comp_test_ptr[..].comp
    var-kind field comp
    enclosing-var ::comp_test_ptr[..]
    array 1
    rep-type hashcode[]
    dec-type ptrs[]
  variable ::comp_test_ptr[..].comp.name
    var-kind field name
    enclosing-var ::comp_test_ptr[..].comp
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::comp_test_ptr[..].comp.next
    var-kind field next
    enclosing-var ::comp_test_ptr[..].comp
    array 1
    rep-type hashcode[]
    dec-type ptrs*[]
  variable ::comp_test_ptr[..].comp.next->name
    var-kind field name
    enclosing-var ::comp_test_ptr[..].comp.next
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::comp_test_ptr[..].comp.next->next
    var-kind field next
    enclosing-var ::comp_test_ptr[..].comp.next
    array 1
    rep-type hashcode[]
    dec-type ptrs*[]
  variable ::comp_test_ptr[..].comp.next->next[0]
    var-kind field [0]
    enclosing-var ::comp_test_ptr[..].comp.next->next
    array 1
    rep-type hashcode[]
    dec-type ptrs[]
  variable ::comp_test_ptr[..].comp.next[0]
    var-kind field [0]
    enclosing-var ::comp_test_ptr[..].comp.next
    array 1
    rep-type hashcode[]
    dec-type ptrs[]
  variable ::comp_test_ptr[..].not_comp
    var-kind field not_comp
    enclosing-var ::comp_test_ptr[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::comp_test_ptr[..].zero
    var-kind field zero
    enclosing-var ::comp_test_ptr[..]
    array 1
    rep-type int[]
    dec-type int[]

ppt ..main():::EXIT0
  ppt-type subexit
  variable ::comp_test_ptr
    var-kind variable
    rep-type hashcode
    dec-type comp_test*
  variable ::comp_test_ptr[..]
    var-kind array
    enclosing-var ::comp_test_ptr
    array 1
    rep-type hashcode[]
    dec-type comp_test[]
  variable ::comp_test_ptr[..].comp
    var-kind field comp
    enclosing-var ::comp_test_ptr[..]
    array 1
    rep-type hashcode[]
    dec-type ptrs[]
  variable ::comp_test_ptr[..].comp.name
    var-kind field name
    enclosing-var ::comp_test_ptr[..].comp
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::comp_test_ptr[..].comp.next
    var-kind field next
    enclosing-var ::comp_test_ptr[..].comp
    array 1
    rep-type hashcode[]
    dec-type ptrs*[]
  variable ::comp_test_ptr[..].comp.next->name
    var-kind field name
    enclosing-var ::comp_test_ptr[..].comp.next
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::comp_test_ptr[..].comp.next->next
    var-kind field next
    enclosing-var ::comp_test_ptr[..].comp.next
    array 1
    rep-type hashcode[]
    dec-type ptrs*[]
  variable ::comp_test_ptr[..].comp.next->next[0]
    var-kind field [0]
    enclosing-var ::comp_test_ptr[..].comp.next->next
    array 1
    rep-type hashcode[]
    dec-type ptrs[]
  variable ::comp_test_ptr[..].comp.next[0]
    var-kind field [0]
    enclosing-var ::comp_test_ptr[..].comp.next
    array 1
    rep-type hashcode[]
    dec-type ptrs[]
  variable ::comp_test_ptr[..].not_comp
    var-kind field not_comp
    enclosing-var ::comp_test_ptr[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::comp_test_ptr[..].zero
    var-kind field zero
    enclosing-var ::comp_test_ptr[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable return
    var-kind variable
    rep-type int
    dec-type int

