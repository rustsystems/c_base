input-language C/C++
decl-version 2.0
var-comparability none

..main():::ENTER
this_invocation_nonce
0
argc
1
1
argv
<STACK_ADDR>
1
argv[..]
[ "./virtual-method" ]
1

Square.Square():::ENTER
this_invocation_nonce
1
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::ENTER
this_invocation_nonce
2
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::EXIT0
this_invocation_nonce
2
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.Square():::EXIT0
this_invocation_nonce
1
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.Triangle():::ENTER
this_invocation_nonce
3
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::ENTER
this_invocation_nonce
4
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::EXIT0
this_invocation_nonce
4
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.Triangle():::EXIT0
this_invocation_nonce
3
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.Square():::ENTER
this_invocation_nonce
5
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::ENTER
this_invocation_nonce
6
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::EXIT0
this_invocation_nonce
6
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.Square():::EXIT0
this_invocation_nonce
5
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.Triangle():::ENTER
this_invocation_nonce
7
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::ENTER
this_invocation_nonce
8
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::EXIT0
this_invocation_nonce
8
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.Triangle():::EXIT0
this_invocation_nonce
7
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.Square():::ENTER
this_invocation_nonce
9
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::ENTER
this_invocation_nonce
10
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::EXIT0
this_invocation_nonce
10
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.Square():::EXIT0
this_invocation_nonce
9
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.Triangle():::ENTER
this_invocation_nonce
11
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::ENTER
this_invocation_nonce
12
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::EXIT0
this_invocation_nonce
12
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.Triangle():::EXIT0
this_invocation_nonce
11
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.Square():::ENTER
this_invocation_nonce
13
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::ENTER
this_invocation_nonce
14
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::EXIT0
this_invocation_nonce
14
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.Square():::EXIT0
this_invocation_nonce
13
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.Triangle():::ENTER
this_invocation_nonce
15
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::ENTER
this_invocation_nonce
16
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::EXIT0
this_invocation_nonce
16
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.Triangle():::EXIT0
this_invocation_nonce
15
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.Square():::ENTER
this_invocation_nonce
17
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::ENTER
this_invocation_nonce
18
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::EXIT0
this_invocation_nonce
18
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.Square():::EXIT0
this_invocation_nonce
17
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.Triangle():::ENTER
this_invocation_nonce
19
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::ENTER
this_invocation_nonce
20
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.Shape():::EXIT0
this_invocation_nonce
20
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.Triangle():::EXIT0
this_invocation_nonce
19
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.num_sides():::ENTER
this_invocation_nonce
21
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.num_sides():::EXIT0
this_invocation_nonce
21
return
4
1
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.num_sides():::ENTER
this_invocation_nonce
22
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.num_sides():::EXIT0
this_invocation_nonce
22
return
3
1
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.num_sides():::ENTER
this_invocation_nonce
23
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.num_sides():::EXIT0
this_invocation_nonce
23
return
4
1
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.num_sides():::ENTER
this_invocation_nonce
24
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.num_sides():::EXIT0
this_invocation_nonce
24
return
3
1
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.num_sides():::ENTER
this_invocation_nonce
25
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.num_sides():::EXIT0
this_invocation_nonce
25
return
4
1
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.num_sides():::ENTER
this_invocation_nonce
26
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.num_sides():::EXIT0
this_invocation_nonce
26
return
3
1
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.num_sides():::ENTER
this_invocation_nonce
27
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.num_sides():::EXIT0
this_invocation_nonce
27
return
4
1
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.num_sides():::ENTER
this_invocation_nonce
28
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.num_sides():::EXIT0
this_invocation_nonce
28
return
3
1
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.num_sides():::ENTER
this_invocation_nonce
29
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.num_sides():::EXIT0
this_invocation_nonce
29
return
4
1
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.num_sides():::ENTER
this_invocation_nonce
30
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.num_sides():::EXIT0
this_invocation_nonce
30
return
3
1
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.compare(Shape*,\_Shape*):::ENTER
this_invocation_nonce
31
s1
<HEAP_ADDR>
1
s1[..]
[ <HEAP_ADDR> ]
1
s2
<HEAP_ADDR>
1
s2[..]
[ <HEAP_ADDR> ]
1

Square.num_sides():::ENTER
this_invocation_nonce
32
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.num_sides():::EXIT0
this_invocation_nonce
32
return
4
1
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.num_sides():::ENTER
this_invocation_nonce
33
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Triangle.num_sides():::EXIT0
this_invocation_nonce
33
return
3
1
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.compare(Shape*,\_Shape*):::EXIT0
this_invocation_nonce
31
return
0
1
s1
<HEAP_ADDR>
1
s1[..]
[ <HEAP_ADDR> ]
1
s2
<HEAP_ADDR>
1
s2[..]
[ <HEAP_ADDR> ]
1

Shape.compare(Shape*,\_Shape*):::ENTER
this_invocation_nonce
34
s1
<HEAP_ADDR>
1
s1[..]
[ <HEAP_ADDR> ]
1
s2
<HEAP_ADDR>
1
s2[..]
[ <HEAP_ADDR> ]
1

Square.num_sides():::ENTER
this_invocation_nonce
35
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.num_sides():::EXIT0
this_invocation_nonce
35
return
4
1
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.num_sides():::ENTER
this_invocation_nonce
36
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Square.num_sides():::EXIT0
this_invocation_nonce
36
return
4
1
this
<HEAP_ADDR>
1
this[0]
<HEAP_ADDR>
1

Shape.compare(Shape*,\_Shape*):::EXIT0
this_invocation_nonce
34
return
1
1
s1
<HEAP_ADDR>
1
s1[..]
[ <HEAP_ADDR> ]
1
s2
<HEAP_ADDR>
1
s2[..]
[ <HEAP_ADDR> ]
1

..main():::EXIT0
this_invocation_nonce
0
argc
1
1
argv
<STACK_ADDR>
1
argv[..]
[ "./virtual-method" ]
1
return
0
1

