input-language C/C++
decl-version 2.0
var-comparability none

ppt ..main():::ENTER
  ppt-type enter
  variable ::globalBetterFoo
    var-kind variable
    rep-type hashcode
    dec-type betterFoo
  variable ::globalBetterFoo.betterAge
    var-kind field betterAge
    enclosing-var ::globalBetterFoo
    rep-type int
    dec-type long
  variable ::globalBetterFoo.betterName
    var-kind field betterName
    enclosing-var ::globalBetterFoo
    rep-type string
    dec-type char*
  variable ::globalBetterFoo.namedBar
    var-kind field namedBar
    enclosing-var ::globalBetterFoo
    rep-type hashcode
    dec-type betterBar
  variable ::globalBetterFoo.namedBar.betterA
    var-kind field betterA
    enclosing-var ::globalBetterFoo.namedBar
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.betterB
    var-kind field betterB
    enclosing-var ::globalBetterFoo.namedBar
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.crappyFoo
    var-kind field crappyFoo
    enclosing-var ::globalBetterFoo.namedBar
    rep-type hashcode
    dec-type foo
  variable ::globalBetterFoo.namedBar.crappyFoo.age
    var-kind field age
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.crappyFoo.b
    var-kind field b
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo
    rep-type hashcode
    dec-type bar
  variable ::globalBetterFoo.namedBar.crappyFoo.b.a
    var-kind field a
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo.b
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.crappyFoo.b.b
    var-kind field b
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo.b
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.crappyFoo.name
    var-kind field name
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo
    rep-type string
    dec-type char*
  variable ::globalBetterFoo.namedBar.myBazzz
    var-kind field myBazzz
    enclosing-var ::globalBetterFoo.namedBar
    rep-type hashcode
    dec-type bazzz
  variable ::globalBetterFoo.namedBar.myBazzz.hello
    var-kind field hello
    enclosing-var ::globalBetterFoo.namedBar.myBazzz
    reference-type offset
    rep-type string
    dec-type char*
  variable ::globalBetterFoo.namedBar.myBazzz.world
    var-kind field world
    enclosing-var ::globalBetterFoo.namedBar.myBazzz
    reference-type offset
    rep-type string
    dec-type char*
  variable ::globalFoo
    var-kind variable
    rep-type hashcode
    dec-type foo*
    flags non_null 
  variable ::globalFoo[..]
    var-kind array
    enclosing-var ::globalFoo
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type foo[]
  variable ::globalFoo[..].age
    var-kind field age
    enclosing-var ::globalFoo[..]
    array 1
    rep-type int[]
    dec-type long[]
  variable ::globalFoo[..].b
    var-kind field b
    enclosing-var ::globalFoo[..]
    array 1
    rep-type hashcode[]
    dec-type bar[]
  variable ::globalFoo[..].b.a
    var-kind field a
    enclosing-var ::globalFoo[..].b
    array 1
    rep-type int[]
    dec-type long[]
  variable ::globalFoo[..].b.b
    var-kind field b
    enclosing-var ::globalFoo[..].b
    array 1
    rep-type int[]
    dec-type long[]
  variable ::globalFoo[..].name
    var-kind field name
    enclosing-var ::globalFoo[..]
    array 1
    rep-type string[]
    dec-type char*[]

ppt ..main():::EXIT0
  ppt-type subexit
  variable ::globalBetterFoo
    var-kind variable
    rep-type hashcode
    dec-type betterFoo
  variable ::globalBetterFoo.betterAge
    var-kind field betterAge
    enclosing-var ::globalBetterFoo
    rep-type int
    dec-type long
  variable ::globalBetterFoo.betterName
    var-kind field betterName
    enclosing-var ::globalBetterFoo
    rep-type string
    dec-type char*
  variable ::globalBetterFoo.namedBar
    var-kind field namedBar
    enclosing-var ::globalBetterFoo
    rep-type hashcode
    dec-type betterBar
  variable ::globalBetterFoo.namedBar.betterA
    var-kind field betterA
    enclosing-var ::globalBetterFoo.namedBar
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.betterB
    var-kind field betterB
    enclosing-var ::globalBetterFoo.namedBar
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.crappyFoo
    var-kind field crappyFoo
    enclosing-var ::globalBetterFoo.namedBar
    rep-type hashcode
    dec-type foo
  variable ::globalBetterFoo.namedBar.crappyFoo.age
    var-kind field age
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.crappyFoo.b
    var-kind field b
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo
    rep-type hashcode
    dec-type bar
  variable ::globalBetterFoo.namedBar.crappyFoo.b.a
    var-kind field a
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo.b
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.crappyFoo.b.b
    var-kind field b
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo.b
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.crappyFoo.name
    var-kind field name
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo
    rep-type string
    dec-type char*
  variable ::globalBetterFoo.namedBar.myBazzz
    var-kind field myBazzz
    enclosing-var ::globalBetterFoo.namedBar
    rep-type hashcode
    dec-type bazzz
  variable ::globalBetterFoo.namedBar.myBazzz.hello
    var-kind field hello
    enclosing-var ::globalBetterFoo.namedBar.myBazzz
    reference-type offset
    rep-type string
    dec-type char*
  variable ::globalBetterFoo.namedBar.myBazzz.world
    var-kind field world
    enclosing-var ::globalBetterFoo.namedBar.myBazzz
    reference-type offset
    rep-type string
    dec-type char*
  variable ::globalFoo
    var-kind variable
    rep-type hashcode
    dec-type foo*
    flags non_null 
  variable ::globalFoo[..]
    var-kind array
    enclosing-var ::globalFoo
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type foo[]
  variable ::globalFoo[..].age
    var-kind field age
    enclosing-var ::globalFoo[..]
    array 1
    rep-type int[]
    dec-type long[]
  variable ::globalFoo[..].b
    var-kind field b
    enclosing-var ::globalFoo[..]
    array 1
    rep-type hashcode[]
    dec-type bar[]
  variable ::globalFoo[..].b.a
    var-kind field a
    enclosing-var ::globalFoo[..].b
    array 1
    rep-type int[]
    dec-type long[]
  variable ::globalFoo[..].b.b
    var-kind field b
    enclosing-var ::globalFoo[..].b
    array 1
    rep-type int[]
    dec-type long[]
  variable ::globalFoo[..].name
    var-kind field name
    enclosing-var ::globalFoo[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable return
    var-kind variable
    rep-type int
    dec-type int

ppt ..returnF():::ENTER
  ppt-type enter
  variable ::globalBetterFoo
    var-kind variable
    rep-type hashcode
    dec-type betterFoo
  variable ::globalBetterFoo.betterAge
    var-kind field betterAge
    enclosing-var ::globalBetterFoo
    rep-type int
    dec-type long
  variable ::globalBetterFoo.betterName
    var-kind field betterName
    enclosing-var ::globalBetterFoo
    rep-type string
    dec-type char*
  variable ::globalBetterFoo.namedBar
    var-kind field namedBar
    enclosing-var ::globalBetterFoo
    rep-type hashcode
    dec-type betterBar
  variable ::globalBetterFoo.namedBar.betterA
    var-kind field betterA
    enclosing-var ::globalBetterFoo.namedBar
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.betterB
    var-kind field betterB
    enclosing-var ::globalBetterFoo.namedBar
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.crappyFoo
    var-kind field crappyFoo
    enclosing-var ::globalBetterFoo.namedBar
    rep-type hashcode
    dec-type foo
  variable ::globalBetterFoo.namedBar.crappyFoo.age
    var-kind field age
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.crappyFoo.b
    var-kind field b
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo
    rep-type hashcode
    dec-type bar
  variable ::globalBetterFoo.namedBar.crappyFoo.b.a
    var-kind field a
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo.b
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.crappyFoo.b.b
    var-kind field b
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo.b
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.crappyFoo.name
    var-kind field name
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo
    rep-type string
    dec-type char*
  variable ::globalBetterFoo.namedBar.myBazzz
    var-kind field myBazzz
    enclosing-var ::globalBetterFoo.namedBar
    rep-type hashcode
    dec-type bazzz
  variable ::globalBetterFoo.namedBar.myBazzz.hello
    var-kind field hello
    enclosing-var ::globalBetterFoo.namedBar.myBazzz
    reference-type offset
    rep-type string
    dec-type char*
  variable ::globalBetterFoo.namedBar.myBazzz.world
    var-kind field world
    enclosing-var ::globalBetterFoo.namedBar.myBazzz
    reference-type offset
    rep-type string
    dec-type char*
  variable ::globalFoo
    var-kind variable
    rep-type hashcode
    dec-type foo*
    flags non_null 
  variable ::globalFoo[..]
    var-kind array
    enclosing-var ::globalFoo
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type foo[]
  variable ::globalFoo[..].age
    var-kind field age
    enclosing-var ::globalFoo[..]
    array 1
    rep-type int[]
    dec-type long[]
  variable ::globalFoo[..].b
    var-kind field b
    enclosing-var ::globalFoo[..]
    array 1
    rep-type hashcode[]
    dec-type bar[]
  variable ::globalFoo[..].b.a
    var-kind field a
    enclosing-var ::globalFoo[..].b
    array 1
    rep-type int[]
    dec-type long[]
  variable ::globalFoo[..].b.b
    var-kind field b
    enclosing-var ::globalFoo[..].b
    array 1
    rep-type int[]
    dec-type long[]
  variable ::globalFoo[..].name
    var-kind field name
    enclosing-var ::globalFoo[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable blah
    var-kind variable
    rep-type hashcode
    dec-type long*
    flags is_param 
  variable blah[..]
    var-kind array
    enclosing-var blah
    array 1
    rep-type int[]
    dec-type long[]
  variable f
    var-kind variable
    rep-type hashcode
    dec-type foo*
    flags is_param 
  variable f[..]
    var-kind array
    enclosing-var f
    array 1
    rep-type hashcode[]
    dec-type foo[]
  variable f[..].age
    var-kind field age
    enclosing-var f[..]
    array 1
    rep-type int[]
    dec-type long[]
  variable f[..].b
    var-kind field b
    enclosing-var f[..]
    array 1
    rep-type hashcode[]
    dec-type bar[]
  variable f[..].b.a
    var-kind field a
    enclosing-var f[..].b
    array 1
    rep-type int[]
    dec-type long[]
  variable f[..].b.b
    var-kind field b
    enclosing-var f[..].b
    array 1
    rep-type int[]
    dec-type long[]
  variable f[..].name
    var-kind field name
    enclosing-var f[..]
    array 1
    rep-type string[]
    dec-type char*[]

ppt ..returnF():::EXIT0
  ppt-type subexit
  variable ::globalBetterFoo
    var-kind variable
    rep-type hashcode
    dec-type betterFoo
  variable ::globalBetterFoo.betterAge
    var-kind field betterAge
    enclosing-var ::globalBetterFoo
    rep-type int
    dec-type long
  variable ::globalBetterFoo.betterName
    var-kind field betterName
    enclosing-var ::globalBetterFoo
    rep-type string
    dec-type char*
  variable ::globalBetterFoo.namedBar
    var-kind field namedBar
    enclosing-var ::globalBetterFoo
    rep-type hashcode
    dec-type betterBar
  variable ::globalBetterFoo.namedBar.betterA
    var-kind field betterA
    enclosing-var ::globalBetterFoo.namedBar
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.betterB
    var-kind field betterB
    enclosing-var ::globalBetterFoo.namedBar
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.crappyFoo
    var-kind field crappyFoo
    enclosing-var ::globalBetterFoo.namedBar
    rep-type hashcode
    dec-type foo
  variable ::globalBetterFoo.namedBar.crappyFoo.age
    var-kind field age
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.crappyFoo.b
    var-kind field b
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo
    rep-type hashcode
    dec-type bar
  variable ::globalBetterFoo.namedBar.crappyFoo.b.a
    var-kind field a
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo.b
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.crappyFoo.b.b
    var-kind field b
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo.b
    rep-type int
    dec-type long
  variable ::globalBetterFoo.namedBar.crappyFoo.name
    var-kind field name
    enclosing-var ::globalBetterFoo.namedBar.crappyFoo
    rep-type string
    dec-type char*
  variable ::globalBetterFoo.namedBar.myBazzz
    var-kind field myBazzz
    enclosing-var ::globalBetterFoo.namedBar
    rep-type hashcode
    dec-type bazzz
  variable ::globalBetterFoo.namedBar.myBazzz.hello
    var-kind field hello
    enclosing-var ::globalBetterFoo.namedBar.myBazzz
    reference-type offset
    rep-type string
    dec-type char*
  variable ::globalBetterFoo.namedBar.myBazzz.world
    var-kind field world
    enclosing-var ::globalBetterFoo.namedBar.myBazzz
    reference-type offset
    rep-type string
    dec-type char*
  variable ::globalFoo
    var-kind variable
    rep-type hashcode
    dec-type foo*
    flags non_null 
  variable ::globalFoo[..]
    var-kind array
    enclosing-var ::globalFoo
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type foo[]
  variable ::globalFoo[..].age
    var-kind field age
    enclosing-var ::globalFoo[..]
    array 1
    rep-type int[]
    dec-type long[]
  variable ::globalFoo[..].b
    var-kind field b
    enclosing-var ::globalFoo[..]
    array 1
    rep-type hashcode[]
    dec-type bar[]
  variable ::globalFoo[..].b.a
    var-kind field a
    enclosing-var ::globalFoo[..].b
    array 1
    rep-type int[]
    dec-type long[]
  variable ::globalFoo[..].b.b
    var-kind field b
    enclosing-var ::globalFoo[..].b
    array 1
    rep-type int[]
    dec-type long[]
  variable ::globalFoo[..].name
    var-kind field name
    enclosing-var ::globalFoo[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable blah
    var-kind variable
    rep-type hashcode
    dec-type long*
    flags is_param 
  variable blah[..]
    var-kind array
    enclosing-var blah
    array 1
    rep-type int[]
    dec-type long[]
  variable f
    var-kind variable
    rep-type hashcode
    dec-type foo*
    flags is_param 
  variable f[..]
    var-kind array
    enclosing-var f
    array 1
    rep-type hashcode[]
    dec-type foo[]
  variable f[..].age
    var-kind field age
    enclosing-var f[..]
    array 1
    rep-type int[]
    dec-type long[]
  variable f[..].b
    var-kind field b
    enclosing-var f[..]
    array 1
    rep-type hashcode[]
    dec-type bar[]
  variable f[..].b.a
    var-kind field a
    enclosing-var f[..].b
    array 1
    rep-type int[]
    dec-type long[]
  variable f[..].b.b
    var-kind field b
    enclosing-var f[..].b
    array 1
    rep-type int[]
    dec-type long[]
  variable f[..].name
    var-kind field name
    enclosing-var f[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable return
    var-kind variable
    rep-type hashcode
    dec-type foo*
  variable return[..]
    var-kind array
    enclosing-var return
    array 1
    rep-type hashcode[]
    dec-type foo[]
  variable return[..].age
    var-kind field age
    enclosing-var return[..]
    array 1
    rep-type int[]
    dec-type long[]
  variable return[..].b
    var-kind field b
    enclosing-var return[..]
    array 1
    rep-type hashcode[]
    dec-type bar[]
  variable return[..].b.a
    var-kind field a
    enclosing-var return[..].b
    array 1
    rep-type int[]
    dec-type long[]
  variable return[..].b.b
    var-kind field b
    enclosing-var return[..].b
    array 1
    rep-type int[]
    dec-type long[]
  variable return[..].name
    var-kind field name
    enclosing-var return[..]
    array 1
    rep-type string[]
    dec-type char*[]

