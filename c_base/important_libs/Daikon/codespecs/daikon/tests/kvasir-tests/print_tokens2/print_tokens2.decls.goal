input-language C/C++
decl-version 2.0
var-comparability none

ppt ..get_char():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]

ppt ..get_char():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable return
    var-kind variable
    rep-type int
    dec-type char

ppt ..get_token():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable tp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable tp[..]
    var-kind array
    enclosing-var tp
    array 1
    rep-type hashcode[]
    dec-type void[]

ppt ..get_token():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable return
    var-kind variable
    rep-type string
    dec-type char*
  variable tp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable tp[..]
    var-kind array
    enclosing-var tp
    array 1
    rep-type hashcode[]
    dec-type void[]

ppt ..is_eof_token():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable tok
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt ..is_eof_token():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable tok
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt ..main():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable argc
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable argv
    var-kind variable
    rep-type hashcode
    dec-type char**
    flags is_param 
  variable argv[..]
    var-kind array
    enclosing-var argv
    array 1
    rep-type string[]
    dec-type char*[]

ppt ..main():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable argc
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable argv
    var-kind variable
    rep-type hashcode
    dec-type char**
    flags is_param 
  variable argv[..]
    var-kind array
    enclosing-var argv
    array 1
    rep-type string[]
    dec-type char*[]
  variable return
    var-kind variable
    rep-type int
    dec-type int

ppt ..open_character_stream():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable fname
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt ..open_character_stream():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable fname
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable return
    var-kind variable
    rep-type hashcode
    dec-type void*
  variable return[..]
    var-kind array
    enclosing-var return
    array 1
    rep-type hashcode[]
    dec-type void[]

ppt ..open_token_stream():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable fname
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt ..open_token_stream():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable fname
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable return
    var-kind variable
    rep-type hashcode
    dec-type void*
  variable return[..]
    var-kind array
    enclosing-var return
    array 1
    rep-type hashcode[]
    dec-type void[]

ppt ..print_token():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable tok
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt ..print_token():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable tok
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt ..unget_char():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ch
    var-kind variable
    rep-type int
    dec-type char
    flags is_param 
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]

ppt ..unget_char():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ch
    var-kind variable
    rep-type int
    dec-type char
    flags is_param 
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable return
    var-kind variable
    rep-type int
    dec-type char

ppt print_tokens2.c.is_char_constant():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable str
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt print_tokens2.c.is_char_constant():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable str
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt print_tokens2.c.is_comment():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ident
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt print_tokens2.c.is_comment():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ident
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable return
    var-kind variable
    rep-type int
    dec-type int

ppt print_tokens2.c.is_identifier():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable str
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt print_tokens2.c.is_identifier():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable str
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt print_tokens2.c.is_keyword():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable str
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt print_tokens2.c.is_keyword():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable str
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt print_tokens2.c.is_num_constant():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable str
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt print_tokens2.c.is_num_constant():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable str
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt print_tokens2.c.is_spec_symbol():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable str
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt print_tokens2.c.is_spec_symbol():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable str
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt print_tokens2.c.is_str_constant():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable str
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt print_tokens2.c.is_str_constant():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable str
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt print_tokens2.c.is_token_end():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ch
    var-kind variable
    rep-type int
    dec-type char
    flags is_param 
  variable str_com_id
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt print_tokens2.c.is_token_end():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ch
    var-kind variable
    rep-type int
    dec-type char
    flags is_param 
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable str_com_id
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt print_tokens2.c.print_spec_symbol():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable str
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt print_tokens2.c.print_spec_symbol():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable str
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt print_tokens2.c.token_type():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable tok
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt print_tokens2.c.token_type():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable tok
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt print_tokens2.c.unget_error():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void**
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void*[]
  variable fp[..][0]
    var-kind field [0]
    enclosing-var fp[..]
    array 1
    rep-type hashcode[]
    dec-type void[]

ppt print_tokens2.c.unget_error():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void**
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void*[]
  variable fp[..][0]
    var-kind field [0]
    enclosing-var fp[..]
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable return
    var-kind variable
    rep-type int
    dec-type int

