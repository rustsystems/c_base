input-language C/C++
decl-version 2.0
var-comparability none

ppt ..doubleAdd():::ENTER
  ppt-type enter
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]
  variable a
    var-kind variable
    rep-type double
    dec-type double
    flags is_param 
  variable b
    var-kind variable
    rep-type double
    dec-type double
    flags is_param 

ppt ..doubleAdd():::EXIT0
  ppt-type subexit
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]
  variable a
    var-kind variable
    rep-type double
    dec-type double
    flags is_param 
  variable b
    var-kind variable
    rep-type double
    dec-type double
    flags is_param 
  variable return
    var-kind variable
    rep-type double
    dec-type double

ppt ..doubleDivide():::ENTER
  ppt-type enter
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]
  variable a
    var-kind variable
    rep-type double
    dec-type double
    flags is_param 
  variable b
    var-kind variable
    rep-type double
    dec-type double
    flags is_param 

ppt ..doubleDivide():::EXIT0
  ppt-type subexit
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]
  variable a
    var-kind variable
    rep-type double
    dec-type double
    flags is_param 
  variable b
    var-kind variable
    rep-type double
    dec-type double
    flags is_param 
  variable return
    var-kind variable
    rep-type double
    dec-type double

ppt ..doubleMultiply():::ENTER
  ppt-type enter
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]
  variable a
    var-kind variable
    rep-type double
    dec-type double
    flags is_param 
  variable b
    var-kind variable
    rep-type double
    dec-type double
    flags is_param 

ppt ..doubleMultiply():::EXIT0
  ppt-type subexit
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]
  variable a
    var-kind variable
    rep-type double
    dec-type double
    flags is_param 
  variable b
    var-kind variable
    rep-type double
    dec-type double
    flags is_param 
  variable return
    var-kind variable
    rep-type double
    dec-type double

ppt ..doubleSub():::ENTER
  ppt-type enter
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]
  variable a
    var-kind variable
    rep-type double
    dec-type double
    flags is_param 
  variable b
    var-kind variable
    rep-type double
    dec-type double
    flags is_param 

ppt ..doubleSub():::EXIT0
  ppt-type subexit
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]
  variable a
    var-kind variable
    rep-type double
    dec-type double
    flags is_param 
  variable b
    var-kind variable
    rep-type double
    dec-type double
    flags is_param 
  variable return
    var-kind variable
    rep-type double
    dec-type double

ppt ..floatAdd():::ENTER
  ppt-type enter
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]
  variable a
    var-kind variable
    rep-type double
    dec-type float
    flags is_param 
  variable b
    var-kind variable
    rep-type double
    dec-type float
    flags is_param 

ppt ..floatAdd():::EXIT0
  ppt-type subexit
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]
  variable a
    var-kind variable
    rep-type double
    dec-type float
    flags is_param 
  variable b
    var-kind variable
    rep-type double
    dec-type float
    flags is_param 
  variable return
    var-kind variable
    rep-type double
    dec-type float

ppt ..floatDivide():::ENTER
  ppt-type enter
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]
  variable a
    var-kind variable
    rep-type double
    dec-type float
    flags is_param 
  variable b
    var-kind variable
    rep-type double
    dec-type float
    flags is_param 

ppt ..floatDivide():::EXIT0
  ppt-type subexit
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]
  variable a
    var-kind variable
    rep-type double
    dec-type float
    flags is_param 
  variable b
    var-kind variable
    rep-type double
    dec-type float
    flags is_param 
  variable return
    var-kind variable
    rep-type double
    dec-type float

ppt ..floatMultiply():::ENTER
  ppt-type enter
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]
  variable a
    var-kind variable
    rep-type double
    dec-type float
    flags is_param 
  variable b
    var-kind variable
    rep-type double
    dec-type float
    flags is_param 

ppt ..floatMultiply():::EXIT0
  ppt-type subexit
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]
  variable a
    var-kind variable
    rep-type double
    dec-type float
    flags is_param 
  variable b
    var-kind variable
    rep-type double
    dec-type float
    flags is_param 
  variable return
    var-kind variable
    rep-type double
    dec-type float

ppt ..floatSub():::ENTER
  ppt-type enter
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]
  variable a
    var-kind variable
    rep-type double
    dec-type float
    flags is_param 
  variable b
    var-kind variable
    rep-type double
    dec-type float
    flags is_param 

ppt ..floatSub():::EXIT0
  ppt-type subexit
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]
  variable a
    var-kind variable
    rep-type double
    dec-type float
    flags is_param 
  variable b
    var-kind variable
    rep-type double
    dec-type float
    flags is_param 
  variable return
    var-kind variable
    rep-type double
    dec-type float

ppt ..main():::ENTER
  ppt-type enter
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]

ppt ..main():::EXIT0
  ppt-type subexit
  variable ::globalDouble
    var-kind variable
    rep-type hashcode
    dec-type double*
    flags non_null 
  variable ::globalDouble[..]
    var-kind array
    enclosing-var ::globalDouble
    reference-type offset
    array 1
    rep-type double[]
    dec-type double[]
  variable return
    var-kind variable
    rep-type int
    dec-type int

