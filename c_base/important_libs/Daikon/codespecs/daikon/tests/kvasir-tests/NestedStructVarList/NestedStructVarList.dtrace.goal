input-language C/C++
decl-version 2.0
var-comparability none

..main():::ENTER
this_invocation_nonce
0
::counters
0x0
1
::counters[..]
nonsensical
2
::counters[..].a
nonsensical
2
::sum
0
1

..check():::ENTER
this_invocation_nonce
1
::counters
<HEAP_ADDR>
1
::counters[..]
[ <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> ]
1
::counters[..].a
[ 0 0 0 0 0 0 0 0 0 0 ]
1
::sum
0
1

..check():::EXIT0
this_invocation_nonce
1
::counters
<HEAP_ADDR>
1
::counters[..]
[ <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> ]
1
::counters[..].a
[ 0 0 0 0 0 0 0 0 0 0 ]
1
::sum
0
1

..check():::ENTER
this_invocation_nonce
2
::counters
<HEAP_ADDR>
1
::counters[..]
[ <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> ]
1
::counters[..].a
[ 1 0 0 0 0 0 0 0 0 0 ]
1
::sum
1
1

..check():::EXIT0
this_invocation_nonce
2
::counters
<HEAP_ADDR>
1
::counters[..]
[ <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> ]
1
::counters[..].a
[ 1 0 0 0 0 0 0 0 0 0 ]
1
::sum
1
1

..check():::ENTER
this_invocation_nonce
3
::counters
<HEAP_ADDR>
1
::counters[..]
[ <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> ]
1
::counters[..].a
[ 1 0 0 0 0 1 0 0 0 0 ]
1
::sum
2
1

..check():::EXIT0
this_invocation_nonce
3
::counters
<HEAP_ADDR>
1
::counters[..]
[ <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> ]
1
::counters[..].a
[ 1 0 0 0 0 1 0 0 0 0 ]
1
::sum
2
1

..check():::ENTER
this_invocation_nonce
4
::counters
<HEAP_ADDR>
1
::counters[..]
[ <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> ]
1
::counters[..].a
[ 1 0 0 0 0 1 0 0 0 100 ]
1
::sum
102
1

..check():::EXIT0
this_invocation_nonce
4
::counters
<HEAP_ADDR>
1
::counters[..]
[ <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> ]
1
::counters[..].a
[ 1 0 0 0 0 1 0 0 0 100 ]
1
::sum
102
1

..check():::ENTER
this_invocation_nonce
5
::counters
<HEAP_ADDR>
1
::counters[..]
[ <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> ]
1
::counters[..].a
[ 3 0 0 0 0 1 0 0 0 100 ]
1
::sum
104
1

..check():::EXIT0
this_invocation_nonce
5
::counters
<HEAP_ADDR>
1
::counters[..]
[ <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> ]
1
::counters[..].a
[ 3 0 0 0 0 1 0 0 0 100 ]
1
::sum
104
1

..main():::EXIT0
this_invocation_nonce
0
::counters
<HEAP_ADDR>
1
::counters[..]
[ <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> <HEAP_ADDR> ]
1
::counters[..].a
[ 3 0 0 0 0 1 0 0 0 100 ]
1
::sum
104
1
return
0
1

