input-language C/C++
decl-version 2.0
var-comparability none

ppt ..fooOverload(int):::ENTER
  ppt-type enter
  parent user _buffers:::OBJECT 1
  parent user array_struct:::OBJECT 2
  parent user A:::OBJECT 3
  parent user unnamed_DWARF_ID_1:::OBJECT 4
  parent user unnamed_DWARF_ID_2:::OBJECT 5
  parent user unnamed_DWARF_ID_3:::OBJECT 6
  variable ::abracadabra
    var-kind variable
    rep-type hashcode
    dec-type array_struct
  variable ::abracadabra.MIT_id
    var-kind field MIT_id
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.MIT_id[..]
    var-kind array
    enclosing-var ::abracadabra.MIT_id
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.birthday
    var-kind field birthday
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.birthday[..]
    var-kind array
    enclosing-var ::abracadabra.birthday
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.social_security
    var-kind field social_security
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.social_security[..]
    var-kind array
    enclosing-var ::abracadabra.social_security
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::basicIntArray
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::basicIntArray[..]
    var-kind array
    enclosing-var ::basicIntArray
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::charBuffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ::eightA
    var-kind variable
    rep-type hashcode
    dec-type A*
    flags non_null 
  variable ::eightA[..]
    var-kind array
    enclosing-var ::eightA
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type A[]
  variable ::eightA[..].B[0]
    var-kind field [0]
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[0]->C
    var-kind field C
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[0]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D
    var-kind field D
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[0]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[0]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[0]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[1]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[1]->C
    var-kind field C
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[1]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D
    var-kind field D
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[1]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[1]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[1]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[2]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[2]->C
    var-kind field C
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[2]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D
    var-kind field D
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[2]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[2]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[2]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].foo_head
    var-kind field foo_head
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].foo_tail
    var-kind field foo_tail
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::globalInt
    var-kind variable
    rep-type int
    dec-type int
  variable ::globalIntPtr
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::globalIntPtr[..]
    var-kind array
    enclosing-var ::globalIntPtr
    array 1
    rep-type int[]
    dec-type int[]
  variable ::multiDimensional
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::multiDimensional[..]
    var-kind array
    enclosing-var ::multiDimensional
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
    flags non_null 
  variable ::populationPtr
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
  variable ::populationPtr[..]
    var-kind array
    enclosing-var ::populationPtr
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::populationPtr[..].SS
    var-kind field SS
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::populationPtr[..].age
    var-kind field age
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::populationPtr[..].firstName
    var-kind field firstName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].lastName
    var-kind field lastName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::populationPtr[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].middleName
    var-kind field middleName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].weight
    var-kind field weight
    enclosing-var ::populationPtr[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable ::population[..]
    var-kind array
    enclosing-var ::population
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::population[..].SS
    var-kind field SS
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::population[..].age
    var-kind field age
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population[..].firstName
    var-kind field firstName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].lastName
    var-kind field lastName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::population[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].middleName
    var-kind field middleName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].weight
    var-kind field weight
    enclosing-var ::population[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable over
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt ..fooOverload(int):::EXIT0
  ppt-type subexit
  parent user _buffers:::OBJECT 1
  parent user array_struct:::OBJECT 2
  parent user A:::OBJECT 3
  parent user unnamed_DWARF_ID_1:::OBJECT 4
  parent user unnamed_DWARF_ID_2:::OBJECT 5
  parent user unnamed_DWARF_ID_3:::OBJECT 6
  variable ::abracadabra
    var-kind variable
    rep-type hashcode
    dec-type array_struct
  variable ::abracadabra.MIT_id
    var-kind field MIT_id
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.MIT_id[..]
    var-kind array
    enclosing-var ::abracadabra.MIT_id
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.birthday
    var-kind field birthday
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.birthday[..]
    var-kind array
    enclosing-var ::abracadabra.birthday
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.social_security
    var-kind field social_security
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.social_security[..]
    var-kind array
    enclosing-var ::abracadabra.social_security
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::basicIntArray
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::basicIntArray[..]
    var-kind array
    enclosing-var ::basicIntArray
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::charBuffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ::eightA
    var-kind variable
    rep-type hashcode
    dec-type A*
    flags non_null 
  variable ::eightA[..]
    var-kind array
    enclosing-var ::eightA
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type A[]
  variable ::eightA[..].B[0]
    var-kind field [0]
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[0]->C
    var-kind field C
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[0]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D
    var-kind field D
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[0]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[0]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[0]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[1]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[1]->C
    var-kind field C
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[1]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D
    var-kind field D
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[1]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[1]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[1]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[2]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[2]->C
    var-kind field C
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[2]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D
    var-kind field D
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[2]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[2]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[2]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].foo_head
    var-kind field foo_head
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].foo_tail
    var-kind field foo_tail
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::globalInt
    var-kind variable
    rep-type int
    dec-type int
  variable ::globalIntPtr
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::globalIntPtr[..]
    var-kind array
    enclosing-var ::globalIntPtr
    array 1
    rep-type int[]
    dec-type int[]
  variable ::multiDimensional
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::multiDimensional[..]
    var-kind array
    enclosing-var ::multiDimensional
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
    flags non_null 
  variable ::populationPtr
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
  variable ::populationPtr[..]
    var-kind array
    enclosing-var ::populationPtr
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::populationPtr[..].SS
    var-kind field SS
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::populationPtr[..].age
    var-kind field age
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::populationPtr[..].firstName
    var-kind field firstName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].lastName
    var-kind field lastName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::populationPtr[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].middleName
    var-kind field middleName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].weight
    var-kind field weight
    enclosing-var ::populationPtr[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable ::population[..]
    var-kind array
    enclosing-var ::population
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::population[..].SS
    var-kind field SS
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::population[..].age
    var-kind field age
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population[..].firstName
    var-kind field firstName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].lastName
    var-kind field lastName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::population[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].middleName
    var-kind field middleName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].weight
    var-kind field weight
    enclosing-var ::population[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable over
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable return
    var-kind variable
    rep-type int
    dec-type int

ppt ..fooOverload(short,\_char*):::ENTER
  ppt-type enter
  parent user _buffers:::OBJECT 1
  parent user array_struct:::OBJECT 2
  parent user A:::OBJECT 3
  parent user unnamed_DWARF_ID_1:::OBJECT 4
  parent user unnamed_DWARF_ID_2:::OBJECT 5
  parent user unnamed_DWARF_ID_3:::OBJECT 6
  variable ::abracadabra
    var-kind variable
    rep-type hashcode
    dec-type array_struct
  variable ::abracadabra.MIT_id
    var-kind field MIT_id
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.MIT_id[..]
    var-kind array
    enclosing-var ::abracadabra.MIT_id
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.birthday
    var-kind field birthday
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.birthday[..]
    var-kind array
    enclosing-var ::abracadabra.birthday
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.social_security
    var-kind field social_security
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.social_security[..]
    var-kind array
    enclosing-var ::abracadabra.social_security
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::basicIntArray
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::basicIntArray[..]
    var-kind array
    enclosing-var ::basicIntArray
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::charBuffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ::eightA
    var-kind variable
    rep-type hashcode
    dec-type A*
    flags non_null 
  variable ::eightA[..]
    var-kind array
    enclosing-var ::eightA
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type A[]
  variable ::eightA[..].B[0]
    var-kind field [0]
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[0]->C
    var-kind field C
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[0]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D
    var-kind field D
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[0]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[0]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[0]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[1]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[1]->C
    var-kind field C
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[1]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D
    var-kind field D
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[1]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[1]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[1]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[2]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[2]->C
    var-kind field C
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[2]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D
    var-kind field D
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[2]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[2]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[2]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].foo_head
    var-kind field foo_head
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].foo_tail
    var-kind field foo_tail
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::globalInt
    var-kind variable
    rep-type int
    dec-type int
  variable ::globalIntPtr
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::globalIntPtr[..]
    var-kind array
    enclosing-var ::globalIntPtr
    array 1
    rep-type int[]
    dec-type int[]
  variable ::multiDimensional
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::multiDimensional[..]
    var-kind array
    enclosing-var ::multiDimensional
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
    flags non_null 
  variable ::populationPtr
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
  variable ::populationPtr[..]
    var-kind array
    enclosing-var ::populationPtr
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::populationPtr[..].SS
    var-kind field SS
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::populationPtr[..].age
    var-kind field age
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::populationPtr[..].firstName
    var-kind field firstName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].lastName
    var-kind field lastName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::populationPtr[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].middleName
    var-kind field middleName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].weight
    var-kind field weight
    enclosing-var ::populationPtr[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable ::population[..]
    var-kind array
    enclosing-var ::population
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::population[..].SS
    var-kind field SS
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::population[..].age
    var-kind field age
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population[..].firstName
    var-kind field firstName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].lastName
    var-kind field lastName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::population[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].middleName
    var-kind field middleName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].weight
    var-kind field weight
    enclosing-var ::population[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable ed
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable load
    var-kind variable
    rep-type int
    dec-type short
    flags is_param 

ppt ..fooOverload(short,\_char*):::EXIT0
  ppt-type subexit
  parent user _buffers:::OBJECT 1
  parent user array_struct:::OBJECT 2
  parent user A:::OBJECT 3
  parent user unnamed_DWARF_ID_1:::OBJECT 4
  parent user unnamed_DWARF_ID_2:::OBJECT 5
  parent user unnamed_DWARF_ID_3:::OBJECT 6
  variable ::abracadabra
    var-kind variable
    rep-type hashcode
    dec-type array_struct
  variable ::abracadabra.MIT_id
    var-kind field MIT_id
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.MIT_id[..]
    var-kind array
    enclosing-var ::abracadabra.MIT_id
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.birthday
    var-kind field birthday
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.birthday[..]
    var-kind array
    enclosing-var ::abracadabra.birthday
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.social_security
    var-kind field social_security
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.social_security[..]
    var-kind array
    enclosing-var ::abracadabra.social_security
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::basicIntArray
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::basicIntArray[..]
    var-kind array
    enclosing-var ::basicIntArray
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::charBuffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ::eightA
    var-kind variable
    rep-type hashcode
    dec-type A*
    flags non_null 
  variable ::eightA[..]
    var-kind array
    enclosing-var ::eightA
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type A[]
  variable ::eightA[..].B[0]
    var-kind field [0]
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[0]->C
    var-kind field C
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[0]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D
    var-kind field D
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[0]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[0]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[0]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[1]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[1]->C
    var-kind field C
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[1]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D
    var-kind field D
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[1]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[1]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[1]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[2]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[2]->C
    var-kind field C
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[2]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D
    var-kind field D
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[2]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[2]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[2]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].foo_head
    var-kind field foo_head
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].foo_tail
    var-kind field foo_tail
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::globalInt
    var-kind variable
    rep-type int
    dec-type int
  variable ::globalIntPtr
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::globalIntPtr[..]
    var-kind array
    enclosing-var ::globalIntPtr
    array 1
    rep-type int[]
    dec-type int[]
  variable ::multiDimensional
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::multiDimensional[..]
    var-kind array
    enclosing-var ::multiDimensional
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
    flags non_null 
  variable ::populationPtr
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
  variable ::populationPtr[..]
    var-kind array
    enclosing-var ::populationPtr
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::populationPtr[..].SS
    var-kind field SS
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::populationPtr[..].age
    var-kind field age
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::populationPtr[..].firstName
    var-kind field firstName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].lastName
    var-kind field lastName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::populationPtr[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].middleName
    var-kind field middleName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].weight
    var-kind field weight
    enclosing-var ::populationPtr[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable ::population[..]
    var-kind array
    enclosing-var ::population
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::population[..].SS
    var-kind field SS
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::population[..].age
    var-kind field age
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population[..].firstName
    var-kind field firstName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].lastName
    var-kind field lastName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::population[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].middleName
    var-kind field middleName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].weight
    var-kind field weight
    enclosing-var ::population[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable ed
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable load
    var-kind variable
    rep-type int
    dec-type short
    flags is_param 
  variable return
    var-kind variable
    rep-type int
    dec-type int

ppt ..main():::ENTER
  ppt-type enter
  parent user _buffers:::OBJECT 1
  parent user array_struct:::OBJECT 2
  parent user A:::OBJECT 3
  parent user unnamed_DWARF_ID_1:::OBJECT 4
  parent user unnamed_DWARF_ID_2:::OBJECT 5
  parent user unnamed_DWARF_ID_3:::OBJECT 6
  variable ::abracadabra
    var-kind variable
    rep-type hashcode
    dec-type array_struct
  variable ::abracadabra.MIT_id
    var-kind field MIT_id
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.MIT_id[..]
    var-kind array
    enclosing-var ::abracadabra.MIT_id
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.birthday
    var-kind field birthday
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.birthday[..]
    var-kind array
    enclosing-var ::abracadabra.birthday
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.social_security
    var-kind field social_security
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.social_security[..]
    var-kind array
    enclosing-var ::abracadabra.social_security
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::basicIntArray
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::basicIntArray[..]
    var-kind array
    enclosing-var ::basicIntArray
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA
    var-kind variable
    rep-type hashcode
    dec-type A*
    flags non_null 
  variable ::eightA[..]
    var-kind array
    enclosing-var ::eightA
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type A[]
  variable ::eightA[..].B[0]
    var-kind field [0]
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[0]->C
    var-kind field C
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[0]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D
    var-kind field D
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[0]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[0]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[0]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[1]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[1]->C
    var-kind field C
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[1]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D
    var-kind field D
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[1]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[1]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[1]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[2]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[2]->C
    var-kind field C
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[2]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D
    var-kind field D
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[2]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[2]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[2]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].foo_head
    var-kind field foo_head
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].foo_tail
    var-kind field foo_tail
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::globalInt
    var-kind variable
    rep-type int
    dec-type int
  variable ::globalIntPtr
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::globalIntPtr[..]
    var-kind array
    enclosing-var ::globalIntPtr
    array 1
    rep-type int[]
    dec-type int[]
  variable ::multiDimensional
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::multiDimensional[..]
    var-kind array
    enclosing-var ::multiDimensional
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
    flags non_null 
  variable ::populationPtr
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
  variable ::populationPtr[..]
    var-kind array
    enclosing-var ::populationPtr
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::populationPtr[..].SS
    var-kind field SS
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::populationPtr[..].age
    var-kind field age
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::populationPtr[..].firstName
    var-kind field firstName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].lastName
    var-kind field lastName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::populationPtr[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].middleName
    var-kind field middleName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].weight
    var-kind field weight
    enclosing-var ::populationPtr[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable ::population[..]
    var-kind array
    enclosing-var ::population
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::population[..].SS
    var-kind field SS
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::population[..].age
    var-kind field age
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population[..].firstName
    var-kind field firstName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].lastName
    var-kind field lastName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::population[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].middleName
    var-kind field middleName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].weight
    var-kind field weight
    enclosing-var ::population[..]
    array 1
    rep-type double[]
    dec-type double[]

ppt ..main():::EXIT0
  ppt-type subexit
  parent user _buffers:::OBJECT 1
  parent user array_struct:::OBJECT 2
  parent user A:::OBJECT 3
  parent user unnamed_DWARF_ID_1:::OBJECT 4
  parent user unnamed_DWARF_ID_2:::OBJECT 5
  parent user unnamed_DWARF_ID_3:::OBJECT 6
  variable ::abracadabra
    var-kind variable
    rep-type hashcode
    dec-type array_struct
  variable ::abracadabra.MIT_id
    var-kind field MIT_id
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.MIT_id[..]
    var-kind array
    enclosing-var ::abracadabra.MIT_id
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.birthday
    var-kind field birthday
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.birthday[..]
    var-kind array
    enclosing-var ::abracadabra.birthday
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.social_security
    var-kind field social_security
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.social_security[..]
    var-kind array
    enclosing-var ::abracadabra.social_security
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::basicIntArray
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::basicIntArray[..]
    var-kind array
    enclosing-var ::basicIntArray
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA
    var-kind variable
    rep-type hashcode
    dec-type A*
    flags non_null 
  variable ::eightA[..]
    var-kind array
    enclosing-var ::eightA
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type A[]
  variable ::eightA[..].B[0]
    var-kind field [0]
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[0]->C
    var-kind field C
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[0]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D
    var-kind field D
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[0]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[0]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[0]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[1]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[1]->C
    var-kind field C
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[1]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D
    var-kind field D
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[1]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[1]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[1]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[2]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[2]->C
    var-kind field C
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[2]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D
    var-kind field D
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[2]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[2]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[2]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].foo_head
    var-kind field foo_head
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].foo_tail
    var-kind field foo_tail
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::globalInt
    var-kind variable
    rep-type int
    dec-type int
  variable ::globalIntPtr
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::globalIntPtr[..]
    var-kind array
    enclosing-var ::globalIntPtr
    array 1
    rep-type int[]
    dec-type int[]
  variable ::multiDimensional
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::multiDimensional[..]
    var-kind array
    enclosing-var ::multiDimensional
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
    flags non_null 
  variable ::populationPtr
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
  variable ::populationPtr[..]
    var-kind array
    enclosing-var ::populationPtr
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::populationPtr[..].SS
    var-kind field SS
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::populationPtr[..].age
    var-kind field age
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::populationPtr[..].firstName
    var-kind field firstName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].lastName
    var-kind field lastName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::populationPtr[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].middleName
    var-kind field middleName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].weight
    var-kind field weight
    enclosing-var ::populationPtr[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable ::population[..]
    var-kind array
    enclosing-var ::population
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::population[..].SS
    var-kind field SS
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::population[..].age
    var-kind field age
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population[..].firstName
    var-kind field firstName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].lastName
    var-kind field lastName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::population[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].middleName
    var-kind field middleName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].weight
    var-kind field weight
    enclosing-var ::population[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable return
    var-kind variable
    rep-type int
    dec-type int

ppt ..structTester(A,\__buffers,\__buffers*,\_int,\_int*):::ENTER
  ppt-type enter
  parent user _buffers:::OBJECT 1
  parent user array_struct:::OBJECT 2
  parent user A:::OBJECT 3
  parent user unnamed_DWARF_ID_1:::OBJECT 4
  parent user unnamed_DWARF_ID_2:::OBJECT 5
  parent user unnamed_DWARF_ID_3:::OBJECT 6
  variable ::abracadabra
    var-kind variable
    rep-type hashcode
    dec-type array_struct
  variable ::abracadabra.MIT_id
    var-kind field MIT_id
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.MIT_id[..]
    var-kind array
    enclosing-var ::abracadabra.MIT_id
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.birthday
    var-kind field birthday
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.birthday[..]
    var-kind array
    enclosing-var ::abracadabra.birthday
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.social_security
    var-kind field social_security
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.social_security[..]
    var-kind array
    enclosing-var ::abracadabra.social_security
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::basicIntArray
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::basicIntArray[..]
    var-kind array
    enclosing-var ::basicIntArray
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA
    var-kind variable
    rep-type hashcode
    dec-type A*
    flags non_null 
  variable ::eightA[..]
    var-kind array
    enclosing-var ::eightA
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type A[]
  variable ::eightA[..].B[0]
    var-kind field [0]
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[0]->C
    var-kind field C
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[0]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D
    var-kind field D
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[0]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[0]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[0]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[1]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[1]->C
    var-kind field C
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[1]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D
    var-kind field D
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[1]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[1]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[1]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[2]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[2]->C
    var-kind field C
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[2]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D
    var-kind field D
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[2]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[2]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[2]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].foo_head
    var-kind field foo_head
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].foo_tail
    var-kind field foo_tail
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::globalInt
    var-kind variable
    rep-type int
    dec-type int
  variable ::globalIntPtr
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::globalIntPtr[..]
    var-kind array
    enclosing-var ::globalIntPtr
    array 1
    rep-type int[]
    dec-type int[]
  variable ::multiDimensional
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::multiDimensional[..]
    var-kind array
    enclosing-var ::multiDimensional
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
    flags non_null 
  variable ::populationPtr
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
  variable ::populationPtr[..]
    var-kind array
    enclosing-var ::populationPtr
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::populationPtr[..].SS
    var-kind field SS
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::populationPtr[..].age
    var-kind field age
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::populationPtr[..].firstName
    var-kind field firstName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].lastName
    var-kind field lastName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::populationPtr[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].middleName
    var-kind field middleName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].weight
    var-kind field weight
    enclosing-var ::populationPtr[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable ::population[..]
    var-kind array
    enclosing-var ::population
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::population[..].SS
    var-kind field SS
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::population[..].age
    var-kind field age
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population[..].firstName
    var-kind field firstName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].lastName
    var-kind field lastName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::population[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].middleName
    var-kind field middleName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].weight
    var-kind field weight
    enclosing-var ::population[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable aStruct
    var-kind variable
    rep-type hashcode
    dec-type A
    flags is_param 
  variable aStruct.B
    var-kind field B
    enclosing-var aStruct
    rep-type hashcode
    dec-type unnamed_DWARF_ID_1*
    flags non_null 
  variable aStruct.B[..]
    var-kind array
    enclosing-var aStruct.B
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable aStruct.B[..].C
    var-kind field C
    enclosing-var aStruct.B[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable aStruct.B[..].C.baz_head
    var-kind field baz_head
    enclosing-var aStruct.B[..].C
    array 1
    rep-type int[]
    dec-type int[]
  variable aStruct.B[..].C.baz_tail
    var-kind field baz_tail
    enclosing-var aStruct.B[..].C
    array 1
    rep-type int[]
    dec-type int[]
  variable aStruct.B[..].C.y
    var-kind field y
    enclosing-var aStruct.B[..].C
    array 1
    rep-type int[]
    dec-type int[]
  variable aStruct.B[..].D[0]
    var-kind field [0]
    enclosing-var aStruct.B[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable aStruct.B[..].D[0]->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var aStruct.B[..].D[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable aStruct.B[..].D[0][0]
    var-kind field [0]
    enclosing-var aStruct.B[..].D[0]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable aStruct.B[..].D[1]
    var-kind field D
    enclosing-var aStruct.B[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable aStruct.B[..].D[1]->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var aStruct.B[..].D[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable aStruct.B[..].D[1][0]
    var-kind field [0]
    enclosing-var aStruct.B[..].D[1]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable aStruct.B[..].D[2]
    var-kind field D
    enclosing-var aStruct.B[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable aStruct.B[..].D[2]->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var aStruct.B[..].D[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable aStruct.B[..].D[2][0]
    var-kind field [0]
    enclosing-var aStruct.B[..].D[2]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable aStruct.B[..].bar_head
    var-kind field bar_head
    enclosing-var aStruct.B[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable aStruct.B[..].bar_tail
    var-kind field bar_tail
    enclosing-var aStruct.B[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable aStruct.foo_head
    var-kind field foo_head
    enclosing-var aStruct
    rep-type int
    dec-type int
  variable aStruct.foo_tail
    var-kind field foo_tail
    enclosing-var aStruct
    rep-type int
    dec-type int
  variable bufferStruct
    var-kind variable
    rep-type hashcode
    dec-type _buffers
    flags is_param 
  variable bufferStruct.SS
    var-kind field SS
    enclosing-var bufferStruct
    rep-type int
    dec-type unsigned\_long
  variable bufferStruct.age
    var-kind field age
    enclosing-var bufferStruct
    rep-type int
    dec-type int
  variable bufferStruct.firstName
    var-kind field firstName
    enclosing-var bufferStruct
    reference-type offset
    rep-type string
    dec-type char*
  variable bufferStruct.lastName
    var-kind field lastName
    enclosing-var bufferStruct
    reference-type offset
    rep-type string
    dec-type char*
  variable bufferStruct.mallocMePlease
    var-kind field mallocMePlease
    enclosing-var bufferStruct
    rep-type string
    dec-type char*
  variable bufferStruct.middleName
    var-kind field middleName
    enclosing-var bufferStruct
    reference-type offset
    rep-type string
    dec-type char*
  variable bufferStruct.weight
    var-kind field weight
    enclosing-var bufferStruct
    rep-type double
    dec-type double
  variable bufferStructPtr
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
    flags is_param 
  variable bufferStructPtr[..]
    var-kind array
    enclosing-var bufferStructPtr
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable bufferStructPtr[..].SS
    var-kind field SS
    enclosing-var bufferStructPtr[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable bufferStructPtr[..].age
    var-kind field age
    enclosing-var bufferStructPtr[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable bufferStructPtr[..].firstName
    var-kind field firstName
    enclosing-var bufferStructPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable bufferStructPtr[..].lastName
    var-kind field lastName
    enclosing-var bufferStructPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable bufferStructPtr[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var bufferStructPtr[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable bufferStructPtr[..].middleName
    var-kind field middleName
    enclosing-var bufferStructPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable bufferStructPtr[..].weight
    var-kind field weight
    enclosing-var bufferStructPtr[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable myInt
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable myIntPtr
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable myIntPtr[..]
    var-kind array
    enclosing-var myIntPtr
    array 1
    rep-type int[]
    dec-type int[]

ppt ..structTester(A,\__buffers,\__buffers*,\_int,\_int*):::EXIT0
  ppt-type subexit
  parent user _buffers:::OBJECT 1
  parent user array_struct:::OBJECT 2
  parent user A:::OBJECT 3
  parent user unnamed_DWARF_ID_1:::OBJECT 4
  parent user unnamed_DWARF_ID_2:::OBJECT 5
  parent user unnamed_DWARF_ID_3:::OBJECT 6
  variable ::abracadabra
    var-kind variable
    rep-type hashcode
    dec-type array_struct
  variable ::abracadabra.MIT_id
    var-kind field MIT_id
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.MIT_id[..]
    var-kind array
    enclosing-var ::abracadabra.MIT_id
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.birthday
    var-kind field birthday
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.birthday[..]
    var-kind array
    enclosing-var ::abracadabra.birthday
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.social_security
    var-kind field social_security
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.social_security[..]
    var-kind array
    enclosing-var ::abracadabra.social_security
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::basicIntArray
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::basicIntArray[..]
    var-kind array
    enclosing-var ::basicIntArray
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA
    var-kind variable
    rep-type hashcode
    dec-type A*
    flags non_null 
  variable ::eightA[..]
    var-kind array
    enclosing-var ::eightA
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type A[]
  variable ::eightA[..].B[0]
    var-kind field [0]
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[0]->C
    var-kind field C
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[0]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D
    var-kind field D
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[0]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[0]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[0]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[1]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[1]->C
    var-kind field C
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[1]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D
    var-kind field D
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[1]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[1]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[1]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[2]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[2]->C
    var-kind field C
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[2]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D
    var-kind field D
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[2]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[2]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[2]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].foo_head
    var-kind field foo_head
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].foo_tail
    var-kind field foo_tail
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::globalInt
    var-kind variable
    rep-type int
    dec-type int
  variable ::globalIntPtr
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::globalIntPtr[..]
    var-kind array
    enclosing-var ::globalIntPtr
    array 1
    rep-type int[]
    dec-type int[]
  variable ::multiDimensional
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::multiDimensional[..]
    var-kind array
    enclosing-var ::multiDimensional
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
    flags non_null 
  variable ::populationPtr
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
  variable ::populationPtr[..]
    var-kind array
    enclosing-var ::populationPtr
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::populationPtr[..].SS
    var-kind field SS
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::populationPtr[..].age
    var-kind field age
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::populationPtr[..].firstName
    var-kind field firstName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].lastName
    var-kind field lastName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::populationPtr[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].middleName
    var-kind field middleName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].weight
    var-kind field weight
    enclosing-var ::populationPtr[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable ::population[..]
    var-kind array
    enclosing-var ::population
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::population[..].SS
    var-kind field SS
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::population[..].age
    var-kind field age
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population[..].firstName
    var-kind field firstName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].lastName
    var-kind field lastName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::population[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].middleName
    var-kind field middleName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].weight
    var-kind field weight
    enclosing-var ::population[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable aStruct
    var-kind variable
    rep-type hashcode
    dec-type A
    flags is_param 
  variable aStruct.B
    var-kind field B
    enclosing-var aStruct
    rep-type hashcode
    dec-type unnamed_DWARF_ID_1*
    flags non_null 
  variable aStruct.B[..]
    var-kind array
    enclosing-var aStruct.B
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable aStruct.B[..].C
    var-kind field C
    enclosing-var aStruct.B[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable aStruct.B[..].C.baz_head
    var-kind field baz_head
    enclosing-var aStruct.B[..].C
    array 1
    rep-type int[]
    dec-type int[]
  variable aStruct.B[..].C.baz_tail
    var-kind field baz_tail
    enclosing-var aStruct.B[..].C
    array 1
    rep-type int[]
    dec-type int[]
  variable aStruct.B[..].C.y
    var-kind field y
    enclosing-var aStruct.B[..].C
    array 1
    rep-type int[]
    dec-type int[]
  variable aStruct.B[..].D[0]
    var-kind field [0]
    enclosing-var aStruct.B[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable aStruct.B[..].D[0]->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var aStruct.B[..].D[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable aStruct.B[..].D[0][0]
    var-kind field [0]
    enclosing-var aStruct.B[..].D[0]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable aStruct.B[..].D[1]
    var-kind field D
    enclosing-var aStruct.B[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable aStruct.B[..].D[1]->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var aStruct.B[..].D[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable aStruct.B[..].D[1][0]
    var-kind field [0]
    enclosing-var aStruct.B[..].D[1]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable aStruct.B[..].D[2]
    var-kind field D
    enclosing-var aStruct.B[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable aStruct.B[..].D[2]->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var aStruct.B[..].D[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable aStruct.B[..].D[2][0]
    var-kind field [0]
    enclosing-var aStruct.B[..].D[2]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable aStruct.B[..].bar_head
    var-kind field bar_head
    enclosing-var aStruct.B[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable aStruct.B[..].bar_tail
    var-kind field bar_tail
    enclosing-var aStruct.B[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable aStruct.foo_head
    var-kind field foo_head
    enclosing-var aStruct
    rep-type int
    dec-type int
  variable aStruct.foo_tail
    var-kind field foo_tail
    enclosing-var aStruct
    rep-type int
    dec-type int
  variable bufferStruct
    var-kind variable
    rep-type hashcode
    dec-type _buffers
    flags is_param 
  variable bufferStruct.SS
    var-kind field SS
    enclosing-var bufferStruct
    rep-type int
    dec-type unsigned\_long
  variable bufferStruct.age
    var-kind field age
    enclosing-var bufferStruct
    rep-type int
    dec-type int
  variable bufferStruct.firstName
    var-kind field firstName
    enclosing-var bufferStruct
    reference-type offset
    rep-type string
    dec-type char*
  variable bufferStruct.lastName
    var-kind field lastName
    enclosing-var bufferStruct
    reference-type offset
    rep-type string
    dec-type char*
  variable bufferStruct.mallocMePlease
    var-kind field mallocMePlease
    enclosing-var bufferStruct
    rep-type string
    dec-type char*
  variable bufferStruct.middleName
    var-kind field middleName
    enclosing-var bufferStruct
    reference-type offset
    rep-type string
    dec-type char*
  variable bufferStruct.weight
    var-kind field weight
    enclosing-var bufferStruct
    rep-type double
    dec-type double
  variable bufferStructPtr
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
    flags is_param 
  variable bufferStructPtr[..]
    var-kind array
    enclosing-var bufferStructPtr
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable bufferStructPtr[..].SS
    var-kind field SS
    enclosing-var bufferStructPtr[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable bufferStructPtr[..].age
    var-kind field age
    enclosing-var bufferStructPtr[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable bufferStructPtr[..].firstName
    var-kind field firstName
    enclosing-var bufferStructPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable bufferStructPtr[..].lastName
    var-kind field lastName
    enclosing-var bufferStructPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable bufferStructPtr[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var bufferStructPtr[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable bufferStructPtr[..].middleName
    var-kind field middleName
    enclosing-var bufferStructPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable bufferStructPtr[..].weight
    var-kind field weight
    enclosing-var bufferStructPtr[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable myInt
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable myIntPtr
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable myIntPtr[..]
    var-kind array
    enclosing-var myIntPtr
    array 1
    rep-type int[]
    dec-type int[]
  variable return
    var-kind variable
    rep-type hashcode
    dec-type A*
  variable return[..]
    var-kind array
    enclosing-var return
    array 1
    rep-type hashcode[]
    dec-type A[]
  variable return[..].B[0]
    var-kind field [0]
    enclosing-var return[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable return[..].B[0]->C
    var-kind field C
    enclosing-var return[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable return[..].B[0]->C.baz_head
    var-kind field baz_head
    enclosing-var return[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[0]->C.baz_tail
    var-kind field baz_tail
    enclosing-var return[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[0]->C.y
    var-kind field y
    enclosing-var return[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[0]->D
    var-kind field D
    enclosing-var return[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable return[..].B[0]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var return[..].B[0]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[0]->D[0]
    var-kind field [0]
    enclosing-var return[..].B[0]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable return[..].B[0]->bar_head
    var-kind field bar_head
    enclosing-var return[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[0]->bar_tail
    var-kind field bar_tail
    enclosing-var return[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[0][0]
    var-kind field [0]
    enclosing-var return[..].B[0]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable return[..].B[1]
    var-kind field B
    enclosing-var return[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable return[..].B[1]->C
    var-kind field C
    enclosing-var return[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable return[..].B[1]->C.baz_head
    var-kind field baz_head
    enclosing-var return[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[1]->C.baz_tail
    var-kind field baz_tail
    enclosing-var return[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[1]->C.y
    var-kind field y
    enclosing-var return[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[1]->D
    var-kind field D
    enclosing-var return[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable return[..].B[1]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var return[..].B[1]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[1]->D[0]
    var-kind field [0]
    enclosing-var return[..].B[1]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable return[..].B[1]->bar_head
    var-kind field bar_head
    enclosing-var return[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[1]->bar_tail
    var-kind field bar_tail
    enclosing-var return[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[1][0]
    var-kind field [0]
    enclosing-var return[..].B[1]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable return[..].B[2]
    var-kind field B
    enclosing-var return[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable return[..].B[2]->C
    var-kind field C
    enclosing-var return[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable return[..].B[2]->C.baz_head
    var-kind field baz_head
    enclosing-var return[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[2]->C.baz_tail
    var-kind field baz_tail
    enclosing-var return[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[2]->C.y
    var-kind field y
    enclosing-var return[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[2]->D
    var-kind field D
    enclosing-var return[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable return[..].B[2]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var return[..].B[2]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[2]->D[0]
    var-kind field [0]
    enclosing-var return[..].B[2]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable return[..].B[2]->bar_head
    var-kind field bar_head
    enclosing-var return[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[2]->bar_tail
    var-kind field bar_tail
    enclosing-var return[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].B[2][0]
    var-kind field [0]
    enclosing-var return[..].B[2]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable return[..].foo_head
    var-kind field foo_head
    enclosing-var return[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable return[..].foo_tail
    var-kind field foo_tail
    enclosing-var return[..]
    array 1
    rep-type int[]
    dec-type int[]

ppt A:::OBJECT
  ppt-type object
  parent user unnamed_DWARF_ID_2:::OBJECT 1
  parent user unnamed_DWARF_ID_3:::OBJECT 2
  parent user unnamed_DWARF_ID_1:::OBJECT 3
  variable this
    var-kind variable
    rep-type hashcode
    dec-type A*
  variable this->B
    var-kind field B
    enclosing-var this
    rep-type hashcode
    dec-type unnamed_DWARF_ID_1*
    flags non_null 
  variable this->B[..]
    var-kind array
    enclosing-var this->B
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable this->B[..].C
    var-kind field C
    enclosing-var this->B[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable this->B[..].C.baz_head
    var-kind field baz_head
    enclosing-var this->B[..].C
    array 1
    rep-type int[]
    dec-type int[]
  variable this->B[..].C.baz_tail
    var-kind field baz_tail
    enclosing-var this->B[..].C
    array 1
    rep-type int[]
    dec-type int[]
  variable this->B[..].C.y
    var-kind field y
    enclosing-var this->B[..].C
    array 1
    rep-type int[]
    dec-type int[]
  variable this->B[..].D[0]
    var-kind field [0]
    enclosing-var this->B[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable this->B[..].D[0]->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var this->B[..].D[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable this->B[..].D[0][0]
    var-kind field [0]
    enclosing-var this->B[..].D[0]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable this->B[..].D[1]
    var-kind field D
    enclosing-var this->B[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable this->B[..].D[1]->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var this->B[..].D[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable this->B[..].D[1][0]
    var-kind field [0]
    enclosing-var this->B[..].D[1]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable this->B[..].D[2]
    var-kind field D
    enclosing-var this->B[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable this->B[..].D[2]->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var this->B[..].D[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable this->B[..].D[2][0]
    var-kind field [0]
    enclosing-var this->B[..].D[2]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable this->B[..].bar_head
    var-kind field bar_head
    enclosing-var this->B[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable this->B[..].bar_tail
    var-kind field bar_tail
    enclosing-var this->B[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable this->foo_head
    var-kind field foo_head
    enclosing-var this
    rep-type int
    dec-type int
  variable this->foo_tail
    var-kind field foo_tail
    enclosing-var this
    rep-type int
    dec-type int

ppt ArrayTest_cpp.cpp.returnIntSum(int,\_int*):::ENTER
  ppt-type enter
  parent user _buffers:::OBJECT 1
  parent user array_struct:::OBJECT 2
  parent user A:::OBJECT 3
  parent user unnamed_DWARF_ID_1:::OBJECT 4
  parent user unnamed_DWARF_ID_2:::OBJECT 5
  parent user unnamed_DWARF_ID_3:::OBJECT 6
  variable ::abracadabra
    var-kind variable
    rep-type hashcode
    dec-type array_struct
  variable ::abracadabra.MIT_id
    var-kind field MIT_id
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.MIT_id[..]
    var-kind array
    enclosing-var ::abracadabra.MIT_id
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.birthday
    var-kind field birthday
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.birthday[..]
    var-kind array
    enclosing-var ::abracadabra.birthday
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.social_security
    var-kind field social_security
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.social_security[..]
    var-kind array
    enclosing-var ::abracadabra.social_security
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::basicIntArray
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::basicIntArray[..]
    var-kind array
    enclosing-var ::basicIntArray
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA
    var-kind variable
    rep-type hashcode
    dec-type A*
    flags non_null 
  variable ::eightA[..]
    var-kind array
    enclosing-var ::eightA
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type A[]
  variable ::eightA[..].B[0]
    var-kind field [0]
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[0]->C
    var-kind field C
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[0]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D
    var-kind field D
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[0]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[0]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[0]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[1]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[1]->C
    var-kind field C
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[1]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D
    var-kind field D
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[1]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[1]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[1]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[2]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[2]->C
    var-kind field C
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[2]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D
    var-kind field D
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[2]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[2]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[2]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].foo_head
    var-kind field foo_head
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].foo_tail
    var-kind field foo_tail
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::globalInt
    var-kind variable
    rep-type int
    dec-type int
  variable ::globalIntPtr
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::globalIntPtr[..]
    var-kind array
    enclosing-var ::globalIntPtr
    array 1
    rep-type int[]
    dec-type int[]
  variable ::multiDimensional
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::multiDimensional[..]
    var-kind array
    enclosing-var ::multiDimensional
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
    flags non_null 
  variable ::populationPtr
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
  variable ::populationPtr[..]
    var-kind array
    enclosing-var ::populationPtr
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::populationPtr[..].SS
    var-kind field SS
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::populationPtr[..].age
    var-kind field age
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::populationPtr[..].firstName
    var-kind field firstName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].lastName
    var-kind field lastName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::populationPtr[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].middleName
    var-kind field middleName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].weight
    var-kind field weight
    enclosing-var ::populationPtr[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable ::population[..]
    var-kind array
    enclosing-var ::population
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::population[..].SS
    var-kind field SS
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::population[..].age
    var-kind field age
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population[..].firstName
    var-kind field firstName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].lastName
    var-kind field lastName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::population[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].middleName
    var-kind field middleName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].weight
    var-kind field weight
    enclosing-var ::population[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable ::static_local_array
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::static_local_array[..]
    var-kind array
    enclosing-var ::static_local_array
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable a
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable b
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable b[..]
    var-kind array
    enclosing-var b
    array 1
    rep-type int[]
    dec-type int[]

ppt ArrayTest_cpp.cpp.returnIntSum(int,\_int*):::EXIT0
  ppt-type subexit
  parent user _buffers:::OBJECT 1
  parent user array_struct:::OBJECT 2
  parent user A:::OBJECT 3
  parent user unnamed_DWARF_ID_1:::OBJECT 4
  parent user unnamed_DWARF_ID_2:::OBJECT 5
  parent user unnamed_DWARF_ID_3:::OBJECT 6
  variable ::abracadabra
    var-kind variable
    rep-type hashcode
    dec-type array_struct
  variable ::abracadabra.MIT_id
    var-kind field MIT_id
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.MIT_id[..]
    var-kind array
    enclosing-var ::abracadabra.MIT_id
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.birthday
    var-kind field birthday
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.birthday[..]
    var-kind array
    enclosing-var ::abracadabra.birthday
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::abracadabra.social_security
    var-kind field social_security
    enclosing-var ::abracadabra
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::abracadabra.social_security[..]
    var-kind array
    enclosing-var ::abracadabra.social_security
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::basicIntArray
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::basicIntArray[..]
    var-kind array
    enclosing-var ::basicIntArray
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA
    var-kind variable
    rep-type hashcode
    dec-type A*
    flags non_null 
  variable ::eightA[..]
    var-kind array
    enclosing-var ::eightA
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type A[]
  variable ::eightA[..].B[0]
    var-kind field [0]
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[0]->C
    var-kind field C
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[0]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[0]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D
    var-kind field D
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[0]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[0]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[0]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[0]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[0][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[0]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[1]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[1]->C
    var-kind field C
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[1]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[1]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D
    var-kind field D
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[1]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[1]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[1]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[1]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[1][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[1]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].B[2]
    var-kind field B
    enclosing-var ::eightA[..]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1*[]
    flags non_null 
  variable ::eightA[..].B[2]->C
    var-kind field C
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_2[]
  variable ::eightA[..].B[2]->C.baz_head
    var-kind field baz_head
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.baz_tail
    var-kind field baz_tail
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->C.y
    var-kind field y
    enclosing-var ::eightA[..].B[2]->C
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D
    var-kind field D
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3*[]
    flags non_null 
  variable ::eightA[..].B[2]->D->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var ::eightA[..].B[2]->D
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->D[0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable ::eightA[..].B[2]->bar_head
    var-kind field bar_head
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2]->bar_tail
    var-kind field bar_tail
    enclosing-var ::eightA[..].B[2]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].B[2][0]
    var-kind field [0]
    enclosing-var ::eightA[..].B[2]
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_1[]
  variable ::eightA[..].foo_head
    var-kind field foo_head
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::eightA[..].foo_tail
    var-kind field foo_tail
    enclosing-var ::eightA[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::globalInt
    var-kind variable
    rep-type int
    dec-type int
  variable ::globalIntPtr
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::globalIntPtr[..]
    var-kind array
    enclosing-var ::globalIntPtr
    array 1
    rep-type int[]
    dec-type int[]
  variable ::multiDimensional
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::multiDimensional[..]
    var-kind array
    enclosing-var ::multiDimensional
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
    flags non_null 
  variable ::populationPtr
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
  variable ::populationPtr[..]
    var-kind array
    enclosing-var ::populationPtr
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::populationPtr[..].SS
    var-kind field SS
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::populationPtr[..].age
    var-kind field age
    enclosing-var ::populationPtr[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::populationPtr[..].firstName
    var-kind field firstName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].lastName
    var-kind field lastName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::populationPtr[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].middleName
    var-kind field middleName
    enclosing-var ::populationPtr[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::populationPtr[..].weight
    var-kind field weight
    enclosing-var ::populationPtr[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable ::population[..]
    var-kind array
    enclosing-var ::population
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type _buffers[]
  variable ::population[..].SS
    var-kind field SS
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::population[..].age
    var-kind field age
    enclosing-var ::population[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable ::population[..].firstName
    var-kind field firstName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].lastName
    var-kind field lastName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].mallocMePlease
    var-kind field mallocMePlease
    enclosing-var ::population[..]
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].middleName
    var-kind field middleName
    enclosing-var ::population[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::population[..].weight
    var-kind field weight
    enclosing-var ::population[..]
    array 1
    rep-type double[]
    dec-type double[]
  variable ::static_local_array
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::static_local_array[..]
    var-kind array
    enclosing-var ::static_local_array
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable a
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable b
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable b[..]
    var-kind array
    enclosing-var b
    array 1
    rep-type int[]
    dec-type int[]
  variable return
    var-kind variable
    rep-type int
    dec-type int

ppt _buffers:::OBJECT
  ppt-type object
  variable this
    var-kind variable
    rep-type hashcode
    dec-type _buffers*
  variable this->SS
    var-kind field SS
    enclosing-var this
    rep-type int
    dec-type unsigned\_long
  variable this->age
    var-kind field age
    enclosing-var this
    rep-type int
    dec-type int
  variable this->firstName
    var-kind field firstName
    enclosing-var this
    reference-type offset
    rep-type string
    dec-type char*
  variable this->lastName
    var-kind field lastName
    enclosing-var this
    reference-type offset
    rep-type string
    dec-type char*
  variable this->mallocMePlease
    var-kind field mallocMePlease
    enclosing-var this
    rep-type string
    dec-type char*
  variable this->middleName
    var-kind field middleName
    enclosing-var this
    reference-type offset
    rep-type string
    dec-type char*
  variable this->weight
    var-kind field weight
    enclosing-var this
    rep-type double
    dec-type double

ppt array_struct:::OBJECT
  ppt-type object
  variable this
    var-kind variable
    rep-type hashcode
    dec-type array_struct*
  variable this->MIT_id
    var-kind field MIT_id
    enclosing-var this
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable this->MIT_id[..]
    var-kind array
    enclosing-var this->MIT_id
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable this->birthday
    var-kind field birthday
    enclosing-var this
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable this->birthday[..]
    var-kind array
    enclosing-var this->birthday
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable this->social_security
    var-kind field social_security
    enclosing-var this
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable this->social_security[..]
    var-kind array
    enclosing-var this->social_security
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]

ppt unnamed_DWARF_ID_1:::OBJECT
  ppt-type object
  parent user unnamed_DWARF_ID_2:::OBJECT 4
  parent user unnamed_DWARF_ID_3:::OBJECT 5
  variable this
    var-kind variable
    rep-type hashcode
    dec-type unnamed_DWARF_ID_1*
  variable this->C
    var-kind field C
    enclosing-var this
    rep-type hashcode
    dec-type unnamed_DWARF_ID_2
  variable this->C.baz_head
    var-kind field baz_head
    enclosing-var this->C
    rep-type int
    dec-type int
  variable this->C.baz_tail
    var-kind field baz_tail
    enclosing-var this->C
    rep-type int
    dec-type int
  variable this->C.y
    var-kind field y
    enclosing-var this->C
    rep-type int
    dec-type int
  variable this->D
    var-kind field D
    enclosing-var this
    rep-type hashcode
    dec-type unnamed_DWARF_ID_3*
    flags non_null 
  variable this->D[..]
    var-kind array
    enclosing-var this->D
    reference-type offset
    array 1
    rep-type hashcode[]
    dec-type unnamed_DWARF_ID_3[]
  variable this->D[..].neverSeeMe
    var-kind field neverSeeMe
    enclosing-var this->D[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable this->bar_head
    var-kind field bar_head
    enclosing-var this
    rep-type int
    dec-type int
  variable this->bar_tail
    var-kind field bar_tail
    enclosing-var this
    rep-type int
    dec-type int

ppt unnamed_DWARF_ID_2:::OBJECT
  ppt-type object
  variable this
    var-kind variable
    rep-type hashcode
    dec-type unnamed_DWARF_ID_2*
  variable this->baz_head
    var-kind field baz_head
    enclosing-var this
    rep-type int
    dec-type int
  variable this->baz_tail
    var-kind field baz_tail
    enclosing-var this
    rep-type int
    dec-type int
  variable this->y
    var-kind field y
    enclosing-var this
    rep-type int
    dec-type int

ppt unnamed_DWARF_ID_3:::OBJECT
  ppt-type object
  variable this
    var-kind variable
    rep-type hashcode
    dec-type unnamed_DWARF_ID_3*
  variable this->neverSeeMe
    var-kind field neverSeeMe
    enclosing-var this
    rep-type int
    dec-type int

