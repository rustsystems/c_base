input-language C/C++
decl-version 2.0
var-comparability none

ppt ..b():::ENTER
  ppt-type enter
  variable ::trueGlobalStaticBuffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable manyShorts
    var-kind variable
    rep-type hashcode
    dec-type short*
    flags is_param 
  variable manyShorts[..]
    var-kind array
    enclosing-var manyShorts
    array 1
    rep-type int[]
    dec-type short[]
  variable oneShort
    var-kind variable
    rep-type int
    dec-type short
    flags is_param 

ppt ..b():::EXIT0
  ppt-type subexit
  variable ::trueGlobalStaticBuffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable manyShorts
    var-kind variable
    rep-type hashcode
    dec-type short*
    flags is_param 
  variable manyShorts[..]
    var-kind array
    enclosing-var manyShorts
    array 1
    rep-type int[]
    dec-type short[]
  variable oneShort
    var-kind variable
    rep-type int
    dec-type short
    flags is_param 
  variable return
    var-kind variable
    rep-type int
    dec-type int

ppt ..f():::ENTER
  ppt-type enter
  variable ::trueGlobalStaticBuffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable arg
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable strings
    var-kind variable
    rep-type hashcode
    dec-type char**
    flags is_param 
  variable strings[..]
    var-kind array
    enclosing-var strings
    array 1
    rep-type string[]
    dec-type char*[]

ppt ..f():::EXIT0
  ppt-type subexit
  variable ::trueGlobalStaticBuffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable arg
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable strings
    var-kind variable
    rep-type hashcode
    dec-type char**
    flags is_param 
  variable strings[..]
    var-kind array
    enclosing-var strings
    array 1
    rep-type string[]
    dec-type char*[]

ppt ..func1():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ::trueGlobalStaticBuffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable x
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt ..func1():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ::trueGlobalStaticBuffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable x
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt ..func2():::ENTER
  ppt-type enter
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ::trueGlobalStaticBuffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable x
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt ..func2():::EXIT0
  ppt-type subexit
  variable ::buffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ::trueGlobalStaticBuffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable x
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt ..main():::ENTER
  ppt-type enter
  variable ::staticShorts
    var-kind variable
    rep-type hashcode
    dec-type short*
    flags non_null 
  variable ::staticShorts[..]
    var-kind array
    enclosing-var ::staticShorts
    reference-type offset
    array 1
    rep-type int[]
    dec-type short[]
  variable ::staticStrings
    var-kind variable
    rep-type hashcode
    dec-type char**
    flags non_null 
  variable ::staticStrings[..]
    var-kind array
    enclosing-var ::staticStrings
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::trueGlobalStaticBuffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*

ppt ..main():::EXIT0
  ppt-type subexit
  variable ::staticShorts
    var-kind variable
    rep-type hashcode
    dec-type short*
    flags non_null 
  variable ::staticShorts[..]
    var-kind array
    enclosing-var ::staticShorts
    reference-type offset
    array 1
    rep-type int[]
    dec-type short[]
  variable ::staticStrings
    var-kind variable
    rep-type hashcode
    dec-type char**
    flags non_null 
  variable ::staticStrings[..]
    var-kind array
    enclosing-var ::staticStrings
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::trueGlobalStaticBuffer
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable return
    var-kind variable
    rep-type int
    dec-type int

