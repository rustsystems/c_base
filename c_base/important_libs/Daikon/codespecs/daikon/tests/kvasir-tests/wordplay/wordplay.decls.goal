input-language C/C++
decl-version 2.0
var-comparability none

ppt ..alphabetic():::ENTER
  ppt-type enter
  variable ::adjacentdups
    var-kind variable
    rep-type int
    dec-type int
  variable ::alphstr
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ::findx1
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx1[..]
    var-kind array
    enclosing-var ::findx1
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::findx2
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx2[..]
    var-kind array
    enclosing-var ::findx2
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::keymem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::largestlet
    var-kind variable
    rep-type int
    dec-type char
  variable ::lindx1
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx1[..]
    var-kind array
    enclosing-var ::lindx1
    array 1
    rep-type int[]
    dec-type int[]
  variable ::lindx2
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx2[..]
    var-kind array
    enclosing-var ::lindx2
    array 1
    rep-type int[]
    dec-type int[]
  variable ::longestlength
    var-kind variable
    rep-type int
    dec-type int
  variable ::max_depth
    var-kind variable
    rep-type int
    dec-type int
  variable ::maxdepthspec
    var-kind variable
    rep-type int
    dec-type int
  variable ::ncount
    var-kind variable
    rep-type int
    dec-type int
  variable ::rec_anag_count
    var-kind variable
    rep-type int
    dec-type int
  variable ::silent
    var-kind variable
    rep-type int
    dec-type int
  variable ::specfirstword
    var-kind variable
    rep-type int
    dec-type int
  variable ::vowelcheck
    var-kind variable
    rep-type int
    dec-type int
  variable ::wordmasks
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordmasks[..]
    var-kind array
    enclosing-var ::wordmasks
    array 1
    rep-type int[]
    dec-type int[]
  variable ::words2
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2[..]
    var-kind array
    enclosing-var ::words2
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::words2mem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::words2ptrs
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2ptrs[..]
    var-kind array
    enclosing-var ::words2ptrs
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::wordsn
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordsn[..]
    var-kind array
    enclosing-var ::wordsn
    array 1
    rep-type int[]
    dec-type int[]
  variable ::wordss
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::wordss[..]
    var-kind array
    enclosing-var ::wordss
    array 1
    rep-type string[]
    dec-type char*[]
  variable s
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt ..alphabetic():::EXIT0
  ppt-type subexit
  variable ::adjacentdups
    var-kind variable
    rep-type int
    dec-type int
  variable ::alphstr
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ::findx1
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx1[..]
    var-kind array
    enclosing-var ::findx1
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::findx2
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx2[..]
    var-kind array
    enclosing-var ::findx2
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::keymem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::largestlet
    var-kind variable
    rep-type int
    dec-type char
  variable ::lindx1
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx1[..]
    var-kind array
    enclosing-var ::lindx1
    array 1
    rep-type int[]
    dec-type int[]
  variable ::lindx2
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx2[..]
    var-kind array
    enclosing-var ::lindx2
    array 1
    rep-type int[]
    dec-type int[]
  variable ::longestlength
    var-kind variable
    rep-type int
    dec-type int
  variable ::max_depth
    var-kind variable
    rep-type int
    dec-type int
  variable ::maxdepthspec
    var-kind variable
    rep-type int
    dec-type int
  variable ::ncount
    var-kind variable
    rep-type int
    dec-type int
  variable ::rec_anag_count
    var-kind variable
    rep-type int
    dec-type int
  variable ::silent
    var-kind variable
    rep-type int
    dec-type int
  variable ::specfirstword
    var-kind variable
    rep-type int
    dec-type int
  variable ::vowelcheck
    var-kind variable
    rep-type int
    dec-type int
  variable ::wordmasks
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordmasks[..]
    var-kind array
    enclosing-var ::wordmasks
    array 1
    rep-type int[]
    dec-type int[]
  variable ::words2
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2[..]
    var-kind array
    enclosing-var ::words2
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::words2mem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::words2ptrs
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2ptrs[..]
    var-kind array
    enclosing-var ::words2ptrs
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::wordsn
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordsn[..]
    var-kind array
    enclosing-var ::wordsn
    array 1
    rep-type int[]
    dec-type int[]
  variable ::wordss
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::wordss[..]
    var-kind array
    enclosing-var ::wordss
    array 1
    rep-type string[]
    dec-type char*[]
  variable return
    var-kind variable
    rep-type string
    dec-type char*
  variable s
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt ..anagramr7():::ENTER
  ppt-type enter
  variable ::adjacentdups
    var-kind variable
    rep-type int
    dec-type int
  variable ::findx1
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx1[..]
    var-kind array
    enclosing-var ::findx1
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::findx2
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx2[..]
    var-kind array
    enclosing-var ::findx2
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::keymem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::largestlet
    var-kind variable
    rep-type int
    dec-type char
  variable ::lindx1
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx1[..]
    var-kind array
    enclosing-var ::lindx1
    array 1
    rep-type int[]
    dec-type int[]
  variable ::lindx2
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx2[..]
    var-kind array
    enclosing-var ::lindx2
    array 1
    rep-type int[]
    dec-type int[]
  variable ::longestlength
    var-kind variable
    rep-type int
    dec-type int
  variable ::max_depth
    var-kind variable
    rep-type int
    dec-type int
  variable ::maxdepthspec
    var-kind variable
    rep-type int
    dec-type int
  variable ::ncount
    var-kind variable
    rep-type int
    dec-type int
  variable ::rec_anag_count
    var-kind variable
    rep-type int
    dec-type int
  variable ::silent
    var-kind variable
    rep-type int
    dec-type int
  variable ::specfirstword
    var-kind variable
    rep-type int
    dec-type int
  variable ::vowelcheck
    var-kind variable
    rep-type int
    dec-type int
  variable ::wordmasks
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordmasks[..]
    var-kind array
    enclosing-var ::wordmasks
    array 1
    rep-type int[]
    dec-type int[]
  variable ::words2
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2[..]
    var-kind array
    enclosing-var ::words2
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::words2mem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::words2ptrs
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2ptrs[..]
    var-kind array
    enclosing-var ::words2ptrs
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::wordsn
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordsn[..]
    var-kind array
    enclosing-var ::wordsn
    array 1
    rep-type int[]
    dec-type int[]
  variable ::wordss
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::wordss[..]
    var-kind array
    enclosing-var ::wordss
    array 1
    rep-type string[]
    dec-type char*[]
  variable accum
    var-kind variable
    rep-type hashcode
    dec-type char**
    flags is_param 
  variable accum[..]
    var-kind array
    enclosing-var accum
    array 1
    rep-type string[]
    dec-type char*[]
  variable level
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable level[..]
    var-kind array
    enclosing-var level
    array 1
    rep-type int[]
    dec-type int[]
  variable minkey
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable minkey[..]
    var-kind array
    enclosing-var minkey
    array 1
    rep-type int[]
    dec-type int[]
  variable s
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt ..anagramr7():::EXIT0
  ppt-type subexit
  variable ::adjacentdups
    var-kind variable
    rep-type int
    dec-type int
  variable ::findx1
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx1[..]
    var-kind array
    enclosing-var ::findx1
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::findx2
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx2[..]
    var-kind array
    enclosing-var ::findx2
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::keymem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::largestlet
    var-kind variable
    rep-type int
    dec-type char
  variable ::lindx1
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx1[..]
    var-kind array
    enclosing-var ::lindx1
    array 1
    rep-type int[]
    dec-type int[]
  variable ::lindx2
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx2[..]
    var-kind array
    enclosing-var ::lindx2
    array 1
    rep-type int[]
    dec-type int[]
  variable ::longestlength
    var-kind variable
    rep-type int
    dec-type int
  variable ::max_depth
    var-kind variable
    rep-type int
    dec-type int
  variable ::maxdepthspec
    var-kind variable
    rep-type int
    dec-type int
  variable ::ncount
    var-kind variable
    rep-type int
    dec-type int
  variable ::rec_anag_count
    var-kind variable
    rep-type int
    dec-type int
  variable ::silent
    var-kind variable
    rep-type int
    dec-type int
  variable ::specfirstword
    var-kind variable
    rep-type int
    dec-type int
  variable ::vowelcheck
    var-kind variable
    rep-type int
    dec-type int
  variable ::wordmasks
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordmasks[..]
    var-kind array
    enclosing-var ::wordmasks
    array 1
    rep-type int[]
    dec-type int[]
  variable ::words2
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2[..]
    var-kind array
    enclosing-var ::words2
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::words2mem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::words2ptrs
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2ptrs[..]
    var-kind array
    enclosing-var ::words2ptrs
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::wordsn
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordsn[..]
    var-kind array
    enclosing-var ::wordsn
    array 1
    rep-type int[]
    dec-type int[]
  variable ::wordss
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::wordss[..]
    var-kind array
    enclosing-var ::wordss
    array 1
    rep-type string[]
    dec-type char*[]
  variable accum
    var-kind variable
    rep-type hashcode
    dec-type char**
    flags is_param 
  variable accum[..]
    var-kind array
    enclosing-var accum
    array 1
    rep-type string[]
    dec-type char*[]
  variable level
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable level[..]
    var-kind array
    enclosing-var level
    array 1
    rep-type int[]
    dec-type int[]
  variable minkey
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable minkey[..]
    var-kind array
    enclosing-var minkey
    array 1
    rep-type int[]
    dec-type int[]
  variable s
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt ..extract():::ENTER
  ppt-type enter
  variable ::adjacentdups
    var-kind variable
    rep-type int
    dec-type int
  variable ::findx1
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx1[..]
    var-kind array
    enclosing-var ::findx1
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::findx2
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx2[..]
    var-kind array
    enclosing-var ::findx2
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::keymem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::largestlet
    var-kind variable
    rep-type int
    dec-type char
  variable ::lindx1
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx1[..]
    var-kind array
    enclosing-var ::lindx1
    array 1
    rep-type int[]
    dec-type int[]
  variable ::lindx2
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx2[..]
    var-kind array
    enclosing-var ::lindx2
    array 1
    rep-type int[]
    dec-type int[]
  variable ::longestlength
    var-kind variable
    rep-type int
    dec-type int
  variable ::max_depth
    var-kind variable
    rep-type int
    dec-type int
  variable ::maxdepthspec
    var-kind variable
    rep-type int
    dec-type int
  variable ::ncount
    var-kind variable
    rep-type int
    dec-type int
  variable ::r1
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ::rec_anag_count
    var-kind variable
    rep-type int
    dec-type int
  variable ::silent
    var-kind variable
    rep-type int
    dec-type int
  variable ::specfirstword
    var-kind variable
    rep-type int
    dec-type int
  variable ::vowelcheck
    var-kind variable
    rep-type int
    dec-type int
  variable ::wordmasks
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordmasks[..]
    var-kind array
    enclosing-var ::wordmasks
    array 1
    rep-type int[]
    dec-type int[]
  variable ::words2
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2[..]
    var-kind array
    enclosing-var ::words2
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::words2mem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::words2ptrs
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2ptrs[..]
    var-kind array
    enclosing-var ::words2ptrs
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::wordsn
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordsn[..]
    var-kind array
    enclosing-var ::wordsn
    array 1
    rep-type int[]
    dec-type int[]
  variable ::wordss
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::wordss[..]
    var-kind array
    enclosing-var ::wordss
    array 1
    rep-type string[]
    dec-type char*[]
  variable s1
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable s2
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt ..extract():::EXIT0
  ppt-type subexit
  variable ::adjacentdups
    var-kind variable
    rep-type int
    dec-type int
  variable ::findx1
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx1[..]
    var-kind array
    enclosing-var ::findx1
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::findx2
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx2[..]
    var-kind array
    enclosing-var ::findx2
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::keymem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::largestlet
    var-kind variable
    rep-type int
    dec-type char
  variable ::lindx1
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx1[..]
    var-kind array
    enclosing-var ::lindx1
    array 1
    rep-type int[]
    dec-type int[]
  variable ::lindx2
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx2[..]
    var-kind array
    enclosing-var ::lindx2
    array 1
    rep-type int[]
    dec-type int[]
  variable ::longestlength
    var-kind variable
    rep-type int
    dec-type int
  variable ::max_depth
    var-kind variable
    rep-type int
    dec-type int
  variable ::maxdepthspec
    var-kind variable
    rep-type int
    dec-type int
  variable ::ncount
    var-kind variable
    rep-type int
    dec-type int
  variable ::r1
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ::rec_anag_count
    var-kind variable
    rep-type int
    dec-type int
  variable ::silent
    var-kind variable
    rep-type int
    dec-type int
  variable ::specfirstword
    var-kind variable
    rep-type int
    dec-type int
  variable ::vowelcheck
    var-kind variable
    rep-type int
    dec-type int
  variable ::wordmasks
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordmasks[..]
    var-kind array
    enclosing-var ::wordmasks
    array 1
    rep-type int[]
    dec-type int[]
  variable ::words2
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2[..]
    var-kind array
    enclosing-var ::words2
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::words2mem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::words2ptrs
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2ptrs[..]
    var-kind array
    enclosing-var ::words2ptrs
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::wordsn
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordsn[..]
    var-kind array
    enclosing-var ::wordsn
    array 1
    rep-type int[]
    dec-type int[]
  variable ::wordss
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::wordss[..]
    var-kind array
    enclosing-var ::wordss
    array 1
    rep-type string[]
    dec-type char*[]
  variable return
    var-kind variable
    rep-type string
    dec-type char*
  variable s1
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable s2
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt ..intmask():::ENTER
  ppt-type enter
  variable ::adjacentdups
    var-kind variable
    rep-type int
    dec-type int
  variable ::findx1
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx1[..]
    var-kind array
    enclosing-var ::findx1
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::findx2
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx2[..]
    var-kind array
    enclosing-var ::findx2
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::keymem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::largestlet
    var-kind variable
    rep-type int
    dec-type char
  variable ::lindx1
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx1[..]
    var-kind array
    enclosing-var ::lindx1
    array 1
    rep-type int[]
    dec-type int[]
  variable ::lindx2
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx2[..]
    var-kind array
    enclosing-var ::lindx2
    array 1
    rep-type int[]
    dec-type int[]
  variable ::longestlength
    var-kind variable
    rep-type int
    dec-type int
  variable ::max_depth
    var-kind variable
    rep-type int
    dec-type int
  variable ::maxdepthspec
    var-kind variable
    rep-type int
    dec-type int
  variable ::ncount
    var-kind variable
    rep-type int
    dec-type int
  variable ::rec_anag_count
    var-kind variable
    rep-type int
    dec-type int
  variable ::silent
    var-kind variable
    rep-type int
    dec-type int
  variable ::specfirstword
    var-kind variable
    rep-type int
    dec-type int
  variable ::vowelcheck
    var-kind variable
    rep-type int
    dec-type int
  variable ::wordmasks
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordmasks[..]
    var-kind array
    enclosing-var ::wordmasks
    array 1
    rep-type int[]
    dec-type int[]
  variable ::words2
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2[..]
    var-kind array
    enclosing-var ::words2
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::words2mem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::words2ptrs
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2ptrs[..]
    var-kind array
    enclosing-var ::words2ptrs
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::wordsn
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordsn[..]
    var-kind array
    enclosing-var ::wordsn
    array 1
    rep-type int[]
    dec-type int[]
  variable ::wordss
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::wordss[..]
    var-kind array
    enclosing-var ::wordss
    array 1
    rep-type string[]
    dec-type char*[]
  variable s
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt ..intmask():::EXIT0
  ppt-type subexit
  variable ::adjacentdups
    var-kind variable
    rep-type int
    dec-type int
  variable ::findx1
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx1[..]
    var-kind array
    enclosing-var ::findx1
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::findx2
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx2[..]
    var-kind array
    enclosing-var ::findx2
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::keymem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::largestlet
    var-kind variable
    rep-type int
    dec-type char
  variable ::lindx1
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx1[..]
    var-kind array
    enclosing-var ::lindx1
    array 1
    rep-type int[]
    dec-type int[]
  variable ::lindx2
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx2[..]
    var-kind array
    enclosing-var ::lindx2
    array 1
    rep-type int[]
    dec-type int[]
  variable ::longestlength
    var-kind variable
    rep-type int
    dec-type int
  variable ::max_depth
    var-kind variable
    rep-type int
    dec-type int
  variable ::maxdepthspec
    var-kind variable
    rep-type int
    dec-type int
  variable ::ncount
    var-kind variable
    rep-type int
    dec-type int
  variable ::rec_anag_count
    var-kind variable
    rep-type int
    dec-type int
  variable ::silent
    var-kind variable
    rep-type int
    dec-type int
  variable ::specfirstword
    var-kind variable
    rep-type int
    dec-type int
  variable ::vowelcheck
    var-kind variable
    rep-type int
    dec-type int
  variable ::wordmasks
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordmasks[..]
    var-kind array
    enclosing-var ::wordmasks
    array 1
    rep-type int[]
    dec-type int[]
  variable ::words2
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2[..]
    var-kind array
    enclosing-var ::words2
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::words2mem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::words2ptrs
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2ptrs[..]
    var-kind array
    enclosing-var ::words2ptrs
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::wordsn
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordsn[..]
    var-kind array
    enclosing-var ::wordsn
    array 1
    rep-type int[]
    dec-type int[]
  variable ::wordss
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::wordss[..]
    var-kind array
    enclosing-var ::wordss
    array 1
    rep-type string[]
    dec-type char*[]
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable s
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt ..main():::ENTER
  ppt-type enter
  variable ::adjacentdups
    var-kind variable
    rep-type int
    dec-type int
  variable ::findx1
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx1[..]
    var-kind array
    enclosing-var ::findx1
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::findx2
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx2[..]
    var-kind array
    enclosing-var ::findx2
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::keymem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::largestlet
    var-kind variable
    rep-type int
    dec-type char
  variable ::lindx1
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx1[..]
    var-kind array
    enclosing-var ::lindx1
    array 1
    rep-type int[]
    dec-type int[]
  variable ::lindx2
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx2[..]
    var-kind array
    enclosing-var ::lindx2
    array 1
    rep-type int[]
    dec-type int[]
  variable ::longestlength
    var-kind variable
    rep-type int
    dec-type int
  variable ::max_depth
    var-kind variable
    rep-type int
    dec-type int
  variable ::maxdepthspec
    var-kind variable
    rep-type int
    dec-type int
  variable ::ncount
    var-kind variable
    rep-type int
    dec-type int
  variable ::rec_anag_count
    var-kind variable
    rep-type int
    dec-type int
  variable ::silent
    var-kind variable
    rep-type int
    dec-type int
  variable ::specfirstword
    var-kind variable
    rep-type int
    dec-type int
  variable ::vowelcheck
    var-kind variable
    rep-type int
    dec-type int
  variable ::wordmasks
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordmasks[..]
    var-kind array
    enclosing-var ::wordmasks
    array 1
    rep-type int[]
    dec-type int[]
  variable ::words2
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2[..]
    var-kind array
    enclosing-var ::words2
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::words2mem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::words2ptrs
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2ptrs[..]
    var-kind array
    enclosing-var ::words2ptrs
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::wordsn
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordsn[..]
    var-kind array
    enclosing-var ::wordsn
    array 1
    rep-type int[]
    dec-type int[]
  variable ::wordss
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::wordss[..]
    var-kind array
    enclosing-var ::wordss
    array 1
    rep-type string[]
    dec-type char*[]
  variable argc
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable argv
    var-kind variable
    rep-type hashcode
    dec-type char**
    flags is_param 
  variable argv[..]
    var-kind array
    enclosing-var argv
    array 1
    rep-type string[]
    dec-type char*[]

ppt ..main():::EXIT0
  ppt-type subexit
  variable ::adjacentdups
    var-kind variable
    rep-type int
    dec-type int
  variable ::findx1
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx1[..]
    var-kind array
    enclosing-var ::findx1
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::findx2
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx2[..]
    var-kind array
    enclosing-var ::findx2
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::keymem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::largestlet
    var-kind variable
    rep-type int
    dec-type char
  variable ::lindx1
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx1[..]
    var-kind array
    enclosing-var ::lindx1
    array 1
    rep-type int[]
    dec-type int[]
  variable ::lindx2
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx2[..]
    var-kind array
    enclosing-var ::lindx2
    array 1
    rep-type int[]
    dec-type int[]
  variable ::longestlength
    var-kind variable
    rep-type int
    dec-type int
  variable ::max_depth
    var-kind variable
    rep-type int
    dec-type int
  variable ::maxdepthspec
    var-kind variable
    rep-type int
    dec-type int
  variable ::ncount
    var-kind variable
    rep-type int
    dec-type int
  variable ::rec_anag_count
    var-kind variable
    rep-type int
    dec-type int
  variable ::silent
    var-kind variable
    rep-type int
    dec-type int
  variable ::specfirstword
    var-kind variable
    rep-type int
    dec-type int
  variable ::vowelcheck
    var-kind variable
    rep-type int
    dec-type int
  variable ::wordmasks
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordmasks[..]
    var-kind array
    enclosing-var ::wordmasks
    array 1
    rep-type int[]
    dec-type int[]
  variable ::words2
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2[..]
    var-kind array
    enclosing-var ::words2
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::words2mem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::words2ptrs
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2ptrs[..]
    var-kind array
    enclosing-var ::words2ptrs
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::wordsn
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordsn[..]
    var-kind array
    enclosing-var ::wordsn
    array 1
    rep-type int[]
    dec-type int[]
  variable ::wordss
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::wordss[..]
    var-kind array
    enclosing-var ::wordss
    array 1
    rep-type string[]
    dec-type char*[]
  variable argc
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable argv
    var-kind variable
    rep-type hashcode
    dec-type char**
    flags is_param 
  variable argv[..]
    var-kind array
    enclosing-var argv
    array 1
    rep-type string[]
    dec-type char*[]
  variable return
    var-kind variable
    rep-type int
    dec-type int

ppt ..numvowels():::ENTER
  ppt-type enter
  variable ::adjacentdups
    var-kind variable
    rep-type int
    dec-type int
  variable ::findx1
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx1[..]
    var-kind array
    enclosing-var ::findx1
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::findx2
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx2[..]
    var-kind array
    enclosing-var ::findx2
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::keymem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::largestlet
    var-kind variable
    rep-type int
    dec-type char
  variable ::lindx1
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx1[..]
    var-kind array
    enclosing-var ::lindx1
    array 1
    rep-type int[]
    dec-type int[]
  variable ::lindx2
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx2[..]
    var-kind array
    enclosing-var ::lindx2
    array 1
    rep-type int[]
    dec-type int[]
  variable ::longestlength
    var-kind variable
    rep-type int
    dec-type int
  variable ::max_depth
    var-kind variable
    rep-type int
    dec-type int
  variable ::maxdepthspec
    var-kind variable
    rep-type int
    dec-type int
  variable ::ncount
    var-kind variable
    rep-type int
    dec-type int
  variable ::rec_anag_count
    var-kind variable
    rep-type int
    dec-type int
  variable ::silent
    var-kind variable
    rep-type int
    dec-type int
  variable ::specfirstword
    var-kind variable
    rep-type int
    dec-type int
  variable ::vowelcheck
    var-kind variable
    rep-type int
    dec-type int
  variable ::wordmasks
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordmasks[..]
    var-kind array
    enclosing-var ::wordmasks
    array 1
    rep-type int[]
    dec-type int[]
  variable ::words2
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2[..]
    var-kind array
    enclosing-var ::words2
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::words2mem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::words2ptrs
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2ptrs[..]
    var-kind array
    enclosing-var ::words2ptrs
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::wordsn
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordsn[..]
    var-kind array
    enclosing-var ::wordsn
    array 1
    rep-type int[]
    dec-type int[]
  variable ::wordss
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::wordss[..]
    var-kind array
    enclosing-var ::wordss
    array 1
    rep-type string[]
    dec-type char*[]
  variable s
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt ..numvowels():::EXIT0
  ppt-type subexit
  variable ::adjacentdups
    var-kind variable
    rep-type int
    dec-type int
  variable ::findx1
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx1[..]
    var-kind array
    enclosing-var ::findx1
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::findx2
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx2[..]
    var-kind array
    enclosing-var ::findx2
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::keymem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::largestlet
    var-kind variable
    rep-type int
    dec-type char
  variable ::lindx1
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx1[..]
    var-kind array
    enclosing-var ::lindx1
    array 1
    rep-type int[]
    dec-type int[]
  variable ::lindx2
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx2[..]
    var-kind array
    enclosing-var ::lindx2
    array 1
    rep-type int[]
    dec-type int[]
  variable ::longestlength
    var-kind variable
    rep-type int
    dec-type int
  variable ::max_depth
    var-kind variable
    rep-type int
    dec-type int
  variable ::maxdepthspec
    var-kind variable
    rep-type int
    dec-type int
  variable ::ncount
    var-kind variable
    rep-type int
    dec-type int
  variable ::rec_anag_count
    var-kind variable
    rep-type int
    dec-type int
  variable ::silent
    var-kind variable
    rep-type int
    dec-type int
  variable ::specfirstword
    var-kind variable
    rep-type int
    dec-type int
  variable ::vowelcheck
    var-kind variable
    rep-type int
    dec-type int
  variable ::wordmasks
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordmasks[..]
    var-kind array
    enclosing-var ::wordmasks
    array 1
    rep-type int[]
    dec-type int[]
  variable ::words2
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2[..]
    var-kind array
    enclosing-var ::words2
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::words2mem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::words2ptrs
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2ptrs[..]
    var-kind array
    enclosing-var ::words2ptrs
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::wordsn
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordsn[..]
    var-kind array
    enclosing-var ::wordsn
    array 1
    rep-type int[]
    dec-type int[]
  variable ::wordss
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::wordss[..]
    var-kind array
    enclosing-var ::wordss
    array 1
    rep-type string[]
    dec-type char*[]
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable s
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt ..uppercase():::ENTER
  ppt-type enter
  variable ::adjacentdups
    var-kind variable
    rep-type int
    dec-type int
  variable ::findx1
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx1[..]
    var-kind array
    enclosing-var ::findx1
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::findx2
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx2[..]
    var-kind array
    enclosing-var ::findx2
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::keymem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::largestlet
    var-kind variable
    rep-type int
    dec-type char
  variable ::lindx1
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx1[..]
    var-kind array
    enclosing-var ::lindx1
    array 1
    rep-type int[]
    dec-type int[]
  variable ::lindx2
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx2[..]
    var-kind array
    enclosing-var ::lindx2
    array 1
    rep-type int[]
    dec-type int[]
  variable ::longestlength
    var-kind variable
    rep-type int
    dec-type int
  variable ::max_depth
    var-kind variable
    rep-type int
    dec-type int
  variable ::maxdepthspec
    var-kind variable
    rep-type int
    dec-type int
  variable ::ncount
    var-kind variable
    rep-type int
    dec-type int
  variable ::rec_anag_count
    var-kind variable
    rep-type int
    dec-type int
  variable ::silent
    var-kind variable
    rep-type int
    dec-type int
  variable ::specfirstword
    var-kind variable
    rep-type int
    dec-type int
  variable ::upcasestr
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ::vowelcheck
    var-kind variable
    rep-type int
    dec-type int
  variable ::wordmasks
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordmasks[..]
    var-kind array
    enclosing-var ::wordmasks
    array 1
    rep-type int[]
    dec-type int[]
  variable ::words2
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2[..]
    var-kind array
    enclosing-var ::words2
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::words2mem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::words2ptrs
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2ptrs[..]
    var-kind array
    enclosing-var ::words2ptrs
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::wordsn
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordsn[..]
    var-kind array
    enclosing-var ::wordsn
    array 1
    rep-type int[]
    dec-type int[]
  variable ::wordss
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::wordss[..]
    var-kind array
    enclosing-var ::wordss
    array 1
    rep-type string[]
    dec-type char*[]
  variable s
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt ..uppercase():::EXIT0
  ppt-type subexit
  variable ::adjacentdups
    var-kind variable
    rep-type int
    dec-type int
  variable ::findx1
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx1[..]
    var-kind array
    enclosing-var ::findx1
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::findx2
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags non_null 
  variable ::findx2[..]
    var-kind array
    enclosing-var ::findx2
    reference-type offset
    array 1
    rep-type int[]
    dec-type int[]
  variable ::keymem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::largestlet
    var-kind variable
    rep-type int
    dec-type char
  variable ::lindx1
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx1[..]
    var-kind array
    enclosing-var ::lindx1
    array 1
    rep-type int[]
    dec-type int[]
  variable ::lindx2
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::lindx2[..]
    var-kind array
    enclosing-var ::lindx2
    array 1
    rep-type int[]
    dec-type int[]
  variable ::longestlength
    var-kind variable
    rep-type int
    dec-type int
  variable ::max_depth
    var-kind variable
    rep-type int
    dec-type int
  variable ::maxdepthspec
    var-kind variable
    rep-type int
    dec-type int
  variable ::ncount
    var-kind variable
    rep-type int
    dec-type int
  variable ::rec_anag_count
    var-kind variable
    rep-type int
    dec-type int
  variable ::silent
    var-kind variable
    rep-type int
    dec-type int
  variable ::specfirstword
    var-kind variable
    rep-type int
    dec-type int
  variable ::upcasestr
    var-kind variable
    reference-type offset
    rep-type string
    dec-type char*
  variable ::vowelcheck
    var-kind variable
    rep-type int
    dec-type int
  variable ::wordmasks
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordmasks[..]
    var-kind array
    enclosing-var ::wordmasks
    array 1
    rep-type int[]
    dec-type int[]
  variable ::words2
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2[..]
    var-kind array
    enclosing-var ::words2
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::words2mem
    var-kind variable
    rep-type string
    dec-type char*
  variable ::words2ptrs
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::words2ptrs[..]
    var-kind array
    enclosing-var ::words2ptrs
    array 1
    rep-type string[]
    dec-type char*[]
  variable ::wordsn
    var-kind variable
    rep-type hashcode
    dec-type int*
  variable ::wordsn[..]
    var-kind array
    enclosing-var ::wordsn
    array 1
    rep-type int[]
    dec-type int[]
  variable ::wordss
    var-kind variable
    rep-type hashcode
    dec-type char**
  variable ::wordss[..]
    var-kind array
    enclosing-var ::wordss
    array 1
    rep-type string[]
    dec-type char*[]
  variable return
    var-kind variable
    rep-type string
    dec-type char*
  variable s
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

