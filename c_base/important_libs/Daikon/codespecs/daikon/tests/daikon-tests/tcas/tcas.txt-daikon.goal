===========================================================================
std.ALIM()int:::ENTER
::High_Confidence == 1
::Two_of_Three_Reports_Valid one of { 0, 1 }
::Alt_Layer_Value >= 0
::Positive_RA_Alt_Thresh != null
::Positive_RA_Alt_Thresh[] == [400, 500, 640, 740]
::Positive_RA_Alt_Thresh[] sorted by <
::Other_RAC one of { 0, 1 }
::Other_Capability one of { 0, 1 }
::Climb_Inhibit one of { 0, 1 }
size(::Positive_RA_Alt_Thresh[]) == 4
::Positive_RA_Alt_Thresh[::Alt_Layer_Value] == 0  (mod 20)
{740} subset of ::Positive_RA_Alt_Thresh[::Alt_Layer_Value..]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements one of { 500, 640, 740 }
{400} subset of ::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements one of { 400, 500, 640 }
::Own_Tracked_Alt != ::Other_Tracked_Alt
::Alt_Layer_Value <= size(::Positive_RA_Alt_Thresh[])-1
::Positive_RA_Alt_Thresh[::Alt_Layer_Value..] elements >= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements > ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value] elements <= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements < ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
===========================================================================
std.ALIM()int:::EXIT
::Cur_Vertical_Sep == orig(::Cur_Vertical_Sep)
::High_Confidence == orig(::High_Confidence)
::Two_of_Three_Reports_Valid == orig(::Two_of_Three_Reports_Valid)
::Own_Tracked_Alt == orig(::Own_Tracked_Alt)
::Own_Tracked_Alt_Rate == orig(::Own_Tracked_Alt_Rate)
::Other_Tracked_Alt == orig(::Other_Tracked_Alt)
::Alt_Layer_Value == orig(::Alt_Layer_Value)
::Positive_RA_Alt_Thresh == orig(::Positive_RA_Alt_Thresh)
::Positive_RA_Alt_Thresh[] == orig(::Positive_RA_Alt_Thresh[])
::Up_Separation == orig(::Up_Separation)
::Down_Separation == orig(::Down_Separation)
::Other_RAC == orig(::Other_RAC)
::Other_Capability == orig(::Other_Capability)
::Climb_Inhibit == orig(::Climb_Inhibit)
return == ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
return == orig(::Positive_RA_Alt_Thresh[post(::Alt_Layer_Value)])
return == ::Positive_RA_Alt_Thresh[orig(::Alt_Layer_Value)]
return == orig(::Positive_RA_Alt_Thresh[::Alt_Layer_Value])
::High_Confidence == 1
::Two_of_Three_Reports_Valid one of { 0, 1 }
::Alt_Layer_Value >= 0
::Positive_RA_Alt_Thresh != null
::Positive_RA_Alt_Thresh[] == [400, 500, 640, 740]
::Positive_RA_Alt_Thresh[] sorted by <
::Other_RAC one of { 0, 1 }
::Other_Capability one of { 0, 1 }
::Climb_Inhibit one of { 0, 1 }
return == 0  (mod 20)
size(::Positive_RA_Alt_Thresh[]) == 4
{740} subset of ::Positive_RA_Alt_Thresh[::Alt_Layer_Value..]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements one of { 500, 640, 740 }
{400} subset of ::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements one of { 400, 500, 640 }
::Own_Tracked_Alt != ::Other_Tracked_Alt
::Alt_Layer_Value <= size(::Positive_RA_Alt_Thresh[])-1
::Positive_RA_Alt_Thresh[::Alt_Layer_Value..] elements >= return
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements > return
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value] elements <= return
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements < return
===========================================================================
std.Inhibit_Biased_Climb()int:::ENTER
::High_Confidence == 1
::Two_of_Three_Reports_Valid one of { 0, 1 }
::Alt_Layer_Value >= 0
::Positive_RA_Alt_Thresh != null
::Positive_RA_Alt_Thresh[] == [400, 500, 640, 740]
::Positive_RA_Alt_Thresh[] sorted by <
::Other_RAC one of { 0, 1 }
::Other_Capability one of { 0, 1 }
::Climb_Inhibit one of { 0, 1 }
size(::Positive_RA_Alt_Thresh[]) == 4
::Positive_RA_Alt_Thresh[::Alt_Layer_Value] == 0  (mod 20)
{740} subset of ::Positive_RA_Alt_Thresh[::Alt_Layer_Value..]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements one of { 500, 640, 740 }
{400} subset of ::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements one of { 400, 500, 640 }
::Own_Tracked_Alt != ::Other_Tracked_Alt
::Alt_Layer_Value <= size(::Positive_RA_Alt_Thresh[])-1
::Positive_RA_Alt_Thresh[::Alt_Layer_Value..] elements >= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements > ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value] elements <= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements < ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
===========================================================================
std.Inhibit_Biased_Climb()int:::EXIT
::Cur_Vertical_Sep == orig(::Cur_Vertical_Sep)
::High_Confidence == orig(::High_Confidence)
::Two_of_Three_Reports_Valid == orig(::Two_of_Three_Reports_Valid)
::Own_Tracked_Alt == orig(::Own_Tracked_Alt)
::Own_Tracked_Alt_Rate == orig(::Own_Tracked_Alt_Rate)
::Other_Tracked_Alt == orig(::Other_Tracked_Alt)
::Alt_Layer_Value == orig(::Alt_Layer_Value)
::Positive_RA_Alt_Thresh == orig(::Positive_RA_Alt_Thresh)
::Positive_RA_Alt_Thresh[] == orig(::Positive_RA_Alt_Thresh[])
::Up_Separation == orig(::Up_Separation)
::Down_Separation == orig(::Down_Separation)
::Other_RAC == orig(::Other_RAC)
::Other_Capability == orig(::Other_Capability)
::Climb_Inhibit == orig(::Climb_Inhibit)
::High_Confidence == 1
::Two_of_Three_Reports_Valid one of { 0, 1 }
::Alt_Layer_Value >= 0
::Positive_RA_Alt_Thresh != null
::Positive_RA_Alt_Thresh[] == [400, 500, 640, 740]
::Positive_RA_Alt_Thresh[] sorted by <
::Other_RAC one of { 0, 1 }
::Other_Capability one of { 0, 1 }
::Climb_Inhibit one of { 0, 1 }
size(::Positive_RA_Alt_Thresh[]) == 4
::Positive_RA_Alt_Thresh[::Alt_Layer_Value] == 0  (mod 20)
{740} subset of ::Positive_RA_Alt_Thresh[::Alt_Layer_Value..]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements one of { 500, 640, 740 }
{400} subset of ::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements one of { 400, 500, 640 }
::Own_Tracked_Alt != ::Other_Tracked_Alt
::Alt_Layer_Value <= size(::Positive_RA_Alt_Thresh[])-1
::Up_Separation <= return
::Positive_RA_Alt_Thresh[::Alt_Layer_Value..] elements >= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements > ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value] elements <= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements < ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
===========================================================================
std.Non_Crossing_Biased_Climb()boolean:::ENTER
::High_Confidence == 1
::Two_of_Three_Reports_Valid one of { 0, 1 }
::Alt_Layer_Value >= 0
::Positive_RA_Alt_Thresh != null
::Positive_RA_Alt_Thresh[] == [400, 500, 640, 740]
::Positive_RA_Alt_Thresh[] sorted by <
::Other_RAC one of { 0, 1 }
::Other_Capability one of { 0, 1 }
::Climb_Inhibit one of { 0, 1 }
size(::Positive_RA_Alt_Thresh[]) == 4
::Positive_RA_Alt_Thresh[::Alt_Layer_Value] == 0  (mod 20)
{740} subset of ::Positive_RA_Alt_Thresh[::Alt_Layer_Value..]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements one of { 500, 640, 740 }
{400} subset of ::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements one of { 400, 500, 640 }
::Own_Tracked_Alt != ::Other_Tracked_Alt
::Alt_Layer_Value <= size(::Positive_RA_Alt_Thresh[])-1
::Positive_RA_Alt_Thresh[::Alt_Layer_Value..] elements >= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements > ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value] elements <= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements < ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
===========================================================================
std.Non_Crossing_Biased_Climb()boolean:::EXIT
::Cur_Vertical_Sep == orig(::Cur_Vertical_Sep)
::High_Confidence == orig(::High_Confidence)
::Two_of_Three_Reports_Valid == orig(::Two_of_Three_Reports_Valid)
::Own_Tracked_Alt == orig(::Own_Tracked_Alt)
::Own_Tracked_Alt_Rate == orig(::Own_Tracked_Alt_Rate)
::Other_Tracked_Alt == orig(::Other_Tracked_Alt)
::Alt_Layer_Value == orig(::Alt_Layer_Value)
::Positive_RA_Alt_Thresh == orig(::Positive_RA_Alt_Thresh)
::Positive_RA_Alt_Thresh[] == orig(::Positive_RA_Alt_Thresh[])
::Up_Separation == orig(::Up_Separation)
::Down_Separation == orig(::Down_Separation)
::Other_RAC == orig(::Other_RAC)
::Other_Capability == orig(::Other_Capability)
::Climb_Inhibit == orig(::Climb_Inhibit)
(return == 0)  ==>  (return is a pointer)
::High_Confidence == 1
::Two_of_Three_Reports_Valid one of { 0, 1 }
::Alt_Layer_Value >= 0
::Positive_RA_Alt_Thresh != null
::Positive_RA_Alt_Thresh[] == [400, 500, 640, 740]
::Positive_RA_Alt_Thresh[] sorted by <
::Other_RAC one of { 0, 1 }
::Other_Capability one of { 0, 1 }
::Climb_Inhibit one of { 0, 1 }
return one of { 0, 1 }
size(::Positive_RA_Alt_Thresh[]) == 4
::Positive_RA_Alt_Thresh[::Alt_Layer_Value] == 0  (mod 20)
{740} subset of ::Positive_RA_Alt_Thresh[::Alt_Layer_Value..]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements one of { 500, 640, 740 }
{400} subset of ::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements one of { 400, 500, 640 }
::Own_Tracked_Alt != ::Other_Tracked_Alt
::Alt_Layer_Value <= size(::Positive_RA_Alt_Thresh[])-1
::Positive_RA_Alt_Thresh[::Alt_Layer_Value..] elements >= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements > ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value] elements <= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements < ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
===========================================================================
std.Non_Crossing_Biased_Climb()boolean:::EXIT;condition="return == true"
return == 1
===========================================================================
std.Non_Crossing_Biased_Climb()boolean:::EXIT;condition="not(return == true)"
return == 0
===========================================================================
std.Non_Crossing_Biased_Descend()boolean:::ENTER
::High_Confidence == 1
::Two_of_Three_Reports_Valid one of { 0, 1 }
::Alt_Layer_Value >= 0
::Positive_RA_Alt_Thresh != null
::Positive_RA_Alt_Thresh[] == [400, 500, 640, 740]
::Positive_RA_Alt_Thresh[] sorted by <
::Other_RAC one of { 0, 1 }
::Other_Capability one of { 0, 1 }
::Climb_Inhibit one of { 0, 1 }
size(::Positive_RA_Alt_Thresh[]) == 4
::Positive_RA_Alt_Thresh[::Alt_Layer_Value] == 0  (mod 20)
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements one of { 500, 640, 740 }
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements one of { 400, 500, 640 }
::Own_Tracked_Alt != ::Other_Tracked_Alt
::Alt_Layer_Value <= size(::Positive_RA_Alt_Thresh[])-1
::Positive_RA_Alt_Thresh[::Alt_Layer_Value..] elements >= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements > ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value] elements <= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements < ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
===========================================================================
std.Non_Crossing_Biased_Descend()boolean:::EXIT
::Cur_Vertical_Sep == orig(::Cur_Vertical_Sep)
::High_Confidence == orig(::High_Confidence)
::Two_of_Three_Reports_Valid == orig(::Two_of_Three_Reports_Valid)
::Own_Tracked_Alt == orig(::Own_Tracked_Alt)
::Own_Tracked_Alt_Rate == orig(::Own_Tracked_Alt_Rate)
::Other_Tracked_Alt == orig(::Other_Tracked_Alt)
::Alt_Layer_Value == orig(::Alt_Layer_Value)
::Positive_RA_Alt_Thresh == orig(::Positive_RA_Alt_Thresh)
::Positive_RA_Alt_Thresh[] == orig(::Positive_RA_Alt_Thresh[])
::Up_Separation == orig(::Up_Separation)
::Down_Separation == orig(::Down_Separation)
::Other_RAC == orig(::Other_RAC)
::Other_Capability == orig(::Other_Capability)
::Climb_Inhibit == orig(::Climb_Inhibit)
(return == 0)  ==>  (return is a pointer)
::High_Confidence == 1
::Two_of_Three_Reports_Valid one of { 0, 1 }
::Alt_Layer_Value >= 0
::Positive_RA_Alt_Thresh != null
::Positive_RA_Alt_Thresh[] == [400, 500, 640, 740]
::Positive_RA_Alt_Thresh[] sorted by <
::Other_RAC one of { 0, 1 }
::Other_Capability one of { 0, 1 }
::Climb_Inhibit one of { 0, 1 }
return one of { 0, 1 }
size(::Positive_RA_Alt_Thresh[]) == 4
::Positive_RA_Alt_Thresh[::Alt_Layer_Value] == 0  (mod 20)
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements one of { 500, 640, 740 }
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements one of { 400, 500, 640 }
::Own_Tracked_Alt != ::Other_Tracked_Alt
::Alt_Layer_Value <= size(::Positive_RA_Alt_Thresh[])-1
::Positive_RA_Alt_Thresh[::Alt_Layer_Value..] elements >= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements > ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value] elements <= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements < ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
===========================================================================
std.Non_Crossing_Biased_Descend()boolean:::EXIT;condition="return == true"
return == 1
===========================================================================
std.Non_Crossing_Biased_Descend()boolean:::EXIT;condition="not(return == true)"
return == 0
===========================================================================
std.Own_Above_Threat()boolean:::ENTER
::High_Confidence == 1
::Two_of_Three_Reports_Valid one of { 0, 1 }
::Alt_Layer_Value >= 0
::Positive_RA_Alt_Thresh != null
::Positive_RA_Alt_Thresh[] == [400, 500, 640, 740]
::Positive_RA_Alt_Thresh[] sorted by <
::Other_RAC one of { 0, 1 }
::Other_Capability one of { 0, 1 }
::Climb_Inhibit one of { 0, 1 }
size(::Positive_RA_Alt_Thresh[]) == 4
::Positive_RA_Alt_Thresh[::Alt_Layer_Value] == 0  (mod 20)
{740} subset of ::Positive_RA_Alt_Thresh[::Alt_Layer_Value..]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements one of { 500, 640, 740 }
{400} subset of ::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements one of { 400, 500, 640 }
::Own_Tracked_Alt != ::Other_Tracked_Alt
::Alt_Layer_Value <= size(::Positive_RA_Alt_Thresh[])-1
::Positive_RA_Alt_Thresh[::Alt_Layer_Value..] elements >= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements > ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value] elements <= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements < ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
===========================================================================
std.Own_Above_Threat()boolean:::EXIT
::Cur_Vertical_Sep == orig(::Cur_Vertical_Sep)
::High_Confidence == orig(::High_Confidence)
::Two_of_Three_Reports_Valid == orig(::Two_of_Three_Reports_Valid)
::Own_Tracked_Alt == orig(::Own_Tracked_Alt)
::Own_Tracked_Alt_Rate == orig(::Own_Tracked_Alt_Rate)
::Other_Tracked_Alt == orig(::Other_Tracked_Alt)
::Alt_Layer_Value == orig(::Alt_Layer_Value)
::Positive_RA_Alt_Thresh == orig(::Positive_RA_Alt_Thresh)
::Positive_RA_Alt_Thresh[] == orig(::Positive_RA_Alt_Thresh[])
::Up_Separation == orig(::Up_Separation)
::Down_Separation == orig(::Down_Separation)
::Other_RAC == orig(::Other_RAC)
::Other_Capability == orig(::Other_Capability)
::Climb_Inhibit == orig(::Climb_Inhibit)
(return == 0)  <==>  (::Own_Tracked_Alt < ::Other_Tracked_Alt)
(return == 0)  ==>  (return is a pointer)
(return == 1)  <==>  (::Own_Tracked_Alt > ::Other_Tracked_Alt)
(return == 1)  ==>  (::Up_Separation <= ::Down_Separation)
::High_Confidence == 1
::Two_of_Three_Reports_Valid one of { 0, 1 }
::Alt_Layer_Value >= 0
::Positive_RA_Alt_Thresh != null
::Positive_RA_Alt_Thresh[] == [400, 500, 640, 740]
::Positive_RA_Alt_Thresh[] sorted by <
::Other_RAC one of { 0, 1 }
::Other_Capability one of { 0, 1 }
::Climb_Inhibit one of { 0, 1 }
return one of { 0, 1 }
size(::Positive_RA_Alt_Thresh[]) == 4
::Positive_RA_Alt_Thresh[::Alt_Layer_Value] == 0  (mod 20)
{740} subset of ::Positive_RA_Alt_Thresh[::Alt_Layer_Value..]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements one of { 500, 640, 740 }
{400} subset of ::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements one of { 400, 500, 640 }
::Own_Tracked_Alt != ::Other_Tracked_Alt
::Alt_Layer_Value <= size(::Positive_RA_Alt_Thresh[])-1
::Positive_RA_Alt_Thresh[::Alt_Layer_Value..] elements >= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements > ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value] elements <= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements < ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
===========================================================================
std.Own_Above_Threat()boolean:::EXIT;condition="return == true"
return == 1
::Own_Tracked_Alt > ::Other_Tracked_Alt
::Up_Separation <= ::Down_Separation
===========================================================================
std.Own_Above_Threat()boolean:::EXIT;condition="not(return == true)"
return == 0
::Own_Tracked_Alt < ::Other_Tracked_Alt
===========================================================================
std.Own_Below_Threat()boolean:::ENTER
::High_Confidence == 1
::Two_of_Three_Reports_Valid one of { 0, 1 }
::Own_Tracked_Alt_Rate >= 2
::Alt_Layer_Value >= 0
::Positive_RA_Alt_Thresh != null
::Positive_RA_Alt_Thresh[] == [400, 500, 640, 740]
::Positive_RA_Alt_Thresh[] sorted by <
::Other_RAC one of { 0, 1 }
::Other_Capability one of { 0, 1 }
::Climb_Inhibit one of { 0, 1 }
size(::Positive_RA_Alt_Thresh[]) == 4
::Positive_RA_Alt_Thresh[::Alt_Layer_Value] == 0  (mod 20)
{740} subset of ::Positive_RA_Alt_Thresh[::Alt_Layer_Value..]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements one of { 500, 640, 740 }
{400} subset of ::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements one of { 400, 500, 640 }
::Own_Tracked_Alt != ::Other_Tracked_Alt
::Alt_Layer_Value <= size(::Positive_RA_Alt_Thresh[])-1
::Positive_RA_Alt_Thresh[::Alt_Layer_Value..] elements >= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements > ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value] elements <= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements < ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
===========================================================================
std.Own_Below_Threat()boolean:::EXIT
::Cur_Vertical_Sep == orig(::Cur_Vertical_Sep)
::High_Confidence == orig(::High_Confidence)
::Two_of_Three_Reports_Valid == orig(::Two_of_Three_Reports_Valid)
::Own_Tracked_Alt == orig(::Own_Tracked_Alt)
::Own_Tracked_Alt_Rate == orig(::Own_Tracked_Alt_Rate)
::Other_Tracked_Alt == orig(::Other_Tracked_Alt)
::Alt_Layer_Value == orig(::Alt_Layer_Value)
::Positive_RA_Alt_Thresh == orig(::Positive_RA_Alt_Thresh)
::Positive_RA_Alt_Thresh[] == orig(::Positive_RA_Alt_Thresh[])
::Up_Separation == orig(::Up_Separation)
::Down_Separation == orig(::Down_Separation)
::Other_RAC == orig(::Other_RAC)
::Other_Capability == orig(::Other_Capability)
::Climb_Inhibit == orig(::Climb_Inhibit)
(return == 0)  <==>  (::Own_Tracked_Alt > ::Other_Tracked_Alt)
(return == 0)  ==>  (return is a pointer)
(return == 1)  <==>  (::Own_Tracked_Alt < ::Other_Tracked_Alt)
(return == 1)  ==>  (::Own_Tracked_Alt_Rate >= 2)
::High_Confidence == 1
::Two_of_Three_Reports_Valid one of { 0, 1 }
::Own_Tracked_Alt_Rate >= 2
::Alt_Layer_Value >= 0
::Positive_RA_Alt_Thresh != null
::Positive_RA_Alt_Thresh[] == [400, 500, 640, 740]
::Positive_RA_Alt_Thresh[] sorted by <
::Other_RAC one of { 0, 1 }
::Other_Capability one of { 0, 1 }
::Climb_Inhibit one of { 0, 1 }
return one of { 0, 1 }
size(::Positive_RA_Alt_Thresh[]) == 4
::Positive_RA_Alt_Thresh[::Alt_Layer_Value] == 0  (mod 20)
{740} subset of ::Positive_RA_Alt_Thresh[::Alt_Layer_Value..]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements one of { 500, 640, 740 }
{400} subset of ::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements one of { 400, 500, 640 }
::Own_Tracked_Alt != ::Other_Tracked_Alt
::Alt_Layer_Value <= size(::Positive_RA_Alt_Thresh[])-1
::Positive_RA_Alt_Thresh[::Alt_Layer_Value..] elements >= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements > ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value] elements <= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements < ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
===========================================================================
std.Own_Below_Threat()boolean:::EXIT;condition="return == true"
return == 1
::Own_Tracked_Alt < ::Other_Tracked_Alt
===========================================================================
std.Own_Below_Threat()boolean:::EXIT;condition="not(return == true)"
return == 0
::Own_Tracked_Alt > ::Other_Tracked_Alt
===========================================================================
std.alt_sep_test()int:::ENTER
::High_Confidence one of { 0, 1 }
::Two_of_Three_Reports_Valid one of { 0, 1 }
::Alt_Layer_Value >= 0
::Positive_RA_Alt_Thresh != null
::Positive_RA_Alt_Thresh[] == [400, 500, 640, 740]
::Positive_RA_Alt_Thresh[] sorted by <
::Other_RAC one of { 0, 1 }
::Other_Capability one of { 0, 1 }
::Climb_Inhibit one of { 0, 1 }
size(::Positive_RA_Alt_Thresh[]) == 4
::Positive_RA_Alt_Thresh[::Alt_Layer_Value] == 0  (mod 20)
{740} subset of ::Positive_RA_Alt_Thresh[::Alt_Layer_Value..]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements one of { 500, 640, 740 }
{400} subset of ::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements one of { 400, 500, 640 }
::Own_Tracked_Alt != ::Other_Tracked_Alt
::Alt_Layer_Value <= size(::Positive_RA_Alt_Thresh[])-1
::Positive_RA_Alt_Thresh[::Alt_Layer_Value..] elements >= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements > ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value] elements <= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements < ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
===========================================================================
std.alt_sep_test()int:::EXIT
::Cur_Vertical_Sep == orig(::Cur_Vertical_Sep)
::High_Confidence == orig(::High_Confidence)
::Two_of_Three_Reports_Valid == orig(::Two_of_Three_Reports_Valid)
::Own_Tracked_Alt == orig(::Own_Tracked_Alt)
::Own_Tracked_Alt_Rate == orig(::Own_Tracked_Alt_Rate)
::Other_Tracked_Alt == orig(::Other_Tracked_Alt)
::Alt_Layer_Value == orig(::Alt_Layer_Value)
::Positive_RA_Alt_Thresh == orig(::Positive_RA_Alt_Thresh)
::Positive_RA_Alt_Thresh[] == orig(::Positive_RA_Alt_Thresh[])
::Up_Separation == orig(::Up_Separation)
::Down_Separation == orig(::Down_Separation)
::Other_RAC == orig(::Other_RAC)
::Other_Capability == orig(::Other_Capability)
::Climb_Inhibit == orig(::Climb_Inhibit)
::High_Confidence one of { 0, 1 }
::Two_of_Three_Reports_Valid one of { 0, 1 }
::Alt_Layer_Value >= 0
::Positive_RA_Alt_Thresh != null
::Positive_RA_Alt_Thresh[] == [400, 500, 640, 740]
::Positive_RA_Alt_Thresh[] sorted by <
::Other_RAC one of { 0, 1 }
::Other_Capability one of { 0, 1 }
::Climb_Inhibit one of { 0, 1 }
return one of { 0, 1, 2 }
size(::Positive_RA_Alt_Thresh[]) == 4
::Positive_RA_Alt_Thresh[::Alt_Layer_Value] == 0  (mod 20)
{740} subset of ::Positive_RA_Alt_Thresh[::Alt_Layer_Value..]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements one of { 500, 640, 740 }
{400} subset of ::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements one of { 400, 500, 640 }
::Own_Tracked_Alt != ::Other_Tracked_Alt
::Alt_Layer_Value <= size(::Positive_RA_Alt_Thresh[])-1
::Positive_RA_Alt_Thresh[::Alt_Layer_Value..] elements >= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements > ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value] elements <= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] elements < ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
===========================================================================
std.initialize()void:::ENTER
::Own_Tracked_Alt == ::Other_Tracked_Alt
::Up_Separation == ::Down_Separation
::Cur_Vertical_Sep == 0
::High_Confidence == 0
::Two_of_Three_Reports_Valid == 0
::Own_Tracked_Alt == 0
::Own_Tracked_Alt_Rate == 0
::Alt_Layer_Value == 0
::Positive_RA_Alt_Thresh != null
::Up_Separation == 0
::Other_RAC == 0
::Other_Capability == 0
::Climb_Inhibit == 0
===========================================================================
std.initialize()void:::EXIT
::Cur_Vertical_Sep == orig(::Cur_Vertical_Sep)
::High_Confidence == orig(::High_Confidence)
::Two_of_Three_Reports_Valid == orig(::Two_of_Three_Reports_Valid)
::Own_Tracked_Alt == ::Other_Tracked_Alt
::Own_Tracked_Alt == orig(::Own_Tracked_Alt)
::Own_Tracked_Alt == orig(::Other_Tracked_Alt)
::Own_Tracked_Alt_Rate == orig(::Own_Tracked_Alt_Rate)
::Alt_Layer_Value == orig(::Alt_Layer_Value)
::Positive_RA_Alt_Thresh == orig(::Positive_RA_Alt_Thresh)
::Up_Separation == ::Down_Separation
::Up_Separation == orig(::Up_Separation)
::Up_Separation == orig(::Down_Separation)
::Other_RAC == orig(::Other_RAC)
::Other_Capability == orig(::Other_Capability)
::Climb_Inhibit == orig(::Climb_Inhibit)
::Cur_Vertical_Sep == 0
::High_Confidence == 0
::Two_of_Three_Reports_Valid == 0
::Own_Tracked_Alt == 0
::Own_Tracked_Alt_Rate == 0
::Alt_Layer_Value == 0
::Positive_RA_Alt_Thresh != null
::Positive_RA_Alt_Thresh[] == [400, 500, 640, 740]
::Up_Separation == 0
::Other_RAC == 0
::Other_Capability == 0
::Climb_Inhibit == 0
size(::Positive_RA_Alt_Thresh[]) == 4
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] == [500, 640, 740]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements one of { 500, 640, 740 }
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value] == [400]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value] elements == 400
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value-1] == []
::Positive_RA_Alt_Thresh[] elements > ::Up_Separation
::Positive_RA_Alt_Thresh[] elements >= ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[::Alt_Layer_Value+1..] elements > ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
::Positive_RA_Alt_Thresh[0..::Alt_Layer_Value] elements == ::Positive_RA_Alt_Thresh[::Alt_Layer_Value]
