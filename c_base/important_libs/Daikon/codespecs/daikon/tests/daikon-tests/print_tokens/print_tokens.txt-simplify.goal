===========================================================================
std.check_delimiter(char;)int:::ENTER
(>= |ch| -1)
===========================================================================
std.check_delimiter(char;)int:::EXIT20
(EQ |return| 1)
===========================================================================
std.check_delimiter(char;)int:::EXIT21
(EQ |return| 0)
===========================================================================
std.check_delimiter(char;)int:::EXIT
(EQ |ch| |__orig__ch|)
(IMPLIES (EQ |return| 1) (>= |ch| -1))
(>= |ch| -1)
(OR (EQ |return| 0) (EQ |return| 1))
===========================================================================
std.constant(int;char *;int;)int:::ENTER
(OR (EQ |state| 27) (EQ |state| 29))
(NEQ (hash |token_str|) null)
(>= |token_ind| 2)
===========================================================================
std.constant(int;char *;int;)int:::EXIT38
(EQ |state| 27)
(EQ |return| 27)
(EQ (select elems |token_str|) (select elems |__orig__token_str|))
===========================================================================
std.constant(int;char *;int;)int:::EXIT39
(EQ |state| 29)
(OR (EQ |token_ind| 2) (EQ |token_ind| 3))
(EQ |return| 29)
(< (select elems |token_str|) (select elems |__orig__token_str|))
===========================================================================
std.constant(int;char *;int;)int:::EXIT
(EQ |state| |__orig__state|)
(EQ (hash |token_str|) (hash |__orig__token_str|))
(EQ |token_ind| |__orig__token_ind|)
(OR (EQ |state| 27) (EQ |state| 29))
(NEQ (hash |token_str|) null)
(>= |token_ind| 2)
(OR (EQ |return| 27) (EQ |return| 29))
(<= (select elems |token_str|) (select elems |__orig__token_str|))
===========================================================================
std.error_or_eof_case(token_stream;token;int;char *;int;char;)token:::ENTER
(OR (EQ |cu_state| 0) (EQ |cu_state| 26))
(NEQ (hash |token_str|) null)
(>= |token_ind| 1)
(OR (EQ |ch| -1) (EQ |ch| 0) (EQ |ch| 62))
===========================================================================
std.error_or_eof_case(token_stream;token;int;char *;int;char;)token:::EXIT18
(EQ |ch| -1)
===========================================================================
std.error_or_eof_case(token_stream;token;int;char *;int;char;)token:::EXIT19
(EQ |cu_state| 0)
(OR (EQ (select elems |token_str|) |_string_|) (EQ (select elems |token_str|) |_string_>|))
(EQ |token_ind| 1)
(OR (EQ |ch| 0) (EQ |ch| 62))
===========================================================================
std.error_or_eof_case(token_stream;token;int;char *;int;char;)token:::EXIT
(EQ |cu_state| |__orig__cu_state|)
(EQ (hash |token_str|) (hash |__orig__token_str|))
(EQ |token_ind| |__orig__token_ind|)
(EQ |ch| |__orig__ch|)
(IMPLIES (EQ |ch| -1) (OR (EQ |cu_state| 0) (EQ |cu_state| 26)))
(IMPLIES (OR (EQ |ch| 0) (EQ |ch| 62)) (EQ |cu_state| 0))
(IMPLIES (OR (EQ |ch| 0) (EQ |ch| 62)) (EQ |token_ind| 1))
(IMPLIES (OR (EQ |ch| 0) (EQ |ch| 62)) (OR (EQ (select elems |token_str|) |_string_|) (EQ (select elems |token_str|) |_string_>|)))
(OR (EQ |cu_state| 0) (EQ |cu_state| 26))
(NEQ (hash |token_str|) null)
(>= |token_ind| 1)
(OR (EQ |ch| -1) (EQ |ch| 0) (EQ |ch| 62))
(EQ (select elems |token_str|) (select elems |__orig__token_str|))
===========================================================================
std.get_actual_token(char *;int;)int:::ENTER
(NEQ (hash |token_str|) null)
(>= |token_ind| 1)
===========================================================================
std.get_actual_token(char *;int;)int:::EXIT
(EQ (hash |token_str|) (hash |__orig__token_str|))
(EQ |token_ind| |__orig__token_ind|)
(NEQ (hash |token_str|) null)
(>= |token_ind| 1)
===========================================================================
std.get_char(character_stream;)CHARACTER:::EXIT
(>= |return| -1)
===========================================================================
std.is_end_of_character_stream(character_stream;)BOOLEAN:::EXIT4
(EQ |return| 1)
===========================================================================
std.is_end_of_character_stream(character_stream;)BOOLEAN:::EXIT5
(EQ |return| 0)
===========================================================================
std.is_end_of_character_stream(character_stream;)BOOLEAN:::EXIT
(OR (EQ |return| 0) (EQ |return| 1))
===========================================================================
std.is_eof_token(token;)BOOLEAN:::EXIT45
(EQ |return| 1)
===========================================================================
std.is_eof_token(token;)BOOLEAN:::EXIT46
(EQ |return| 0)
===========================================================================
std.is_eof_token(token;)BOOLEAN:::EXIT
(OR (EQ |return| 0) (EQ |return| 1))
===========================================================================
std.keyword(int;)int:::ENTER
===========================================================================
std.keyword(int;)int:::EXIT22
(EQ |state| 6)
(EQ |return| 6)
===========================================================================
std.keyword(int;)int:::EXIT23
(EQ |state| 9)
(EQ |return| 9)
===========================================================================
std.keyword(int;)int:::EXIT24
(EQ |state| 11)
(EQ |return| 11)
===========================================================================
std.keyword(int;)int:::EXIT25
(EQ |state| 13)
(EQ |return| 13)
===========================================================================
std.keyword(int;)int:::EXIT26
(EQ |state| 16)
(EQ |return| 16)
===========================================================================
std.keyword(int;)int:::EXIT
(EQ |state| |__orig__state|)
===========================================================================
std.next_state(int;char;)int:::ENTER
(>= |ch| -1)
===========================================================================
std.next_state(int;char;)int:::EXIT41
(OR (EQ |state| -3) (EQ |state| -2) (EQ |state| -1))
(OR (EQ |return| -3) (EQ |return| -2) (EQ |return| -1))
===========================================================================
std.next_state(int;char;)int:::EXIT42
(>= |state| 0)
(>= |return| 0)
===========================================================================
std.next_state(int;char;)int:::EXIT43
(NEQ |return| 0)
===========================================================================
std.next_state(int;char;)int:::EXIT44
(>= |state| 0)
(OR (EQ |return| -3) (EQ |return| -1) (EQ |return| 17))
(NEQ |return| 0)
===========================================================================
std.next_state(int;char;)int:::EXIT
(EQ |state| |__orig__state|)
(EQ |ch| |__orig__ch|)
(>= |ch| -1)
===========================================================================
std.numeric_case(token_stream;token;char;char *;int;)token:::ENTER
(>= |ch| -1)
(NEQ (hash |token_str|) null)
(OR (EQ |token_ind| 2) (EQ |token_ind| 3))
===========================================================================
std.numeric_case(token_stream;token;char;char *;int;)token:::EXIT16
(EQ |__orig__token_ind| 2)
(NEQ |ch| |__orig__ch|)
(>= (select elems |token_str|) (select elems |__orig__token_str|))
(>= |token_ind| |__orig__token_ind|)
===========================================================================
std.numeric_case(token_stream;token;char;char *;int;)token:::EXIT17
(EQ |ch| |__orig__ch|)
(OR (EQ |token_ind| 1) (EQ |token_ind| 2))
(NEQ (select elems |token_str|) (select elems |__orig__token_str|))
(< |token_ind| |__orig__token_ind|)
===========================================================================
std.numeric_case(token_stream;token;char;char *;int;)token:::EXIT
(EQ (hash |token_str|) (hash |__orig__token_str|))
(IFF (NEQ |ch| |__orig__ch|) (>= |token_ind| |__orig__token_ind|))
(IMPLIES (NEQ |ch| |__orig__ch|) (EQ |__orig__token_ind| 2))
(IMPLIES (NEQ |ch| |__orig__ch|) (>= (select elems |token_str|) (select elems |__orig__token_str|)))
(IFF (EQ |ch| |__orig__ch|) (< |token_ind| |__orig__token_ind|))
(IMPLIES (EQ |ch| |__orig__ch|) (>= |__orig__ch| -1))
(IMPLIES (EQ |ch| |__orig__ch|) (OR (EQ |__orig__token_ind| 2) (EQ |__orig__token_ind| 3)))
(IMPLIES (EQ |ch| |__orig__ch|) (OR (EQ |token_ind| 1) (EQ |token_ind| 2)))
(IMPLIES (EQ |ch| |__orig__ch|) (NEQ (select elems |token_str|) (select elems |__orig__token_str|)))
(>= |ch| -1)
(NEQ (hash |token_str|) null)
(>= |token_ind| 1)
===========================================================================
std.open_character_stream(string;)character_stream:::ENTER
(EQ (hash |FILENAME|) null)
===========================================================================
std.open_character_stream(string;)character_stream:::EXIT
(EQ (hash |FILENAME|) (hash |__orig__FILENAME|))
(EQ (hash |FILENAME|) null)
===========================================================================
std.open_token_stream(string;)token_stream:::ENTER
(EQ (hash |FILENAME|) null)
===========================================================================
std.open_token_stream(string;)token_stream:::EXIT
(EQ (hash |FILENAME|) (hash |__orig__FILENAME|))
(EQ (hash |FILENAME|) null)
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT47
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT48
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT49
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT50
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT51
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT52
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT53
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT54
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT55
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT56
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT57
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT58
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT59
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT60
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT61
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT62
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT63
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT64
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT65
===========================================================================
std.print_token(token;)BOOLEAN:::EXIT
(EQ |return| 1)
===========================================================================
std.special(int;)int:::ENTER
===========================================================================
std.special(int;)int:::EXIT28
(EQ |state| 19)
(EQ |return| 19)
===========================================================================
std.special(int;)int:::EXIT29
(EQ |state| 20)
(EQ |return| 20)
===========================================================================
std.special(int;)int:::EXIT30
(EQ |state| 21)
(EQ |return| 21)
===========================================================================
std.special(int;)int:::EXIT31
(EQ |state| 22)
(EQ |return| 22)
===========================================================================
std.special(int;)int:::EXIT32
(EQ |state| 23)
(EQ |return| 23)
===========================================================================
std.special(int;)int:::EXIT33
(EQ |state| 24)
(EQ |return| 24)
===========================================================================
std.special(int;)int:::EXIT34
(EQ |state| 25)
(EQ |return| 25)
===========================================================================
std.special(int;)int:::EXIT35
(EQ |state| 32)
(EQ |return| 32)
===========================================================================
std.special(int;)int:::EXIT
(EQ |state| |__orig__state|)
===========================================================================
std.unget_char(CHARACTER;character_stream;)void:::ENTER
(NEQ |ch| 0)
(>= |ch| -1)
===========================================================================
std.unget_char(CHARACTER;character_stream;)void:::EXIT7
===========================================================================
std.unget_char(CHARACTER;character_stream;)void:::EXIT
(EQ |ch| |__orig__ch|)
(NEQ |ch| 0)
(>= |ch| -1)
