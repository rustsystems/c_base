===========================================================================
misc.Param:::OBJECT
this != null
this.gi1 == 0
this.gi2 == 5
this.gs1 != null
this.gs1 != null
this.gs1.b == 15
this.gs2 != null
this.gs2 != null
this.gs2.a == 20
this.gs2.b == 25
this.gi1 < this.gs1.a
this.gi2 < this.gs1.a
(this.gs1.a >> this.gs1.b == 0)
(this.gs1.a >> this.gs2.a == 0)
(this.gs1.a >> this.gs2.b == 0)
===========================================================================
misc.Param.Param():::EXIT
this.gs1.a == 10
===========================================================================
misc.Param.main():::ENTER
this.gs1.a == 10
===========================================================================
misc.Param.main():::EXIT
this.gi1 == Contract.OldValue(this.gi1)
this.gi2 == Contract.OldValue(this.gi2)
this.gs1 == Contract.OldValue(this.gs1)
this.gs1.b == Contract.OldValue(this.gs1.b)
this.gs2 == Contract.OldValue(this.gs2)
this.gs2.a == Contract.OldValue(this.gs2.a)
this.gs2.b == Contract.OldValue(this.gs2.b)
this.gs1.a == 110
===========================================================================
misc.Param.main(java.lang.String[]):::ENTER
args != null
args.GetType() == typeof(java.lang.String[])
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
===========================================================================
misc.Param.main(java.lang.String[]):::EXIT
Contract.ForAll(0, args.Count(), i => args[i].Equals(Contract.OldValue(args)[i]))
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
===========================================================================
misc.Param.work(int, int, misc.ParamType, misc.ParamType):::ENTER
this.gi1 == pi1
this.gi2 == pi2
this.gs1 == ps1
this.gs1.a == ps1.a
this.gs1.b == ps1.b
this.gs2 == ps2
this.gs2.a == ps2.a
this.gs2.b == ps2.b
===========================================================================
misc.Param.work(int, int, misc.ParamType, misc.ParamType):::EXIT
this.gi1 == Contract.OldValue(this.gi1)
this.gi1 == Contract.OldValue(pi1)
this.gi2 == Contract.OldValue(this.gi2)
this.gi2 == Contract.OldValue(pi2)
this.gs1 == Contract.OldValue(this.gs1)
this.gs1 == Contract.OldValue(ps1)
this.gs1.a == ps1.a
this.gs1.b == ps1.b
this.gs2 == Contract.OldValue(this.gs2)
this.gs2 == Contract.OldValue(ps2)
this.gs2.a == Contract.OldValue(this.gs2.a)
this.gs2.a == Contract.OldValue(ps2.a)
this.gs2.b == Contract.OldValue(this.gs2.b)
this.gs2.b == Contract.OldValue(ps2.b)
ps1.b == Contract.OldValue(this.gs1.b)
ps1.b == Contract.OldValue(ps1.b)
ps1.b == 15
this.gi1 < ps1.a
this.gi1 < Contract.OldValue(ps1.a)
this.gi2 < ps1.a
this.gi2 < Contract.OldValue(ps1.a)
(ps1.a >> this.gs2.a == 0)
(Contract.OldValue(ps1.a) >> this.gs2.a == 0)
(ps1.a >> this.gs2.b == 0)
(Contract.OldValue(ps1.a) >> this.gs2.b == 0)
(ps1.a >> ps1.b == 0)
ps1.a - Contract.OldValue(ps1.a) - 1 == 0
(Contract.OldValue(ps1.a) >> ps1.b == 0)
===========================================================================
misc.ParamType:::OBJECT
this.a == this.b
this.a == 0
===========================================================================
misc.ParamType.ParamType():::EXIT
