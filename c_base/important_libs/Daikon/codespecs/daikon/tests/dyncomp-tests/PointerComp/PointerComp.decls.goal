input-language C/C++
decl-version 2.0
var-comparability none

ppt ..inc():::ENTER
  ppt-type enter
  variable a
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type int[]
    dec-type int[]
  variable b
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable b[..]
    var-kind array
    enclosing-var b
    array 1
    rep-type int[]
    dec-type int[]

ppt ..inc():::EXIT0
  ppt-type subexit
  variable a
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type int[]
    dec-type int[]
  variable b
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable b[..]
    var-kind array
    enclosing-var b
    array 1
    rep-type int[]
    dec-type int[]

ppt ..interactAfter():::ENTER
  ppt-type enter
  variable x
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable x[..]
    var-kind array
    enclosing-var x
    array 1
    rep-type int[]
    dec-type int[]
  variable y
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable y[..]
    var-kind array
    enclosing-var y
    array 1
    rep-type int[]
    dec-type int[]
  variable z
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable z[..]
    var-kind array
    enclosing-var z
    array 1
    rep-type int[]
    dec-type int[]

ppt ..interactAfter():::EXIT0
  ppt-type subexit
  variable x
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable x[..]
    var-kind array
    enclosing-var x
    array 1
    rep-type int[]
    dec-type int[]
  variable y
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable y[..]
    var-kind array
    enclosing-var y
    array 1
    rep-type int[]
    dec-type int[]
  variable z
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable z[..]
    var-kind array
    enclosing-var z
    array 1
    rep-type int[]
    dec-type int[]

ppt ..internalInteraction():::ENTER
  ppt-type enter
  variable oranges
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable oranges[..]
    var-kind array
    enclosing-var oranges
    array 1
    rep-type int[]
    dec-type int[]
  variable x
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable x[..]
    var-kind array
    enclosing-var x
    array 1
    rep-type int[]
    dec-type int[]
  variable y
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable y[..]
    var-kind array
    enclosing-var y
    array 1
    rep-type int[]
    dec-type int[]
  variable z
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable z[..]
    var-kind array
    enclosing-var z
    array 1
    rep-type int[]
    dec-type int[]

ppt ..internalInteraction():::EXIT0
  ppt-type subexit
  variable oranges
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable oranges[..]
    var-kind array
    enclosing-var oranges
    array 1
    rep-type int[]
    dec-type int[]
  variable x
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable x[..]
    var-kind array
    enclosing-var x
    array 1
    rep-type int[]
    dec-type int[]
  variable y
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable y[..]
    var-kind array
    enclosing-var y
    array 1
    rep-type int[]
    dec-type int[]
  variable z
    var-kind variable
    rep-type hashcode
    dec-type int*
    flags is_param 
  variable z[..]
    var-kind array
    enclosing-var z
    array 1
    rep-type int[]
    dec-type int[]

ppt ..main():::ENTER
  ppt-type enter

ppt ..main():::EXIT0
  ppt-type subexit
  variable return
    var-kind variable
    rep-type int
    dec-type int

