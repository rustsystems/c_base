%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86d Copyright 1999 Radical Eye Software
%%Title: valgrind-talk.dvi
%%Pages: 17
%%PageOrder: Ascend
%%Orientation: Landscape
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Palatino-Roman
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/opt/tex.bin/dvips valgrind-talk.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.07.09:1117
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin 55380996 39158280 2074 600 600 (valgrind-talk.dvi)
@start
%DVIPSBitmapFont: Fa cmtt10 20.74 37
/Fa 37 127 df<EE07C0EE1FF0163FEEFFF85D15075D4B13F05D4B13C092B512804AEBFE
004A5B4A5B4A13E04A5B4A5B4A90C7FC4A5A5D495B495BA2495B495B5D5B4990C8FC5C13
7F5C495AA2485BA2485BA25C5A5C5AA291C9FC5AA25BA2123F5BA3127FA25BA412FFA25B
B07FA2127FA47FA2123FA37F121FA27FA27E80A27E807E80A26C7FA26C7FA26D7E80133F
806D7F7F816D7F6D7FA26D7F6D7F816E7E6E7F6E7F6E7F6E13F86E7F6E7F6EEBFF806F13
C06F13F0816F13F881150181EE3FF0161FEE07C02D8663F75A>40
D<121FEA3FC0487EEAFFF87F13FF806C7F6C7F6C7F6C7F00037F6C7F6C7F013F7F6D7F6D
7F6D7F6D7F7F6D7F6E7EA26E7E6E7F80826E7F8082806E7FA26F7EA26F7EA2151F828117
80A28117C0A281A217E081A317F0A281A417F8A2167FB016FFA217F0A45DA217E0A35D17
C0A25DA217805DA217005D5E153FA24B5AA24B5AA24A5B5C5E5C4A5B5E5C4A90C7FC4A5A
A24A5A495B5B495B495B495B495B90B5C8FC485B485B000F5B485B485B485BB55A91C9FC
13FC5BEA7FE06C5A6CCAFC2D8671F75A>I<001FBA12C04819E04819F0BB12F8A66C19F0
6C19E06C19C0450C76BA5A>45 D<13FCEA03FF000F13C04813E04813F0A24813F8A2B512
FCA66C13F8A26C13F0A26C13E06C13C000031300EA00FC16165E955A>I<F10FC0F11FE0
F13FF01AF8197FA219FFA2601AF0601AE0601AC0601A80601A006061A24E5AA24E5AA25F
615F615F615F615F96C7FCA24D5AA24D5AA217FF605E605E605E605E60A24C90C8FCA24C
5AA2167F5F16FF5F5D5F5D5F5D5FA24B5BA24B90C9FCA25D5E157F5E15FF5E5C5E5C5EA2
4A5BA24A5BA25C93CAFC5C5D147F5D14FF5D5B5DA2495BA2495BA25B5D5B92CBFC5B5C13
7F5C13FF5CA2485BA2485BA25A5C5A5C5A91CCFC5A5B127F5B12FF5BA25BA25B127F6C5A
6C5A458676F75A>I<13FCEA03FF000F13C04813E04813F0A24813F8A2B512FCA66C13F8
A26C13F0A26C13E06C13C000031300EA00FC90C7FCB3AC13FCEA03FF000F13C04813E048
13F0A24813F8A2B512FCA66C13F8A26C13F0A26C13E06C13C000031300EA00FC164A5EC9
5A>58 D<F107C0F11FE0F13FF0F1FFF860180760183F95B5FC4D14F0050714E04D14C005
3F14004D5B4CB512F84C5C040F14C04C5C047F49C7FC93B512F803035C4B14C0031F5C4B
49C8FC92B55A4A14F002075C4A1480023F91C9FC4A13FC49B55A4914E0010F5C4991CAFC
017F5B90B512F800035C4814C0001F5C4849CBFC485BB512F05C1480A214E0806C13FC6C
7F6C6D7E0007806C14F0C6806D13FE011F7F6D14C00103806D14F86D6C7F6E13FF020F80
6E14E00201806E14FC033F7F6F6D7E0307806F14F00300807013FE041F6D7E7080040314
F07080706C13FE717F050F14C07114E0050114F07114F8183F180F84180184F13FF0F11F
E0F107C0455876E05A>60 D<001FBB12C0481AE0481AF0BC12F8A66C1AF06C1AE0000F1A
80CFFCAE000FBB1280003F1AE0481AF0BC12F8A66C1AF06C1AE06C1AC04D267AC75A>I<
121FEA3FC0487EEAFFF87F13FF8014E0806C13FC6C13FF6C80000714E06C80C614FC6D7F
011F6D7E6D80010314F00100806E13FE021F7F6E14C00203806E14F86E6C7F6F13FF030F
806F14E00301806F14FC043F7F706D7E0407807014F00400807113FE051F7F7114C00503
14E07114F0716C13F884180FA2183F604DB512F04D14E0050F14C04D1400057F5B94B512
F804035C4C14C0041F5C4C49C7FC93B55A4B14F003075C4B1480033F91C8FC4B13FC4AB5
5A4A14E0020F5C4A91C9FC027F5B49B512F8495C010F14C0495C017F49CAFC90B55A0003
14F0485C001F14804891CBFC4813FCB55A14E0148091CCFC13FC5BEA7FE06C5A6CCDFC45
5876E05A>I<EE3FF84C7E4C7E4B7FA24B80A54B80A44B487FA4031F80EEFC7FA4033F80
A2EEF83FA2037F80A3EEF01FA203FF80A3EEE00F4A81A44A496C7FA54A496C7FA44A496C
7FA54A486D7FA4023F824B147FA3027F824B143FA402FF8292B7FCA34983A44984A403C0
C7120749844B80A3498492C87EA449844A81A3013F844A167FA2001FB500F8023FB512F0
007F6E4A14FCB66C91B612FEA26F5BA34B7FA26C4A6E14FC001F4A6E14F04F6B7BEA5A>
65 D<DC1FFE141F4BB500E0EB3FC0030702F8137F033F02FE14E04B9138FF80FF4AB712
E0020716F14A16FD4A93B5FC5C5C91B5EAFC07499138C0007F4991C7121F4901FC140749
49804901E0804B804949814990C97E5C49488285485B4A825A5C484982A2485BA291CA7E
5AA25B003F7213C0A249F03F0097C7FC127FA25BA412FFA25BAF7FA2127FA47FA2123FA2
7F1A3F001FF1FFC07F4F13E07E80A26C7FA26C6D5E806C1AC06E5E6C7F4F13806D7E6E5E
6D6D4B13006D6D5D6F4B5A6D01F84A5B6D6D5C6D01FF020F5B6D02C0013F5B6DDAFC03B5
5A6E90B75A6E5F6E94C7FC6E5E6E5E020116F06E6C15C06F92C8FC030714FC030114E092
26001FFEC9FC4B6D79EA5A>67 D<001FB612FC007F15FF83B8FCA57E94CAFC001F15FCD8
00070180CBFCB3B3B3AAF207E0F20FF0F21FF8F23FFCB0001FBBFC127FA2BCFCA56C1AF8
A2001F1AE04E697BE85A>76 D<001FB712E0007F16F8A2B812FCA517F8A217E001F0C9FC
B3B3B3B3B3B3A490B712E017F8A217FCA56C16F8A2001F16E02E865BF75A>91
D<001FB712E0007F16F8A2B812FCA57EA2121FC9123FB3B3B3B3B3B3A4001FB7FC127FA2
B8FCA56C16F8A2001F16E02E867AF75A>93 D<91381FFFFE0103B612E0010F15F8013F15
FE90B87E4817E0488318FC48838448849126F8000F804A1300053F7F050F7F836C490201
7F836C49826C49157F6C90C9123F013C8390CAFC181FA5EF7FFF93B6FC151F4AB7FC140F
147F49B8FC1307131F5B90B812DF489238F8001F4892C7FC4814E04891C8FC4813F814E0
485B91C9FC485A5B485AA25BA57F183F127F6D167F6D16FF6C6C5D6E14076C01E0141F02
F891B612C06C9026FF801FEDFFF86C91B912FEA26C1AFF7E6C17F7013F16C36D16010107
DBFC0014FE010103F0131FD9003F0280010313F8020701F0CAFC504D77CB5A>97
D<4BB512E0031F14FE92B77E020316E0020F16F8023F824A8249B8FC49835B49188049EC
80004901F8C77E4913E090B5128092C8FC4801FC6F1300485B4A6F5A48496F5A4A6F5A48
EF01E04A92C8FC4890CCFCA2485AA25B127FA25BA212FFA25BAA7FA2127FA27FA26C7EA2
7F6C183F6EEEFFC06C7F4E13E06C7F6E5D6C7F6C01FE4B13C06E5D6C02C04A13806D01F0
5C6D01FC49B512006D9038FFC00F6D91B65A6D5F6D5F6D5F6D6C5E6E5E020F93C7FC0203
15FC020015F0031F1480030101F8C8FC434D74CB5A>99 D<050FB5FC053F14C05F86A683
170FEF0001B3923807FF80037F13F04AB512FE020FECFF814A15C1027F15F149B712F949
93B5FC5B5B5B4914004901F0131F90B500C013074891C712014A804801F8814A81484981
484981A248498191C9FC84485AA24982127FA25BA212FFA25BAA7FA2127F60A27F606C7E
A2606C7E6E5D6C5F806C6D5D6E92B5FC6C6D5C6E5C6C6D5C6C6D6C131F6D01E0137FDBFC
03B712FC6D90BAFC6D1A806D16FD6D16F9010116E16D16C1023F15816E4AC6FC020702F8
1600020002E0013F13FCDB1FFECBFC516A7AE85A>I<923803FFE0033F13FE4AB67E0207
15E0021F15F84A15FE91B8FC4917C0010783498349834914004901F0010F7F03C001037F
90B5C8FC48496F7E48498102F06F138048834A6F13C0485B4A6F13E04890C9FC84484818
F0A24982127FA24918F8A200FF187F90BAFCA81AF0A21AC001F8CCFCA2127FA27FA2123F
7FA26C7E6EEE0FC06CF03FF0806C6DEE7FF8806C6D16FF806C6D4B13F06C6D6C5C6F020F
13E06D01F05C6D01FE027F13C06D9026FFE007B5FC6D91B712806D18006D5F01005F6E5E
021F16E00207168002014BC7FC6E6C14F8030F14C0030001FCC8FC454D76CB5A>I<9438
03FFE0053F13FC4CB6FC040715C04C15E0163F4C15F093B7FC4B16F85D5D4BEBFE0317F0
4BD9C00113F017804B90C713E04CEC7FC04B48EC3F8096C7FC5EAD001FB912FC4818FF5A
BB1280A56C1900A2001F18FCC8D87FF8C9FCB3B3B0000FB912C0488448844884A56C606C
606C60456A7AE95A>I<F2FFC0DB07FF020F13F0037F01F0017F13FC4AB5D8FC01B57E02
07DAFF0380021F03CF1580027F92B7FC91BB12C05B5B5B49188F49D9FE03DAF807138092
26F0007F13E04901C0011F6E13004990C700076D6C5A4A6EEC007849486E6D90C7FC4A80
A248496F7EA24A153F4884A24A151FA76E153FA26C606E157FA26C6D4B5AA26E5C6D6C4A
5B6E5C6D01C0011F5B6D01F0017F5BDBFE03B5FC92B75A96C9FC495E60495E6090B812C0
02E792CAFC02C114FCDAC07F13F0030790CBFC92CDFCA380A26D7EA28090383FFE6091B7
12F06DEEFFC06D17F819FF013F18C04918F090BA12FC48854885488602FCC8003F804801
E0030080480180161F91CA00037F4848170049727E49183F4848727EA249180F00FF86A2
491807A66D180FA26C6C4E5A6D183F6C6C4E5A6D18FF6C6C6C04035B02E0160F6C01F804
3F5B6C01FF4BB55A6C02E0020F5C03FF49B6FCC692B748C7FC6D606D606D60010718C001
0195C8FC6D6C16FC021F16F002031680DA007F02FCC9FC030191CAFC52747BCB5A>I<38
1FFFFE007F6D7EB6FC81A67E121FEA0003B3EF3FFE4CB512C0040F14F0043F14FC93B67E
03C38103C78203CF8203DF8292B87EA2DDE00F7FEF000104F87F4C6E7E16C04C143F93C8
7F5D5D191F5D5DA35DA45DB3B1001FB600F8017FB612C0007FDBFE01B712F0B817F85FA5
836C03FE17F0001F9226F8007F15C055697EE85A>I<ED07C0ED1FF04B7E4B7E4B7EA24A
7FA56E5BA26F5A6F5A6F5AED07C092CBFCAF0007B612F8001F15FEA24881A57EA21207C8
120FB3B3B0001FB912FC488448841A80BBFCA37E1A006C606C60416A73E95A>I<EF0F80
EF3FE0EF7FF0EFFFF84C13FCA24C13FEA57013FCA27013F8EF7FF0EF3FE0EF0F8094C7FC
AF027FB612F091B712FC5B4916FEA57F7F8091C8121FB3B3B3B3A3173FA218FCA2177FEA
03C0D80FF016F8486C15FF486C4A13F0487E4C13E0B55C4C13C05E047F1380DA8003B5FC
91B712006C5E5F6C5E5F6C5E6C16806C4BC7FC000115F8D8003F14E0010391C8FC379178
E95A>I<381FFFFC007F13FFA2B67EA57EA2121FEA0001B3A2053FB612F094B712FCA24C
82A5705EA2053F15F0DD001F0180C7FC4E90C8FC4E5A4E5A4D5B4D5B4D5B051F5B4D5B4D
90C9FC4D5A4C5B4C5B4C5B4C5B4C13804C90CAFC4C5A4C5A158103837F1587038F7F039F
8003BF8092B6FC04FD7F04F97F04F07FEEE07F4C6C7E04807F4C6C7E03FC6D7F4B7F4B81
4B6D7F4B6D7F4B7F727E85727E181F727E86727F84727F86727F737E193F001FB600F801
0FB6FC007F03FE013F15C0A2B84915E0A56C4B6D15C0A2001F03F8010F150053697DE85A
>I<001FB612FC4815FF5AB87EA57E7E7EC81207B3B3B3B3AB001FBA12E04819F04819F8
BB12FCA56C19F86C19F06C19E0466976E85A>I<DB03FEEC07FC291FFF801FFFC090383F
FF8048D9E07F6D90B57E4891B5D8F80114F002F3DAFC0780B500F76E488091B65B714880
6C5F95B7FC7E6C0307DAFE0F7FD8003FD9F803ECF0074B6C4A7EDBC000EC8001884B1500
92C75B4A6E487FA24A5DA34A5DA54A5DB3B2001FB5D8E007B5D8C00FEBFF8048DAF01FDA
E03F14C0486E486E4814E0A2B600FC03F815F0A36C02F803F015E0A26C4A6C4A6C14C06C
DAE007DAC00F14805C4B81CA5A>I<EF3FFE261FFFFE49B512C0007F9026FF800F14F0B6
013F14FC6FB67E03C38103C78203CF8203DF8292B87E7E001FDCE00F7FD80003ED000104
F87F4C6E7E16C04C143F93C87F5D5D191F5D5DA35DA45DB3B1001FB600F8017FB612C000
7FDBFE01B712F0B817F85FA5836C03FE17F0001F9226F8007F15C0554B7ECA5A>I<ED07
FF037F13F00203B512FE020F6E7E023F15E04A8149B712FC498249824983498349D9FC01
80499026E0003F7F90B50080010F7F4AC7120348496E7F48496E7F4A157F48496F7E4A81
48496F1380A24890C96C13C04982003F19E04982A348487013F0A44848EF7FF8AC6D17FF
007F19F0A36D5EA2003F19E06D5EA26C6C4C13C0A26E5D6C6D4B1380A26C6D4B13006E5D
6C6D4B5A6C6D4A5B02FF14076C6E495B6D01E0013F5B6DD9FC01B55A6D90B75A6D5F6D94
C7FC6D5E6D5E6D6C15F06E5D020F158002034AC8FCDA007F13F0030790C9FC454D76CB5A
>I<EF3FFC261FFFFE0103B57E007F9026FF801F14F0B6017F14FC03C1B67E03C36F7E03
CF8203DF16F092B87E866C85001FDCE01F7FD800039138FE000304F801008004E0023F7F
4C6E7F4C804BC86C7F854B6F7F4B814B831A7F4B707EA34B707EA286A31C80A286AA62A2
1C008162A2636F163FA26F4C5AA26F4C5A616F5F616F4B5B705C70023F5B704A5B04F849
B5FC70010791C7FC9326FFC07F5B94B65A6203DF5E03CF5E03C75E03C393C8FC03C115FC
DBC07F14F0041F14C0040791C9FC040013F094CBFCB3A8001FB612F8007F15FEB8FCA76C
5D001F15F851717ECA5A>I<953801FFF0001FB500FC021F13FE4802FF91B61280480403
15C0DC800F15E0B74915F0057F15F894B7FC6C038316FC16876C158F6C039F1481C70007
01BFEBF80193B512C095C713F85F05F8EC7FF04DEC1FC04DEC07004D91C7FC5F94CAFC5E
A25E5EA25EA35EA35EA45EB3A9001FB9FC48844884A2BA7EA36C60A26C606C95C8FC4E4B
7BCA5A>114 D<0203B5131F027F9138F03FC00103B6EAFC7F010F03FF13E0013F16FF90
B9FC5A5A5A5A5AED00074801E0EB007F0280141F4848C87E01F88100FF825B4981A56D6F
13C07F6C6CEE3F006D93C7FC6C6C7E14F06C13FF6C14FCEDFFF06CEDFF80000116F86C16
FF013F16C0010F16F0010316FC010082021FEDFF80020016C0030315E0DB000F14F0EE00
7F050F13F8050113FCD81F8081D83FE0EE3FFE007F171F487EF00FFFA26D82A37FA26D5E
7FF01FFE806E153F02F0EDFFFC6E5C02FE020F13F89126FFE001B5FC92B712F019E019C0
1980190001E75E01E316F801C016E0007F013F1580D9800702FCC7FC001FC76C1380404D
73CB5A>I<157EEDFF805C4A7FB2001FBA12804819E05ABB12F0A56C19E0A2001F1980C7
000301C0C9FCB3B1F101F8F107FEA2F10FFFA661821AFE6E163F70147F70ECFFFC6E6D5B
70010713F892397FFFE03F94B612F06F16E01AC06F16806F16006F5D6F15F803005D043F
14C0040F49C7FC040013F048607CDE5A>I<261FFFFE92B512F0007F6D6C010314FCB65C
6F82A66C82001F1600D80003EE001FB3B3A5193FA3197F19FFA26F5C606D6D140F6003FC
91B5FC6D9026FFC00791B512C093B912F06E19F8A280806E16DF6E161F0201EDFC0F6E6C
02F015F0031FDA800314C0030101FCCAFC554B7EC95A>I<001FB500FE023FB512FC486E
6C90B67E4886B76C481680A56C4B6C16006C626C4AC7003F5C26000FFEC9D83FF8C7FC01
0760A26E167F6D60A26F15FF6D60A26F5C6D60A26F5C027F94C8FCA26F5C023F5EA26F14
0F021F5EA26F141F020F5EA26F143F02075EA26F147F6E5EA27013FFA26E5E705AA26E5E
705AA2037F92C9FC705AA2033F5CEEF80FA2031F5CEEFC1FA2030F5CEEFE3FA203075CEE
FF7FA26F5C17FFA26F5CA36F5CA27090CAFC705AEE0FF8514B7CC95A>I<001FB500FE02
0FB6FC007F6E6C013F15C0B718E0705BA54C7F6C1BC0001F4AC7000F1500C601E0CA13E0
017F61A56E5E013F61A56D6C4C90C7FCA66D6C4C5AEE03FCEE0FFF4C1380A24C13C06D6C
4C5AA24C13E0A393B5FC6D6C6F485A17BF179F4B14F8A36D01815E0383ECFC3F171F170F
158718FE6D609238C7FE0703CF157FA218FF027F496C5CA3EDDFF803FF6D13FFA26E5F4C
7EA44C7F6E94C8FC5E6E6F5A4C131FDA03FEC7EA07F8534B7DC95A>I<001FB6023FB512
FC486F90B67E486F824D1680B712E0A36C15C07116006C4B5E6C92C7003F5CD8000790C9
D83FF8C7FC627F6F157F6D608119FF6D6081606E6C5EA2023F5D6F93C8FCA2021F5D6F5D
140F6F140F6114076F141F6E5E82183F6E5E82187F6E5E82037F14FF6182033F5B04F85C
151FA2704890C9FC150FA26F6C485AA36F6C485AA36FEB8FF8179F81EFDFF0A2EE7FFF60
82A26082A2705BA37090CAFCA35F160FA25F161FA25F163FA25F167FA25F16FFA201785D
D801FE5B2607FF805C486D5A4B90CBFC4813E04B5A151F49C6485A157F4A485AD9FF075B
6C90B5FC5E5E6C5D93CCFC6C5C6C5C6C14F06D5B011F1380D907FCCDFC51717CC95A>
121 D<DA3F80141E902601FFE0EC3F80010701F8EC7FC0011F6D14FF4901FF010313E049
6E5A48B66C5A48EDE03F486F4813C04892B61280481800485F4801C15DB500805D49486C
5C496D14C0496D5CD87FE0010791C7FC496D13FC6C48010013F0000FC8EA3F803B1571E8
5A>126 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmti10 20.74 24
/Fb 24 122 df<1C7E1CFE1B01A21B03A2517EA263A26363A263A298B5FCA26262A262A2
5080A2F21FBF1B9FF23F1F1A7F1A7E1AFE1AFCF101F8A2F103F0A2F107E0190F1AC0191F
088080F13F00A2077E7F19FE611801611803614E5AA24E5A181F61183F96C780187EA24E
80A24D5A1703601707604D5AA24D5A173F95C8FC5F177E4D83A24C5A874C5A16075F4CB9
FCA25EA25E5E047EC9120316FE5E0301855E4B5A874B5A150F5E151F5E4BCAFCA2157EA2
5D14015D14034B854A5A140F021F845D143F147F4A5A497F4961010F6D4D7F013F6D5F48
B500FC053F6D7E007FDAFFE0033FB712E0B74C16F097B8FCA34C6F16E06C7C76FB80>65
D<E0FFFC1507071FD9FF80140F96B600F0141F060703FC143F063F6F147E95B86C13FE05
03DAF003EBC001050F49C7387FE003053F01F0DA1FF013FC94B50080913807F8074C49C8
3803FC0F040701F80301131F4C01E0923900FE3FF84C49EE7F7F047F90CAEA3FFF4C5A4B
01F87113F04B49834B5B4B5B033F497113E04B90CBFC4B5A4A49844C1AC04A5B4A5B4A86
4A491A804A5B4A90CCFCA24A481B005B5D495B49645D5B495B66495BA2495B6690B5FC92
CDFC481C034A63481C019AC8FC485BA3485BA25A5CA35A5CA35A5CA3B5FC5CA591D1FCA4
F401F0527E65A25B1C0765A21C0F651C1F651C3F007F99C8FC7F1C7E1CFE646C1A01646E
18036C505A646C6D180F515A515A6C6D96C9FC6C1A7E6E18FE6C4F5A6E4D5A6C6D4D5A6D
6CEF1FE0013F4E5A6E4D5A6D6D4B48CAFC6D01E0ED03FC6D6DED0FF86D01FCED3FF00100
01FFEDFFC06E01E001075B6E01FED97FFECBFC020F90B65A020316F0020016C0033F4ACC
FC030714F09226003FFECDFC707E66F97B>67 D<0303BA12FC4BF1FFC04B1AF81EFE787E
6F8792C702F0C7000114F0051F01C0DA001F7F0B037F4F6F7F776C7E4D727F787F96CA12
078C4D727F8A4E717F8C05FF197F8C4E183FA24C878B6021805EA24E7213C0A25EA260A2
5E21E060A25EA260675EA295CCFCA25EA24D4F13C0A216FFA25F674B1D80A25F9CB5FC5D
21005F665D685F664B64A24D60685D545B5F684B626894CCFC545B5D5490C7FC5E545A15
FF535B4C62654A64535B5E535B4A505B5390C8FC4C611D7F4A505A525B4C4D5B525B4A4F
5B525B4C4D90C9FC525A4AF1FFF809035B4C4C5B091F5B4A067F90CAFC50485A4A90C900
0713F891B5043F5B01070507B512C0003FBCCBFC481AFCBC12E01B8008F8CCFC6C19807B
7677F582>I<0003B800C0020FB7FC48714A16804862A36C4D6E1600C702FCCA003F1480
021F01E0050701F8C7FC4C7113E0765B4C614A7390C8FC6593CCFC654A1901A24B61A202
FF1903A24B61A2491A07A24B61A2491A0FA24B61A2491A1FA24B61A2491A3FA24B96C9FC
A24962A24B187EA2491AFEA292CC5AA2491901A24A61A201FF1903A24A61A2481A07A24A
61A2481A0FA24A61A2481A1FA24A61A2481A3FA24A96CAFCA24862A24A187EA2481AFEA2
91CC5AA2481901A249611A03A2631A07485A505AA2631A1F631A3F007F4FCBFCA21AFEA2
4F5A4F5A003F1807624F5A6D4D5A001F183F4F5A6C6C4DCCFC4E5A6C6D4B5AF00FF86C6D
4B5A6C6D4B5A6C6DEDFFC06D6C020390CDFC6D6CEC0FFE6DB46CEB7FF86D9039F007FFF0
6D90B612C001015E6D6C4ACEFC021F14F0020714809126007FF8CFFC717A5FF580>85
D<EE3FF0923801FFFC030713FF031FEC803E923A7FF03FC0FF912801FFC00FE17F4A9038
0007F34A481303DA1FFCEB01FBDA3FF06DB5FC027F94C7FC4A5A494980495B725A4990C8
FC495A131F49485EA24948151F01FF163F4A5E5AA24849157F615A5C4817FF61485BA25F
486091C8FCA25F48605BA25F00FF95C8FC5BA25F605BA2171F4EEB1F80A25B173F4E133F
1B00A2057F5C05FF147E60007F5D4C15FE62003F5D4CEBE0014C5D6C6C4A1403053F5C00
0F15FE6C6CD901FC4A5A6D903A03F81FF00F0003DA0FF05D6C6C90261FE00F495A6C903B
C0FF8007FC7F013FB5486CB5C7FC6D01FC6D5B010701F09038007FF801000180EC1FE049
4E6ECB58>97 D<157F0103B57E90B6FC4892C9FCA25AA26C5CC7FC143F141F5DA2143FA2
5DA2147FA25DA214FFA25DA25BA25DA25BA25DA25BA292CAFCA25BA25CA2131FA25CEE7F
E0013F903803FFFC030F7F4A486D7EDB7FE07F017F9039FF003FE0DAF9FC6D7E4A486D7E
DAF7E06D7E90B548805D92C76C7E5C484916805C834A16C0485BA25C5C4818E05F91C8FC
A25AA25BA2001F5EA25BA2003F4C13C0A25BA2007F5E19805BA25F00FF18005BA24D5AA2
5B6017FF60A24C5BA2494A5BA2604C5BA24C90C7FC5F6C6C141F5F4C5A003F4B5A5F6D4A
5A001F4A5B4B90C8FC6C6C495A6C6C495A0003EC3FF8D801FEEB7FE03A00FF83FFC06DB5
C9FC6D13FC010F13F0010190CAFC3B7A6DF74F>I<933803FF80043F13F04BB512FC0307
80031FEB01FF923A7FF8007F80DBFFE0EB1FC002030180EB0FE04A90C7EA07F0DA0FFC14
034A5ADA7FF0EC0FF84A48143F4949147F4916FF4B5B4990C7FC5B49484A13F0495AA249
4816E001FF6F13C04A6E138048EF7F004894C7FC5C5A5C5AA25C5AA25A91CBFCA35A5BA3
12FF5BA45BA75B19C0F001E0007F18F0180318076DEE0FE0003FEF1FC0183FF07F80001F
EFFF006D4B5A000FEE07FC6C6C4B5AEF3FE06C6C4B5A6C6D49485A6C6DD907FEC7FC6D6C
EB3FFC903A3FFC03FFF0010FB612C001034AC8FC010014F0DA1FFEC9FC3D4E6ECB4F>I<
F203F896381FFFFC0607B5FC4E14F860A37214F0F000071901851BE0A261A21BC0A261A2
1B80A261A21B00A261A262A2191FA262A2193FA262A2197FA262A219FFA262EE3FF09239
01FFFC01030713FF031F02815B92397FF03FC1913A01FFC00FE34A90380007F34A480103
5CDA1FFCEB01FBDA3FF06DB5FC147F4A4893C7FC494980495B844990C85B495A131F495A
614948151F01FF163F5C4860A24849157FA248605C4817FFA248495EA25F5A91C85CA25F
5A495FA25F12FF4994C8FCA25FA2495EA2171FF21F80605B173F1A3F4E1400A2057F5C05
FF147E60007F5D4C15FE62003F5D4CEBE0014C5D6C6C4A1403053F5C000F15FE6C6CD901
FC4A5A6D903A03F81FF00F0003DA0FF05D6C6C90261FE00F495A6C903BC0FF8007FC7F01
3FB5486CB5C7FC6D01FC6D5B010701F09038007FF801000180EC1FE04E7A6EF758>I<EE
0FFF93B512E0030714F8031F8092397FFE03FE913A01FFE000FF4A0180EB3F80DA0FFEC7
EA1FC04A4815E04A48140FECFFE04949EC07F0495B5B4990C8FC495A495A180F494816E0
13FF4849151FA24849ED3FC0198048177F4AEDFF0048EE03FE4A4A5A48EE1FF8EFFFF048
030F13C04A48B55A91B600FCC7FC17F04893C8FC16C049CBFCA212FF5BA45BA65BA6F001
80F003C0007F18E01807180FF01FC0003FEF3F806D167F001FEFFF004D5A000F4C5A6DED
0FF800074C5A6DED7FC000034C5A6C6C020390C7FC6C6DEB0FFCD97FE0EB7FF8903A3FF8
07FFE0010FB612806D02FCC8FC010114E09026001FFCC9FC3C4E6DCB4F>I<16FE0207B5
FC49B6FC495C5BA36D5CEB0001EC007F153F5EA2157FA25EA215FFA25EA25CA25EA25CA2
5EA25CA293CBFCA25CA25DA2141FA25DA2143FA25DEF1FFC027F91B57E040714E0DBF01F
8093393FF01FFC02FF9039FF8007FE9239F1FE0003DBE3F880DBE7F06D7F49EBEFE0EDFF
8093C87FA2495B5D5DA2495B5DA24B5C495BA292C8FCA249485D625CA2013F5E97C7FC5C
A2017F5E615C181F01FF5FA25C183F4860A24A157F615A18FF4A5EA2485E4F13FC91C85A
614819014D15F8491700A2001F4CEC03F0605B051FEC07E0003F5FF20FC05B4E1480007F
191F1B004960050F147E00FF197C1AFC490307495AF107F0943903FC1FE071B55A496F91
C7FC6C48EE3FFE003ECAEA0FF04E7A73F758>104 D<163EEEFF804B13C05D5D17E05D17
C0A21780A26F13006F5AED01F892C8FCB3A6EC3FE0ECFFF801037F497F90380FF0FF9039
1F807F80D93F007F017E133F4980485AA24848137F5B1207A2484813FFA2485AA2003F5B
01005C5C485D127E5C93C7FC12FE007C5BC75BA2141F5D143F5DA2147F5DA214FF5DA25B
5D5B5DA25B92C8FCA25B4AEB07E0131F5C160F013F15C05CA2017FEC1F805CA2EE3F0049
5A167EA24A137C16FC4B5AA2017F495A5E1507013F495AED3F806D6CB4C7FC6DB45A6D13
F801015B9038007F802B7473F135>I<16FE0207B5FC49B6FC495CA25BA26D5CEB0001EC
007F153F5EA2157FA25EA215FFA25EA25CA25EA25CA25EA25CA293CBFCA25CA25DA2141F
A25DA2143FA25DF13FC0027F923801FFF0060713FC4B021F7FF03FE002FF92387F003FDD
01FCEBFF804B903803F0034D485A4992380F800FEF1F004B013E5B5F495D4D15004B485A
4C485C494A485C040F6E5A4B48C7EA03E0043E91C8FC495C5E4A5B4B5A011FEB07C04B5A
4A48CBFC153E013F13FCECFFF85D5D4913F8EDFF8016F016FCD9FFF013FF031F13C0DAE0
077F03017F486E6C7E707E4A6D7E160F4882825C8448811AFC91C7FCA2484B140106005B
5BA2001F180362494A5AA2003F4E5AA249604D130F007F15074F5A5B4FC7FC00FF030314
3E71137E4902015C4E5A933900FF87F071B45A496F5B6C48030F5B003EC9D803FCC8FC49
7A74F74F>107 D<ED07F091383FFFF8010FB5FC4914F0A416E0EB00071401A216C0A25C
A21680A25CA21600A25CA25DA2141FA25DA2143FA25DA2147FA25DA214FFA25DA25BA25D
A25BA25DA25BA292C7FCA25BA25CA2131FA25CA2133FA25CA2137FA25CA213FFA25CA25A
A25CA25AA25CA25AA291C8FCA25AA25BA2121FA25BA2123F153F5BA2007F5C157E5BA215
FE00FF5C5BA214015D13C04A5AA214075D007F130F5D003F131F01E05B001F49C7FC380F
F0FE6CB45A6C5B6C5B38003FC0257A71F72C>I<D903FCDB0FFEEEFFE090260FFF8091B5
00C0020F13FC496D010702F0027F13FF4901F0496E91B67E90267F0FF890273FF80FFC01
0301807FD9FC0791277FC003FE903A07FC003FE00001902A03FC01FE0001FFD91FE06D7E
01F86D48486F484880D803F0DA07F06D6D48C76C7E6F484816FED807E04A48EDC1FC4C48
91267FE3F86E7E000F4BC8EBE7F001C002FEEEEFE04C5F001F4BEEFF8013804A4994C8FC
003F4B5E13004C4B48150FA2007E49495E93C95BA200FE4A4B49151F48011F65127CC749
5F4F173F023F654B5FA24F177F027F654B94C9FC1FFF4F6014FF4B5E66071F605B4B4C5D
68193F49644B4C94C8FCA2077F5E4953EB07E092C949151F6707FF190F490A3F15C04A4D
5EA24E057FEC1F80011F654A5F0CFFEC3F004E60013F1F7E4A5F55137C4E1AFC017F674A
94C914010C7F495A4E6201FF1E074A4C043F495AF83F80786CB4C7FC4A4C70B45A4A4C70
13F86DC96C4804015B013E70489338007F80834E73CB8D>I<D903FCED0FFE90260FFF80
91B512C0496D010714F04901F0498090267F0FF890393FF80FFC9026FC07FC90397FC003
FE00010103903A01FE0001FF01F86D484881D803F0DA07F06D7F6F485AD807E04A5A4C48
6E7E000F4BC8FC01C014FE5E001F5D13804A5B003F5D13004C15FFA248495B007E92C9FC
A200FE4A5D48011F60127CC75B61023F605DA261027F95C7FC5D616214FF5D191F625B4B
153F62A249177F4B5EA219FF494E137E92C85A621CFE494C15FC4A5FA24EEC01F8011F18
005C4EEC03F061013FF107E05C4F14C01B0F017F1A804A181F0607EC3F001B3E01FF197E
4A03035CF203F8953901FE0FF04A6FB55A4A7013806DCA001F90C7FC013EEF07F8574E73
CB61>I<933803FF80043F13F84BB512FE030780031F010113C0923A7FF8007FE0DBFFE0
EB1FF0020301806D7E4A90C76C7EDA0FFC814A486E7E4A5A4A486E13804A5A4918C04949
804990C913E05B495A494817F0A2495A13FF5C4819F85A5C5A4A5D5AA25C4819F0605A91
C9FCA2604819E05BA26000FF19C05BA24E1380A25B4E1300A261187F61A2494C5A615F00
7F604D5B6D4B5BA2003F4C90C7FC60001F4C5A4D5A6C6C4B5A4D5A6C6C4A5B00034B5B6D
4A48C8FC6C6DEB1FFC6C6D495A6D6CEBFFE090261FFC0713806DB548C9FC010314F80100
14E0DA1FFECAFC454E6ECB58>I<DB7F80EC1FF8912601FFF091B5FC4A6D0103804A01FE
4914E091260FE1FF90391FF83FF0DA1FC0903A803FC00FF891263F807F49C66C7E0300D9
C0FE6D7E027EDAC1F86D7EDDE3F015804AECE7E0DDEFC06D13C00101EDFF804A92C813E0
5F0103197F4A4A16F04C5A13074A5C5F4B18F8010F19FF02C05CA2011F5B1480010F5D90
C7FC4B5EA294C8FCA24B4C13F0A25EA2031F5E1CE05EA2033F5E1CC05EA2037F4C1380A2
5E1C0003FF5E635E505A5C505A5E634A4C5BA24F5B634A6D5C98C7FC4F5A4F5A4A6D5D4F
5A4F5A704A5A4A486C495B4E90C8FCDBFC7EEB0FFE70EB1FF8023F90391FE0FFF070B512
C04B6C91C9FC7013FC027F9038007FC094CBFC5DA214FFA25DA25BA25DA25BA25DA25BA2
92CDFCA25BA25C131FA290387FFF80007FB612E0B77EA45E556D7ECB58>I<D903FCEDFF
E090260FFF80010713FE496D011FEBFF804901F0017F14C090267F0FF89039FF807FE090
3DFE07FC01FE000FF02601FC03D907F8EB07F801F89026FE0FE0EB1FFCD803F04A48133F
6F4848137FD807E092C7FC047E14FF000F5D13C04C15F8001F5D018018F04A4915E0003F
4BEC7FC00100EF1F004C91C7FCA2484990CAFC127E5D12FE48131F007C5CC7FCA2143F5D
A3147F5DA314FF5DA35B5DA35B5DA35B92CBFCA35B5CA3131F5CA3133F5CA3137F5CA313
FF5CA35C5C6DCCFC133E464E73CB49>114 D<EE1FFC4BB57E030714E0031F8092397FF0
0FF89239FF8001FC4A48C77EDA03F8147F4A48EC3F804A48141F141F4B15C0143F4A4814
7FEF01FF4AC7FC5FA2494B13805CA26E6E1300495E715A6F90C8FCA28115F015FCEDFFC0
6D14FCEEFFC017F06D15FC836E806E816E816E816E811401DA003F801503ED003F04037F
1600177F173F171FA201C0150FEA07F8486C1507121F487E007F5FA2170F48485EA2495E
171F495E01C0153F48C95B007E4CC7FC5F007F4B5A6C6C4A5A001F4B5A01E04A5A6C6CEC
3FE0D807FC903801FF802703FFC00F90C8FCC690B512FC013F14F0010F1480010001F8C9
FC3A4E74CB46>I<ED03F04B7E150F4B7EA2153FA25EA2157FA25EA215FFA25EA25CA25E
A25CA25EA25CA293C7FCA25CA25DA2141F003FB712FE4816FFA2B9FCA26C16FEC7D83FF8
C7FC147FA25DA214FFA25DA25BA25DA25BA25DA25BA292C8FCA25BA25CA2131FA25CA213
3FA25CA2137FA25CA213FFA25CA25AEE01F85CA248150317F04A130717E0160F4816C091
C7FCEE1F80A2EE3F00495C167E5E15015E00034A5A4B5A00014A5A6D495A6C027FC7FC90
387F83FE6DB45A6D13F06D13C0010190C8FC306E71EB39>I<EC3FE0ECFFF801036D161F
496D4C7E90260FE0FF4C7E90271F807F8015FFD93F006D5C017E133F498048485F634848
137F5B0007604996C7FC120F15FF48485F62003F5B01005C4A161F484B5D127E5C93C812
3F00FE61007C5BC75B197F021F5F5DA2023F16FF4B5EA2147F4B5C6214FF5D6049605DA2
604995C8FC5DA260494DEB0FC092C8FCA2061F141F4F1480A34A183F063F150061A2067F
5C1B7E18FF4F13FE6D6C4A5D4D14014D5D6DED0FDF6FD91F9F495A6D92393F0FF8076E6C
017E5D91283FE001FC07495A913C1FF80FF803FC3F6EB5486CB55A6EDAC00049C7FC0201
91C7EA3FFC9126003FF8EC0FF0524E73CB5C>I<DA3FE0ED0FC0DAFFF8ED3FE001036DED
7FF0496DEDFFF890260FE0FF5C90271F807F8015FCD93F007F017E013F5C4980485A8448
48137F49820007187F49173F000F181F15FF4848170FA2003F5B01004A14074A17F8485D
127E5C93C8FC00FE19F0007C5BC75BA2021F17E05DA2023F160F4B16C0A2147F4B151F1A
8014FF5D193F4918005D61197E5B5D61A2495F92C81201A24E5AA2611807614A150F6118
1F96C7FC6E5D183E6D5E18FC606D6D495A4D5A6D6D1307027F4A5A6FEB3F80DA3FF801FF
C8FC91391FFE03FC0207B55A6E5CDA007F13C0DB0FFEC9FC464E73CB4F>I<DA3FE0F101
F8DAFFF8F107FC01036D047C4A7E496D04FE4A7E90260FE0FF4B6C5C90271F807F804A17
80D93F006D4A5D017E133F498048485F50804848137F49870007061F81494E80000F8815
FF4848053F8162003F5B01004A844A047F1700484B5D127E5C93C812FF00FE4F5D007C5B
C75B60021F4D5D5DA2023F4B16014B6262147F4B4A16036602FF94C8FC5D4E160749644B
5DA2061F160F49644B5D1D1F6649163F92C85B53C7FCA2651D7EA26561067F4B5AA218FF
734A5A6D4B5F1C074D4C5A6D7F942607EFFC4A5A6D6D4EC8FC94260FC7FE147E6E6CD91F
8315FE6E6C90263F03FF495ADA1FFCD9FE019038C007F891280FFF03FC009038F01FE06E
D9FFF8013FB55A02014A6D5C6E6C01C0010349C9FC030790C8EA7FF0694E73CB72>I<EC
3FE0ECFFF801036D161F496DEE3F8090260FE0FFEE7FC090271F807F8015FFD93F006D5C
017E133F498048485F1B804848137F5B000760491900120F15FF48485F62003F5B01005C
191F48495F007E5D5C93C8123F00FE61007C5BC75B197F021F5F5DA2023F16FF4B5EA214
7F4B5C6214FF5D6049605DA2604995C7FC5DA260495F92C8FCA2181F61A34A153F61A318
7F6118FFA26D6C5C4D5B5F6D5D6F5B6D4B5B6E6C5B91393FE001FD91391FF80FFB6EB500
F35B6E14C3020114039139003FF80792C791C8FCA34D5AA34D5A130801FF4B5A487F486D
4A5A5A484C5A605E6048494990C9FC5F91C71207494A5A494A5AD80FC04A5A5F6D4A5A00
074A485A6D4990CAFC6C6CEB0FFC6C6CEB3FF83A00FF80FFE06DB512806D49CBFC010F13
F8010113804A6F73CB54>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy10 20.74 3
/Fc 3 34 df<003CF203C0007E1A0FB4F21FE06D193F6D197F6C6CF1FFC06C6C4E13806C
6C4E13006C6C4E5A6C6C4E5A6C6C4E5A6C6D4D5A6C6D4D5A6D6C4D5A6D6C4C5B6D6C4C90
C7FC6D6C4C5A6D6C4C5A6D6C4C5A6D6D4B5A6D6D4B5A6E6C4B5A6E6C4A5B6E6C4A90C8FC
6E6C4A5A6E6C4A5A6E6C4A5A6E6D495A6E6D495A6F6C495A6F6C485B6F6C4890C9FC6F6C
485A6F6C485A6F6C485A6FEBBFF06FEBFFE0705B705B7090CAFC705A4C7E4C7F4C7F93B5
7E4BEBBFF04BEB1FF84B486C7E4B486C7E4B486C7E4B486C7F4B486C7F4B486D7E4A496D
7E4A90C76C7E4A486E7E4A486E7E4A486E7E4A486E7F4A486E7F4A486F7E49496F7E4990
C96C7E4948707E4948707E4948707E4948707F4948707F4948717E4849717E4890CB6C7E
4848727E4848727E4848727E48487213C04848844848F17FE049193F90CD121F007EF20F
C0003C1A03535167D386>2 D<ED0FFE92B512E0020714FC023FECFF8091B712E0498201
0716FC498249824983498390B97E4884A248844884A248844884A2481980A34819C0A4BB
12E0AD6C19C0A46C1980A36C1900A26C606C60A26C606C60A26C606D5F6D5F6D94C7FC6D
5E6D5E010116F06D5E023F1580020702FCC8FC020014E0DB0FFEC9FC434377CC56>15
D<F70780F71FE0A21F0FA38CA21F078CA21F038CA2797EA3797E8D207F8D203F8D7A7E20
0F8D7A7E7A7EA27A7E7A7F7B7E7B7E8EF91FFC7B7E7B7E0F017F7B13E0FA7FF8FA3FFE9F
380FFF80003FC412E0C512FCA112FEA3A112FC003F23E0D5000F13809F383FFE00FA7FF8
FAFFE05713800F0790C7FC575A575AF93FF06A575A575A5690C8FC565AA2565A565A6920
1F565A69207F6920FF9EC9FC555AA3555AA2681F07A2681F0FA268A31F1FA2F70780975B
76D8AC>33 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr10 20.74 74
/Fd 74 124 df<94260FFF80EC1FF84CB500F849B5FC041F02FE01071480047F9126FF80
1F14E0922703FFFC01903AE07FF81FF04B903DC0001FF0FFE00FF8DB1FFEC7D807F9EB80
1FDB7FFC6EB538003FFCDBFFF0020F49137F4A494A49EBFFFE4A01805C4A90C85C4A484B
5B141F4A485F4BF17FFC147F4A484DEB3FF873ED1FF049496FED07C07392C7FC735B5B5D
B3A7BE12F0A6D8000301C0C800070180C8FCB3B3B3A5496D4B7F87013F01FC037F13FC00
7FB600FE90B87EA6677A7CF964>11 D<94380FFF804CB512F0041F14FE047F80922701FF
FC0113C003079039C0003FE0031F90C7EA0FF0DB3FFCEC03F8DBFFF06E7E4A4914004A01
80EC07FE4A90C8121F4A484B7E021F5E4A5A5D147F4A4892B57E7390C7FC495BA349715A
4B6F5A735AF101C096C9FCB3A296380FFF8095B6FCBCFCA6D8000301C0C8123F8585A285
B3B3B3496D4B7FA2013F01FC037F13F8007FB600FE90B712FCA6567A7CF960>I<94380F
FFC04CB512FE041F9138FF8380047F15FF923A03FFFC007F4B01C01307DB1FFEC75ADB7F
FC5CDBFFF05C4A495C4A13804A90C8FC4A5A141F4A5A4B81147F4A488185494981A35B5D
B3A7BCFCA6D8000301C0C81207B3B3B3A5496D4B7FA2013F01FC037F13F8007FB600FE90
B712FCA6567A7CF960>I<94260FFF80ED1FFF4CB500F00203B512E0041F02FC023F14FC
047F02FF91B67E922703FFFC03D980039039F803FF804B9028C0003FC00F903980007FC0
DB1FFEC7270FE03FFEC7EA1FE0DB7FFC912703F07FF8EC07F0DBFFF0912701F9FFE06E7E
4A496EB54814014A0180020F91C8EA0FFC4A90C84849153F4A484B494B7E021F4C17FF4A
4892B55A4B5F147F4A484D4A7F785B49495FA2854971715A4B6F496F5A73715A73EF0380
9CC9FCB3A2F71FFF53B6FCC2FCA6D8000301C0C800070180C87E8B8BA28BB3B3B3496D4B
6D4B7FA2013F01FC037F01F892B512F0007FB600FE90B7D8FC01B712F8A6857A7CF98F>
I<EA03F0EA0FFC487E487E481380B512C0AB6C1380AC6C1300AD6C5AAC6C5AAC6C5AAD6C
5AAC6C5AC8FCAFEA03F0EA0FFC487E487E481380B512C0A86C13806C13006C5A6C5AEA03
F0127C71FB30>33 D<EA03F0EA0FFC487E487E48138014C0B5FCA214E0A314F07EA27EEA
1FFEEA0FFCEA03F0C7FCA6130114E0A31303A214C0A213071480130F14005B131E133E13
3C137C5BA2485A485A485A120F485A48C7FC121E120C143371F730>39
D[<160F161F163F167C16F81501ED03F0ED07E0ED0FC0ED1F80ED3F00157E15FE4A5A4A
5AA24A5A4A5A141F5D4A5A147F92C7FC5C495AA2495AA2495AA2495AA2495AA2133F5C13
7FA2495AA34890C8FCA3485AA312075BA2120FA25BA2121FA45B123FA6485AA812FFA35B
B37FA3127FA86C7EA6121F7FA4120FA27FA21207A27F1203A36C7EA36C7FA36D7EA2133F
80131FA26D7EA26D7EA26D7EA26D7EA26D7E8081143F6E7E81140F6E7E6E7EA26E7E6E7E
157E81ED1F80ED0FC0ED07E0ED03F0ED01F81500167C163F161F160F>40
171 111 256 67 I[<127012F8127C7E7E7F6C7E6C7E6C7E6C7E6C7E137E137F6D7E6D7E
A26D7E6D7E8013036D7E801300806E7EA26E7EA26E7EA26E7EA26E7EA281140381A26E7E
A36E1380A3ED7FC0A316E0153FA216F0A2151FA216F8A4150F16FCA6ED07FEA816FFA381
B35DA316FEA8ED0FFCA616F8151FA416F0A2153FA216E0A2157F16C0A3EDFF80A34A1300
A34A5AA25D14075DA24A5AA24A5AA24A5AA24A5AA24AC7FC5C13015C495A13075C495A49
5AA2495A49C8FC137E5B485A485A485A485A485A90C9FC123E5A5A1270>40
171 119 256 67 I<F003E0A24E7EB3B3AF007FC0FCA2C11280A36C1F00A2CBD807F0CC
FCB3B3AF725AA2717176E386>43 D<EA03F0EA0FFC487E487E48138014C0B5FCA214E0A3
14F07EA27EEA1FFEEA0FFCEA03F0C7FCA6130114E0A31303A214C0A213071480130F1400
5B131E133E133C137C5BA2485A485A485A120F485A48C7FC121E120C1433719130>I<B8
12F8AA2D0A7EA939>I<EA03F0EA0FFC487E487E481380A2B512C0A66C1380A26C13006C
5A6C5AEA03F01212719130>I[<F103C01907F10FE0A2191FA21AC0193FA2F17F80A21A00
61A2611801A2611803A24E5AA261180FA261181FA261183FA24E5AA296C7FC60A2601701
A2601703A24D5AA260170FA260171FA260173FA24D5AA295C8FC5FA25F1601A25F1603A2
4C5AA25F160FA25F161FA25F163FA24C5AA294C9FC5EA25E1501A25E1503A24B5AA25E15
0FA25E151FA25E153FA24B5AA293CAFC5DA25D1401A25D1403A24A5AA25D140FA25D141F
A25D143FA24A5AA292CBFC5CA25C1301A25C1303A2495AA25C130FA25C131FA25C133FA2
495AA291CCFC5BA25B1201A25B1203A2485AA25B120FA25B121FA25B123FA2485AA290CD
FC5AA25AA2127CA2>67 172 119 256 86 I<923803FF80033F13F84AB6FC020715C002
1F010113F0913A3FF8003FF8DA7FE0EB0FFC902601FF80EB03FF4990C76C7F49486E7F49
486F7E49486F7EA249486F7E49486F7EA201FF834A15074884A248496F1380A24819C0A2
91C97E4819E0A34819F0A44819F8A24982A3007F19FCA800FF19FEB3AC007F19FCA86C6C
4C13F8A56C19F0A46C19E06E5DA26C19C0A26C19806E5DA26C1900A26C6D4B5A017F5F6E
151F013F5F6D6C4B5A6E157F6D6C4B5A01075F6D6C4A5B6D01C0010790C7FC6D6D495ADA
3FF8EB3FF86EB448B45A020790B512C0020192C8FCDA003F13F803031380477779F256>
I<ED01E04B7E1507150F153F157FEC01FF1407143F0103B5FC137FB7FCA214FB14C3EBFC
031380C7FCB3B3B3B3B14A7F4A7F91B612C0007FB91280A6397371F256>I<ED3FFE0203
B512F0021F14FE027FECFFC049B712F0498249D9803F13FE90271FFC00037FD93FE00100
804948023F13E049C86C7F48486F7F498148486F7F48486F7F48486F7F5B001F71138049
18C0003F8390CAFC7213E0EA7FF801FE18F06D8280B57E1AF88084A66C5BA26C5B6C90C9
5A6C5AD803F818F0CBFCA2601AE0A21AC060A24E13801A0095B5FC615F614D5B615F614D
5B4D5B96C7FC4D5A4D5A4D5A604C5B4C5B4C5B4C48C8FC5F4C5A4C5A4C5A4C5A4B5B4B48
C9FC4B5A4B5A5E4B5A4B5A4B5A4BCAFC4A4816F84A5A4A5A4A48ED01F04A5A15804AC9FC
147E4A1603494817E0495A495A49481607495A49CAFC017EEF0FC0017C173F90BAFC5A5A
5A5A4819805A5ABBFCA31A00A3457378F256>I<92380FFF8092B512FC0207ECFF80021F
15E0027F15F89126FFF80313FE0103903980007FFFD907FCC7001F7FD90FF06E13E04948
6E7FD93F806E7F49C87E01FE83496F7F484883D9FF80814801E017808080486D17C08480
A76C495D6C5B6C4917806D5A6D5A90CA140095B5FCA261A24D5BA24D5B614D5B615F614D
90C7FCEF3FFC4D5A4D5A040313C0041F5B92260FFFFEC8FC0207B512F017C017FCEFFF80
91C7000313F09338007FFCEF1FFE716C7E717F7113F0717F717F727E85721380A27213C0
1AE0A27213F0A21AF8A21AFC84A31AFEA2EA03FCEA0FFF487F487F487FA2B57EA31AFCA2
60A24A17F8A26C5B4A4B13F091C9FC6C4818E001F04C13C0EA1FC04E13806C6C18006D93
B5FCD807FC4B5B6C6C5F6C6C6C4A5B6C01E0020F5BD97FF84A5B6DB4027F1380010FD9F8
03B5C7FC6D90B65A010116F86D6C15E0020F1580020102FCC8FCDA001F1380477779F256
>I<F003C04E7E180F181FA2183F187FA218FFA25F5FA25F5FA25F5FA25F94B5FC17FBEE
01F3160317E3EE07C3160F1783EE1F03163F163E167C16FC16F8ED01F0150316E0ED07C0
A2ED0F80ED1F00A2153E5DA25D14015D4A5A14075D4A5A141F92C7FC143E147E147C5C13
015C495A13075C495A131F91C8FC133EA25B5BA2485A485AA2485A120F5B48C9FC5A123E
5A12FCBC12E0A6CA000701E0C7FCB3A24D7F4D7F94B6FC030FB812E0A64B757BF456>I<
0170171C017C177CD97F80ED03FC02E0151F02FEEDFFF8DAFFF0013F5B92B75A616196C7
FC60606018E06095C8FC17FC17F017C0D97E1F01FCC9FC91CCFCB3A4923803FFC0033F13
FC92B6FC020315C091260FFE0113F0913A1FE0003FF8DA7F80EB0FFE02FEC76C7ED97FF8
6E7F4A6E7F4A6E7F4A824A6F7E91C9FC017E707E85017C161F01388390CAFC721380A21A
C0A21AE0A2841AF0A51AF8A5EA07F0EA1FFC487E487E80B5FCA41AF0A36091C914E05B6C
5A01F018C0007ECAFC60003E1980123F6C4D13006D5F6D167F000F606C6C4C5A7F6C6C4B
5B6C6C4B5B6D4B5B6C6C6C4A5B6D6C023F90C7FCD93FF04A5AD91FFE903801FFF890270F
FFC01F5B010390B65A6D16806D6C4AC8FC021F14F8020314C09126007FFCC9FC457778F2
56>I<933801FFE0041F13FE93B67E030315E0030F81033F9038803FF8923AFFF80007FC
4A01E0EB00FE4A0180147F4A90C8EA3F80DA1FFC151F4A48EDFFC04A4814034A485C4B4A
13E0495B495E4990C8FC495AA2495A133F4A6F13C0137F49486F138072130048EF00FC4A
93C7FC5AA2485BA35AA25C5AA35AA2160C923803FFFC48D9000FEBFF80033F14E04B14F8
9239FE003FFCDA01F8EB07FFDA03E06D7F4A4801007FB548486E7E4AC87F023E6F7E023C
6F7E027C820278150F02F8824A6F13801AC05C7213E0A24A17F0A21AF8A24A811AFCA591
C914FE7EA87EA380A27EA21AFCA27EA21AF86C6D5DA21AF07EA26C6D17E0606C19C06E17
80017F5E6E1700013F4C5A6D6C4B5A6E5E6D6C157F6D6D4A5A6D6D495B6D6D01075B6D01
F8011F90C7FC6EB4EBFFFE021F90B55A6E5D020315E002001580033F01FCC8FC030313C0
477779F256>I<EA03E0A27F487E13FEEBFFF091BA12C0A35AA31B801B00A248616262A2
6201F0CAEA0FE00180171F48CB485A624FC7FC003E60614E5A007E1703007C4D5A614E5A
181F61484D5A187F96C8FCCB12FE17014D5A604D5A170F604D5A173F604DC9FC5F5F1601
4C5AA24C5AA24C5AA2161F5F163F5F167FA216FF5F5DA24B90CAFCA35DA24B5AA3151FA3
153F5EA2157FA415FFA44A5BA55CA85CAF6E5B6E5B6E5B033FCBFC4A7977F456>I<9238
03FFC0033F13FC4AB67E020715E0021F15F891263FFC007FDAFFE0EB0FFF4990C700037F
D903FC02007FD907F06F7E4948ED1FF049486F7E49486F7E91C91203017E8301FE707E49
8200011980A249177F12031AC0193FA21207A27FA37F197F6D188080806EEEFF006C7F02
FC5D6E5E6E6C4A5A6C6E140703F05D6C6E4A5A03FE4A5A6D6D4A5A04C0495A6D02F049C7
FC6D6E485A6D9138FE07FC6D9138FF0FF06DEDFFE06D16806D93C8FC6E14FC6E14FF020F
816E15E00201816E15FC020381020F6F7EDA1FF781DA7FC181DAFF8081902703FE003F80
49486D804948010780D91FE06D8049480100158049486E14C049C8121F487014E0484803
0314F048481500844848041F13F8484882060313FC003F834982197F4848EF3FFE191FA2
00FF180F5B1907A31903A41AFC7F127FA2F107F87F003F19F06D170F001F19E06D171F6C
6C18C0193F6C6CEF7F806C6CEFFF006C6D4B5A6C01E0ED07FC6D6C4B5AD93FFCED3FF06D
B4EDFFE06D01E001075B6D01FC017F5B010190B648C7FC6D6C5D021F15F0020715800200
02FCC8FC030713C0477779F256>I<923807FFC0037F13FC4AB6FC020715C0021F81027F
010013F8DAFFF8EB3FFC4901C0EB0FFE4949EB03FF4990C76C7F49486E7F49486F7E4948
8249486F7E13FF48496F7E48844A150F488484484917805AA21AC048831AE091C9FC5A1A
F0A3B5FC1AF8A284A31AFCA81AFEA26C5FA57E6E5DA27EA26C5FA26C7F6C5FA26C6D5D6C
173D6D6C157D18796D6C15F16D6C14016D6CEC03E10107DB07C113FC6D6C6CEB0F816D6D
EB3F019026007FF813FE6EB512FC020F14F8020314E0DA007F018014F892390060000393
C7FCA21AF0A41AE0601AC0A34E1380A21A00137E48B46C4B5A487F486D4B5AA2486D4B5A
A24E5A615F614A4A5B4D90C7FC6C494A5A4A4A5A49C8485AD803F04B5A01FC4A485A6CB4
4A5B6C01C0010F5BD97FFC90B5C8FC6DB612FC6D5D010715E0010115806D6C01FCC9FC02
0713C0477779F256>I<EA03F0EA0FFC487E487E481380A2B512C0A66C1380A26C13006C
5A6C5AEA03F0C8FCB3B3A2EA03F0EA0FFC487E487E481380A2B512C0A66C1380A26C1300
6C5A6C5AEA03F0124A71C930>I<EA03F0EA0FFC487E487E481380A2B512C0A66C1380A2
6C13006C5A6C5AEA03F0C8FCB3B3A2EA03F0EA0FFC487E123F487EA2B51280A314C0A37E
A27E7E7EEA03F3EA0003A613071480A4130F1400A25BA2131E133E133C137CA25BA2485A
5B1203485AA2485A48C7FC123E121E120C126B71C930>I<007FC0FCA2C11280A36C1F00
6C66D4FCB3A9003FBF12FE488AC11280A36C1F00A2712976BF86>61
D<913801FFFC023FEBFFE091B612FC0107EDFF8049D9001F13E0D93FF001037FD97F8090
38007FFC01FEC86C7E48486F7ED803F06F138048486F13C0485A48486F13E090C914F05A
6D6F13F8EA7FF07F6D17FC487E7FA76C5A6C4817F86C485D6C5ACAFC4D13F0A219E04D13
C05F19804D13004D5A4D5A4C13F04C5B604C90C7FC4C5A5F4C5A4C5A5F167F5F4C5A94C8
FC5D5E5E15035EA24B5AA25E150F5EA35E151FA393C9FCB1151E92CAFCAF153FEDFFC04A
7F4A7F4A7F4A7FA86E5B6E5B6E5B6E5B033FC9FC3E7A77F951>63
D<F001F84E7EA34E7EA34E7EA34E7FA34E7FA34E7FA395B57EA34D80A34D8018F3A20507
8018E1A2050F8018C0A24D488085053F811800854D81177E8505FE815F850401824D7FA2
0403824D7FA20407824D7FA2040F824D7FA2041F834D80A2043F8394C87EA24C83047E81
A204FE834C81A20301844C81A20303844C81A20307844C81A2030F8493BAFCA24B85A34B
8593CA123FA24B85037E83A203FE854B83A20201864B83A20203864B83A20207864B8302
0F865D87021F875D88023F87A2027F858A14FF4986496D86496D60496D86017F01FC95B5
7E0003B66C0407ECFF80B700F80307B812F0A6747C7AFB81>65 D<BB12FEF2FFF01BFEF3
FFC01CF01CFCD8000702E0C8000F13FF01004A0301806E496F6C13E06E061F7F757F757F
757F757F7580888A767FA2767FA2767FA4767FA9525BA36664666466646699B5C7FC515B
515B515B515B515B097F13805148C8FC08075B081F13F00703B5128093B800FCC9FC63F3
FF801CF00480C913FE98383FFF80090F7F7513F0090113FC757F767E767F767F8A767F76
7FA2767F8AA2767FA3761480A31FC0AA1F80A264A21F0064666466646664525B525B99B5
5A515C5191C7FC090F5B4A063F5B91B56C93B55A01076E030F14E0BE5A9AC8FC1CFC1CE0
99C9FC1BE06A767BF57A>I<95260FFFE0ED03804DB500FE1507051FDAFFC0140F94B700
F8141F040316FE041F70143F047FDA800F01C0137F93B500F0C77F03030280DA1FF813FF
030F01FCC83807FC014B01F0ED03FE4B01C0923800FF0392B5CAEA7F874A49EF1FC74A01
F8EF0FEF4A4971B5FC4A49834A49834A5B4A90CCFC4A4885494985495B49498589495B49
49855B4B855B92CDFC90B586485B895A5C481D7F5CA25A1E3F5C5AA348491B1FA45A9BC7
FCA35CB5FCB27E80A47EF60F80A36C7FA37E801E1F6C1E00A2807E6E636C1D3EA26C6D1B
7E6D1C7C6F1AFC7F6F626D1B016D6D626D6D1903535A6D7F6D6D4F5A6D6D4F5A6E7E6E6D
4EC7FC6E6D187E6E6D606E6D17016E6D4D5A6E01FEEF0FF06E6D4D5A033F01C04C5A6F01
F0EEFF806F01FCDB03FEC8FC0303D9FF80EC0FFC030002F0EC7FF870903AFF800FFFE004
1F91B61280040394C9FC040016F8051F15E0050192CAFCDD000F13E0697E77F97C>I<BB
12FEF2FFF01BFEF3FFC01CF01CFCD8000702F0C8003F13FF01004A030114C06E49DB003F
7F6E060F13F809037F09007F767E0A1F13C0767F767F767F88767F777E777E8B89777F8B
898B777FA2777FA2777FA28B8AA22080A27813C0A420E08AA320F0A620F8B020F0A620E0
A266A220C0A3541380A320009BB5FC67A2535BA2535BA2535B676567535B655390C7FC66
535A525B525B0A0F5B525B525B99B5C8FC09035B090F13F84A063F5B91B56C4BB512C001
076E033F5CBD48C9FC1CF81CC099CAFC1BF050CBFC75767CF583>I<BFFCA48AA2D80007
02F0C9FC01004A16076E49EE007F6E191F881C03767F881D7F1D3FA21D1FA21D0F8AA21D
07A31D03A28AA21D01A51A1F777EA49BC7FCA462A462A2626161190F96B5FC93B8FCA604
C0C7FC190F1903858586A286A486A2F607C0A3F60F80A497C9FCA21E1F1F00A466A21E3E
A21E7EA31EFE661D01A21D03A21D07A2535A1D1F1D3F1D7F1DFF1C030A0F5B4A193F91B5
6C0403B5FC01076E167FBFFCA366A36A767BF575>I<BE12FEA489A2D8000702F0C81201
01004AED00076E4916006E193F1C0F8876138088881D7FA21D3FA21D1F1EC01D0FA41D07
A21EE0A21D03A6F501F01A1FA39AC7FCA662A462A2626161190F96B5FC93B8FCA604C0C7
FC190F1903858586A286A486A997CAFCB3A94A7F91B57E010714FFBAFCA664767CF570>
I<95260FFFC015070503B500FE5D051FDAFFC05C94B700F05C040716FC041F04FF5C047F
DA001F6D5B4BB500E0010113E04B91C8383FF001030F01FC92380FF8034B01F0ED03FC03
7F01C06F6C5A92B5CAEA7F0F4A01FCEF3F8F4A49EF1FDF4A4971B5FC021F01C0834A4983
93CB7E4A5A02FF85494985495B49498549875D4949855B4B855B90B5CD7EA2485B89485B
A248885CA25A8A485BA4484987A45A9BC8FCA25CA2B5FCB27E80081FB812F0A37EA36E94
C7003FECE0006C09031480887691C7FCA26C7FA27E80A27E807EA26C7FA26D7F7F817F6D
7F817F6D7F6D7F6D6D606E7E6E7F705F6E7F02076D5F6E01FC5F6E6DEF1FEF6E6D6CEE3F
C76F6DEE7F83031F01F0EEFF016F01FC923803FE000303D9FF80DA0FFC7F6F02F0DA7FF8
7F6F6C9028FF8007FFF07F041F91B600C07F040794C77E040004FC91C8FC051F15E00503
92CBFCDD000F13E0747E76F987>I<B912F0A6D800074AC7FC010014F06E5B6E5BB3B3B3
B3B3AA4A7F91B57E010714FEB912F0A634767BF53E>73 D<0207B91280A691C7000392C7
FCDC003F13F883715BB3B3B3B3A713F0EA07FE487E003F13C0487FA2B57EA54D5BA34A5E
5F6C5B4A5E91C85AD83FFC94C8FC01804B5A6C7E6C6C4A5B6D4A5B6C6C5E6C6C4A5B6C6C
4A13806C6C6C4990C9FCD93FE0EB7FFE903A1FFE01FFF80107B612E001011580D9003F01
FCCAFC020313C0497A7AF558>I<B900F0037FB612FEA6D800074ACA00071580010002F0
050102F8C7FC6E497114C06E497290C8FC1EFC1EF0661E8053C9FC525A65F407F8525A52
5A525A525A52CAFC515A515A515A515A515A515A515A51CBFC505AF203F8505A505A505A
505A50CCFC1AFE4F5A4F5A4F5A4F5A4F5A4F5A4FCDFC4F7E18034E7F4E7F604E7F4E7F95
B5FC4D804D805FDD0FF37FDD1FE380EF3FC1DD7F80804D5ADCC1FC6D7FDCC3F86D7FEEC7
F0DCCFE06D7FDCDFC06D7FEEFF8094C76C7F4C6E7F5E4C6E804C6E805E4C6F7F747FA274
7F747FA2747F747FA274807480A2757F757FA2757F757FA2757F757FA275807580A2767F
767FA2767F767FA2767F8A8BA28B4A6D1AF091B56C4D80010702FE057FECFF80B900F002
0FB81280A679767BF586>I<BAFCA6D8000792CCFC010014F06E5B6E5BB3B3B3AA1D3EA4
1D7CA71DFCA21DF8A31C01A31C03A3F407F0A21C0FA21C1F1C3FA21C7F1CFF5113E0631B
0F631B7F4A4DB5FC91B56C150F01076E4AB6FCBEFC1DC0A55F767BF56C>I<B700C098B7
12E07062A27062A27062D800070EFCC7FC010020E0027E6DE00FBF5B023E676F6CF21F3F
A36F6C1A3EA36F6D197CA26F6D19F8A36F6DF001F0A26F6DF003E0A36F6DF007C0A36F6D
F00F80A2706CF01F00A3706C183EA2706D5FA3706D5FA2706D4C5AA3706D4C5AA3706D4C
5AA2706D4C5AA3716C4CC7FCA2716C163EA3716D5DA3716D5DA2716D4A5AA3716D4A5AA2
716D4A5AA3716D4A5AA3726C4AC8FCA2726C143EA3726D5BA2726D5BA3726D485AA3726D
485AA2726D485AA3726D485AA2736C48C9FCA396383FFF3EA37313FCA2735BA3735B147F
735B4A7E497F010701F06F494C7F011F01FC99B57E90B66C080714FCB86C6D4991B912E0
A274C8FCA31A3E93767BF59E>I<B700C00407B712FC8282A28282D80001DF0007ECFC00
D9003F6D050014E070063F1380E30FFEC7FC71715A023E6E715A836F735A6F7F83816F7F
83816F7F84816F80707FA2707F707FA2707F707FA2707F7080A27080717FA2717F717FA2
717F717FA2717F7180A27180727F8684727F8684727F868472808784737F737FA2737F73
7FA2737F737FA27314807314C0A27413E07413F0A27413F87413FCA27413FE7413FFA274
14817414C1A27513E17513F11DF9877513FD1DFF8787A28787A2888888A28888A2888814
7F884A6C197F497F010701F0193F011F01FC191F90B67EB86C170F1D07A21D031D01775A
76767BF581>I<F07FFF050FB512F8057F14FF0403B712E0040FD9E00313F8DC3FFEC7EA
3FFEDCFFF891380FFF80030301C0020113E0030F496E13F84B48C9EA3FFCDB7FFC70B4FC
DBFFF004077F4A49707F4A49707F4A49707F4A90CB6C7E4A48727E4A48727E027F864A48
727F4949727F49884949727F4B8449884949727FA24990CD6C7E49884A8601FF89A24849
747FA2488A4A86488AA24A86488AA2488AA24A86A2488AA4488A4A86A5B51E80B16C6D50
1400A66C66A26E62A26C66A36C6D505BA36C666E626C66A26E626C666E626C666D9AC7FC
6F96B5FC6D646F606D646D6D4E5BA26D6D4E5B6D6D4E5B6D646D6D4E5B6F606E6C4E90C8
FC6E6D4D5A6E6D4C5B6E6D4C5B6E6D4C5B02016D4C13C06E6D4C5B6F6C4C90C9FC92261F
FF80EDFFFC6F01E002035B030301F8020F13E06F01FE023F5B9228007FFFE003B5CAFC04
0F90B612F8040316E0DC007F92CBFC050F14F8DD007F90CCFC717E76F986>I<BB12F0F2
FF801BF81BFE757E1CE0D8000702F0C814F801004A030F13FE6E4903017F6E716C7F091F
7F7513F0757F87757F757F89881E801EC0881EE0A37613F0A31EF8AA1EF0A45213E0A21E
C0A2521380A21E00525AA2515B515B515B515B093F5B5190C7FC50485A080F13F84FB55A
93B912C051C8FC1BF81B8008F0C9FC04C0CDFCB3B3A94A7F91B57E010714FEB912F0A665
767BF575>I<BA12FEF1FFF01AFF1BE01BFC1BFFD8000702F0C7000F14C001004ADA007F
13F06E49030F13FC6E05037F08007F093F13C0757F757F757F757F8789757F8AA2767FA3
8A88A28AA966A26466A26699B5FC9BC9FC6563515B65515B5113C0515B097F90CAFCF3FF
FC08035B080F13E0087F138096260FFFFECBFC93B812F01B8050CCFCF2FFC004C0C7001F
13F0070313FC9638007FFF747F080F13E0747F747F747F747F888789757FA2757FA3757F
A789A789A877EC0F80A387A377141F8721004A6D8291B56C735B010702FE70163EB900F0
6F6D137E88766D5B766D485A0A031403769038FC0FF0D06CB55A0B1F14800B0391C7FC9A
38003FF8797A7BF57F>82 D<DB1FFF150E4AB500F0141E020F02FE143E023FECFFC091B7
6C137E4904F813FE0107D9F80113FE49903A80001FFF014948C7000313834948020013C3
D97FF0ED3FE74948ED0FFF4849814A814890C97E488349177F000F183F4848171FA24917
0F123F1907485A1903A2190112FFA21900A36D187EA47F1A3E7FA26C7EA26E94C7FC806C
7F8014FC6C13FF15C06C14F8EDFF806C15F8EEFF806C16F86CEEFF806C17F86D16FE6D70
7E6D17E06D836D836D17FE6D836D6C83021F830207831400030782DB007F811607DC007F
800507801700061F7F84180372148084857313C085A2851BE000788412F8A285A4857EA4
7E1BC0A27EA24F13807FA26D19006D5F626D170F6D606D171F6D606D173F6E4C5A02E04C
5A6E4B5BD9CFFC4B5BD987FF4B90C7FC018301E0EC1FFE010001FCEC7FFC48903B7FFFE0
03FFF8021F90B65A48010716C048010193C8FC6E6C14FC48020714F048DA003F90C9FC4B
7E76F960>I<001FBF12F0A692C700039138C000014801E06E4AD9000F13F802806E91C8
120349C9170001F81C3F491C1F491C0F491C07A2491C03A290CA1801A3007EF500FCA500
7C1E7CA8481E3EA6CB1900B3B3B3AE4D80A2050714E0057F14FE4ABB7EA66F757AF47C>
I<B900F0020FB712FCA6D800074ACA000FECFC00010002F0050114E06E49716C13806E49
DE1FFEC7FC775A775AA2775AB3B3B3B21D07807061A31D0F6E63A270181F80666E1A3F70
96C8FC6E62826E1AFE701701037F616F6C4D5A1C076F6D4C5A6F6D4C5A6F6D4C5A6F6D16
7F6F6D4C5A6F6D4B90C9FC706CED07FE706C6C4A5A040F01E0EC7FF07001F849485A0401
9026FF801F5B7091B6CAFC053F5D050F15F8050115C0DD003F91CBFC060113F0767A7BF5
81>I<B800FE0407B712C0A6D8001F4ACB6CECF000010302F0060F91C7FC6D02C0060313
FC6D755B7713E06E641E7F6E647097C8FCA26E1B7E821EFE6E637018016E63821D036E63
821D076E6370180F6E63A271171F6F62831D3F6F97C9FC715F6F197EA27117FE6F61831C
016F61831C036F617116076F61831C0F6F61841C1F706072153F7095CAFCA2725D70177E
841CFE705F721401705FA2721403705F841B07705F841B0F705F73131F715E851B3F7193
CBFC856371157E7313FE715DA2F1F801715D19FC1A03715DF1FE07715DA2F1FF0F715D1A
8F1A9F725C1ADF1AFF7291CCFCA2725BA3725BA3725BA2725BA3725BA3725BA2735AA373
CDFC7A7A7DF581>I<B800FC49B800FC0207B712C0A6D8003F02FCC96C02F8C9003FECF0
00010702C0040F02C0040314806D4A7091CB49C7FC93CA6C49725A6D7C5AA16C5A6D7363
77725A70828078607071191F6E9FC8FC8A7071616E213EA27073177E6E217CA2704D7F6E
69A299B57E6E6D545AA251807005F318036E690903807005E118076E690907807104C018
0F6F68090F81714C6C171F6F9DC9FC8B714B486C5F6F1F3EA2714B6F157E6F053E6D177C
A271037E816F057C6D5FA209FC816F6D4B6D4C5AA2080182714B6D16036F67080382714B
6D16076F67080782724A6D160F70668C7249486E151F709BCAFC8C7249C86C5D701D3EA2
724971137E70033E6F157CA272017E8370037C6F5DA208FC8372496F14017065070118FC
06FE496F14037065070318FE06FF496F14077065070718FFDF87C06F140F7164218FDFCF
8070139F7199CBFCA207FFCA6C13FF7163A37149715BA37149715BA34F837163A24F8371
63A24F837163A24F83067F62A24F187F063F97CCFCA296CC7E72193EAA7A7DF5B1>I<ED
FFF8021FEBFF80027F14F00103B612FC499038803FFF90271FF800077FD93FC0010113E0
49C87F01FEED3FF80001707E6D6C81486D140F6E6E7E486D826E80858385A3717F6C5B6C
5B6C5B6D5A90CAFCA74CB5FC93B6FC151F4AB7FC020F14E0023FEBF80091B51280010301
FCC7FC010F13F04913C04990C8FCEBFFFE4813F8485B485BA2485B485BA24890C9FC1BF8
485AA3485AA25FA45FA26D5D127F5F6C6C923A1F3FF801F0A26C6D143E6C6D913A7C1FFC
03E06C6DD901F89038FE07C06C6D49486CB5FC6C01FC90260FE00714806C6CB46CB4486C
14006D90B5C66C13FC010702FC6D5B010002F0EC1FC0020F018091C8FC4D4F79CC56>97
D<EC1F800003B5FCB6FCA6C6FC131F7FA27FB3AEEF3FFC0403B512C0040F14F8043F14FE
933AFFE01FFF80922783FE000313E0DB87F801007FDB8FE0EC3FF8DB9F806E7E03BFC86C
B4FC03FE6F7F4B6F7F4B814B6F7F4B834B707EA24B707E871A1F87A21C80861CC0A31CE0
A286A31CF0AE1CE0A3621CC0A31C8062A21C00A2505A636F167F636F4C5AA26F4B5B6F4B
5B02FE60DAFC7C4B90C7FC6FED1FFE4A6C6C4A5A6F6CEC7FF09126F007F049485ADB03FC
01075B9128E001FF807F90C8FC6F6CB512FC4A011F14F090C8000714809326007FF8C9FC
547A7BF760>I<923801FFF0031F13FF92B612E0020315FC020F9038803FFE913B3FFC00
01FF80DA7FF09038003FC0494848EC0FE04901806E7E4990C87F4948151F49484B7E013F
167F49484B7E49485CA2485B5A5C5AA248496E5B725A48715A725A4890CCFCA35AA35BA2
12FFAE127F7FA37EA36C7FA2F10F806C7FA26C181F6E17006C606C6D163E197E6C6D167C
6D6C16FC013F5F6D6C15016D6C4B5A6D6D4A5A6D6D4A5A6D6DEC3F806D01F802FFC7FCDA
3FFEEB03FE913A0FFFC01FF86E90B55A020015C0033F49C8FC030113E0414F7ACC4D>I<
1A7E95380FFFFE0503B5FCA6EF0003F0007F193FA2191FB3AE923801FFE0031F13FE92B6
12C0020315F0020F9038E01FF8913A3FFE0003FEDA7FF8EB007FDAFFE0EC3F9F010349EC
0FDF4949EC07FF4948C87E494881013F824948167F495A193F485B48181F5C5A485BA25A
A291CAFC5AA35A5BA312FFAE127FA37FA27EA37E807EA27E806C183F6C7F197F6C6D16FF
137F6D6C5D6D6C4B7F6D6C5D6D6CDB0FDF7F6D6DDA3F9F13F06D6DDA7F1FEBFFF06D01F0
EB01FCDA7FFCEB07F8913A1FFF807FF0020790B512C002011500DA003F01FCEDFC000303
01C00280C7FC547A7AF760>I<923807FFC0033F13FC4AB67E020715E0021F01017F913A
7FF8003FFCDAFFE0EB0FFE49496D7E0107496D7F4990C76C7F49486E7F49488249486F7E
01FF163F4A824849151F48845C48717EA2485B1A804883A24890C9FCA21AC05A845BA312
FF90BAFCA31A8049CCFCAA127FA27FA27EA36C7FF10380F107C07E6E160F7E6C6DEE1F80
A26CF03F006C7F6E167E017F17FE6D6C5E6D6C4B5A6D6C15036D6D4A5A6D6D4A5A01006D
EC3FC0DA7FF802FFC7FCDA1FFEEB03FE913A0FFFC03FF8020390B55A020015C0031F49C8
FC030113F0424F7BCC4D>I<EE0FFC93B51280030314C0030F14F092393FFC0FF892397F
F007FC9238FFC00F4A9038801FFE4AEB003F4A48EB7FFF140F4A5A4A5AA24A5AEF3FFE14
FF4BEB1FFC49ED0FF8EF03E094C7FC5D5BB3A8B812F8A6D8000301C0C8FCB3B3B3A5497F
81013F13FE007FB712E0A6387A7BF935>I<F2FF80070713C0DB1FFE021F13E04AB500E0
017F13F00207913AF801FF83F8021F9139FE03FC07913D7FFC0FFF87F00FFC9126FFE001
EBCFC00103903B80007FFF801F4990C7393FFE000F49486E5A49486E6C14F8013F701307
4A6EEC03E0017F71C7FC49486E7FA24884A248496E7FA34884AB6C60A36C6D4A5BA26C60
A26D6C4A5B013F94C8FC6E5C011F5E6D6C4A5A6D6C4A5A496D495A499039E001FFC09126
7FFC0F5BD93E1FB548C9FC020714F8D97C0114E09126001FFECAFC92CCFC13FCA67FA27F
A280EB7FE014F86DB77E18FE6DEEFFE019F86D17FE6D717E6D841AF0010F84013F84D9FF
F0C8FC48018003077F4890CA6C7ED807FC171F484805071380484883003F7213C0498312
7F49F07FE0A2485A1A3FA66D187F007F1AC0A26C6CF0FF806D5F001F1A006C6C4D5A6C6C
4D5A6CB4EF1FF86C6D4C5A6C01E0EEFFE0D97FF803035BD91FFE030F90C7FC90260FFFC0
EC7FFE010301FE90380FFFF8D9007FB712C0020F4BC8FC020115F0DA000701FCC9FC4E72
7BCD56>I<EC1F800003B5FCB6FCA6C6FC131F7FA27FB3AEEF1FFE94B512E0040714FC04
1F80933A3FE01FFF8093267F00037F04FC6D7FDB83F06D7FDB87E0147F4C81DB8F806E7E
039FC8FC03BE151F03BC8215FC5D4B150F865DA35DA45DB3B3A6496D4B7FA2017F01F892
B512F0B7D8FC01B712F8A655787AF760>I<EB07E0EB1FF8497E497E90B5FC4880A86C91
C7FC6D5A6D5A6D5AEB07E090C9FCB3A4EC1F8048B5FCB6FCA6C6FC131F7FA27FB3B3B349
7FA2017F13F0B712F8A625747BF32F>I<ED01F8ED07FE4B7E4B13804B13C04B13E0A86F
13C06F13806F13006F5AED01F892C8FCB3A4EE0FE04AB5FC91B6FCA6EC007F150F1503A2
81B3B3B3B3A5EA07E0EA1FF8486C4913C0487EB5FCA217805D1700A24B5AA26C48495A49
5C6C48495A01E0495A6C6C495A2607FE035B6CB548C7FCC65C013F13F0010390C8FC2B97
87F335>I<EC1F800003B5FCB6FCA6C6FC131F7FA27FB3B00503B612FCA605001580063F
01F8C7FC1AE07213804FC8FC19F84E5A19C04E5A4EC9FC4D5A4D5A4D5AEF0FE04D5AEF7F
804DCAFC4C5A4C5A4C5A4C5A161F163FEEFFF803817F03837F1587038F7F039F80EDBF9F
DBFF0F7F4B6C7F15FC4B6C7F4B6C7F4B7E4B8092C76C7E717EA2717F717FA2717F717F83
85717F727EA2727E727FA2727F727FA2727F8686496D824E6D7E017F01F04A14E0B700F8
90B712C0A652787BF75B>I<EC1F800003B5FCB6FCA6C6FC131F7FA27FB3B3B3B3B3A949
7FA2017F13F8B712FCA626787BF72F>I<023FDA1FFEEE3FFC0003B591B500E04AB512C0
B6010702FC020F14F8041F6E023F8093283FE01FFF8090397FC03FFF93267F00036D9026
FE00077F04FC6D9026E001F86D7FDB03F06D9026F007E06D7FC64A48027F49487F011F4A
03F849816D49486E6C48C86C7E4BC8143E6D013E031F49153F033CDCFE7882037C17F84B
705A4B6F49151F8C4B5FA34B5FA44B94C9FCB3B3A6496D4B6D4B7EA2017F01F892B500F0
4AB512E0B7D8FC01B7D8F803B712F0A6844C7ACB8F>I<023FEC1FFE0003B591B512E0B6
010714FC041F80933A3FE01FFF8093267F00037F04FC6D7FDB03F06D7FC64A48147F011F
4A816D49486E7E4BC8FC6D013E151F033C82157C5D4B150F865DA35DA45DB3B3A6496D4B
7FA2017F01F892B512F0B7D8FC01B712F8A6554C7ACB60>I<EEFFE0031F13FF037F14C0
0203B612F8020F9038803FFE913A1FFC0007FFDA7FF0010113C0DAFFC06D6C7E49496E7E
D907FEC8EA0FFC49486F7E49486F7E013F844A8149486F7F01FF844849707EA24849707E
4885A24890CA6C7EA24885A3481A804983A2007F1AC0A500FF1AE0AD007F1AC0A46C6C4D
1380A36C1A00A36C6D4C5AA26C616E167F6C616C6D4C5AA26C6D4B5B017F606D6C4B5B6D
6C4B90C7FC6D6C4B5A6D6C4B5A6D6D4A5A6D6D4A5A9026007FF0903801FFC0DA3FFC0107
5B91280FFF803FFEC8FC020390B512F8020015E0031F91C9FC030113F04B4F7BCC56>I<
DA1F80EB3FFC0003B50103B512C0B6010F14F8043F14FE933AFFE01FFF80922783FE0007
13E0DB87F801017FDB8FE06D6C7EC6DA9F806E7E011F01BFC86CB4FC6D01FE6F7F4B6F7F
6D5B4B6F7F4B6F7F4B83854B83747EA2747EA21C80861CC0A2861CE0A57413F0AE5013E0
A41CC062A21C80A2621C006263505A814F5B6F5F616F5F6F4B5B4F5B6F4B90C7FC03BE4B
5ADB9F804A5ADB8FC0ECFFF0DB87F001035BDB83FC010F5B922781FF807F90C8FCDB807F
B512FC041F14F0040714809326007FF8C9FC94CBFCB3A4497FA2017F13F8B712FCA6546D
7BCB60>I<023FECFF800003B5010713F0B6011F7F4C13FE9338FF83FF923801FC079226
03F00F1380DB07E014C0C64B5A011FEB0F806DEB1F00151E6D133E153C037C6D13800378
6D130003F86D5A4B6D5A94C8FCA25DA35DA65DB3B3A2497F81017F13FCB87EA63A4C7CCB
43>114 D<91260FFF8013E049B5EAF8030107ECFE07013FECFF8F90267FF80013DF2601
FF80EB1FFF4848C71207D807F8140148488049157F4848153F4848151FA2007F160F90C9
FCA2481607A317037FA27F7FA213F86C6C92C7FC13FF14E06C13FEECFFF06CECFF806C15
F86C15FF6C16C06C16F06C826D81011F816D8101031680D9007F15C0020715E0DA003F14
F01501DB001F13F81603040013FC0078167F00F8163FEF1FFE170F6C1607A21703A26C16
01A37EA26D16FCA26D150318F87F17076D16F06DED0FE07F6DED1FC06DED7F80D99FC090
3801FF00D90FF0EB07FE26FE07FEEB7FF8486CB65A48C615C048013F49C7FC48010313E0
374F7ACC44>I<EC03E0A81407A5140FA4141FA2143FA3147FA214FF5BA25B5B5B5B137F
48B812E0120FB9FCA4D8000101E0C8FCB3B3187CB06D16F881A3027FEC01F081143F6FEB
03E0141F6E6CEB07C06E6CEB0F806E9038801F006EEBE07F6EEBFFFE033F13F8030F5B03
011380366C7DE943>I<DA1F80163F0003B50307B5FCB64AB6FCA6C6EE0001011FEE003F
6D83A26D83B3B3A661A461A36D5FA296B5FC816D5EDE03EF7F6D17CF6F020780027FDB0F
8F13F86E6CDA3F0FEBFFF86E6C147EDA0FFEEB01FC913A07FFE00FF86E90B512E0020015
C0031F0200ECFE00030101F002C0C7FC554E7ACB60>I<B700F049B612F0A6C66C01FCC8
001FEBFE00011F01F06F13F06D49030313C06D495F7390C7FC6D606F5E7F62816D606F15
03027F5FA26F1507023F5F6F150F021F5FA26F151F6E94C8FC705C6E163EA270147E6E16
7C7014FC6E5EA27013016E5E82037F4A5AA2701307033F5DA270130F031F5D70131F6F92
C9FCA2715A6F143EEFC07E6F147CA2EFE0FC6F5C17F16F5CA217FB047F5B17FF705BA370
5BA27090CAFCA3705AA2705AA3705A705A544C7DC95B>I<B7D8E03FB600E090B612F8A6
C602F8C76C01F8C7000F1480013F01C0021F01C00203EBFC006D496E496E13F06D70705B
785A72607F6F6E71C7FC6D841E7E6F6E7F6D1C7C606F7015FC6D4C5FA26F701401027F4B
5F19DF6E6C704A5A180F078F15076E6C705D181F0707150F6E6C705D183F70D93E03151F
6E7291C8FC187E70D97C015D6E72133E18FC70496C6D137E6E1A7C4D48137F04F07013FC
6E02035F4E133FDB7FF870485A17074E131FDB3FFC70485A170F4E010F1307DB1FFE04FE
5B171F95C70007130FDB0FFF04FF5B5F05BE6E131F6F069FC9FC17FE4D6E13BF6F18FE4D
80A26F604D157FA26F604D153F047F5FA24D151F043F5FA24D150F041F5F70C96C5A754C
7DC97C>I<007FB600F0010FB612E0A6D8003F02800103ECF800010749C76C1480010170
49C7FC6D4916F8027FEE7FE06F4B5A023F5F6E6C93C8FC6E6D5C6E4B5A705C6E6D495A6E
6D495A6E150F6F6C495A705C6F6C49C9FC6F6C137E6F14FEEF81FC6FEBC1F86FEBE3F06F
EBE7E017FF6F5C705B7090CAFCA282707F82707F4C7F4C7FA24C7F4C6C7E4C6C7E9338FE
1FFF4C7EDB01F8804B486C7F03076D7F4C7EDB0FC0804B486C7F033F6E7E4BC7123F037E
814B6E7E4A486E7F0203814A486E7F020F834A486E7F023F6F7F027F8302FF167F010384
010F94B5FC013F6D17C00003B56C020314F8B600FE021FECFFFCA6564A7EC95B>I<B700
F049B612F0A6C66C01FCC8003FEBFE00011F01F0030F13F06D49030313C06D495F7390C7
FC6D6D5E627F6F5E7F626F1503027F5F6F1507023F5FA26F150F021F5F6F151F6E94C8FC
A2705C6E163E70147E6E167C8219FC6E5E7013016E5E701303037F5DA2701307033F5D70
130F031F5DA270131F6F92C9FC715A6F143EA2EFC07E6F147CEFE0FC6F5CA217F16F5C17
FB047F5BA217FF705BA2705BA37090CAFCA2705AA3705AA2705AA25FA216035F16075FA2
160F5F161F94CBFCA25ED807C0143ED81FF0147E486C147C487E16FC486C5C15015E4B5A
1507495C007F4A5A49131F4949CCFCD83FC0137E6C485B9038C003F8390FF80FF00003B5
5A6C14806C6C48CDFCEB0FF0546D7DC95B>I<000FB912FC19FEA302FCC813FC02C05C49
C814F848484B13F0494B13E0495D4917C0494B13805F494B1300604D5A90C85A604C5B4C
5B5E485F003E4B5B5E4C90C7FC5F4C5A5DC85C4B5B4B5B5D5F4B5B5D4B90C8FC5E4B5A5C
4A5B5E4A5B4A161F5E4A5B4A90C8FC5C4B153E4A5A5B495B5D495B5B4B157E495B4990C9
FC4917FE4A16FC495A481701485B4A1503485B4817074A150F4849153F4890C912FF4816
0349033F13F8BAFCA37E404A7BC94D>I<BD12F8A4550480AF56>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmr7 14.518 14
/Fe 14 122 df<4AB47E021F13F891B6FC49810107010013E0D90FF8EB1FF0D93FE0EB07
FC49486D7E4A130149C87E4848ED7F804848ED3FC0A24848ED1FE0A2000F17F0A24848ED
0FF8A3003F17FCA3491507007F17FEA600FF17FFB3A4007F17FEA56D150F003F17FCA400
1F17F8A26D151F000F17F0A2000717E06D153F000317C06D157F000117806C6CEDFF006E
5B6D6C495AD93FF0EB0FFC6D6C495AD907FFEBFFE06D90B55A010092C7FC021F13F80201
138038527ACF45>48 D<15F014011403140F143FEB01FF130F0003B5FCB6FCA2EBFE7F13
F0EAFC00C7FCB3B3B3A64A7E010313FE007FB712F8A52D5073CF45>I<EC1FFE49B512E0
010714FC011F14FF017F819026FFC03F13E02701FE00037FD803F801007F48486E7ED80F
C06E7E48486E7E90C86C13804881003E6F13C0127ED87F806E13E013E0487E7013F07FA5
6C5AA26C5AEA0F80CAFC4C13E0A34C13C0A218805E4C13005F4C5AA24C5A4C5A5F4C5A4B
5B4B90C7FC4B5AED0FF84B5A4B5A4B5A4B5A4A48C8FC4A5A4A5A4A5A4A5ADA3F8014F04A
C8FC14FE4948EC01E0495A495A495AD91F80140349C8FC017E16C04915074848150F48B8
FC5A4817805A5A5AB9FCA21800A3345078CF45>I<913807FFC0027F13FC0103B67E010F
15E090261FFC017F903A7FC0003FFC01FEC7EA0FFED801F86E7E48486E13804916C0D807
FC806D16E0486C806E15F0A66C90C8FC6C5A6C4816E06C485C90C8FC18C05E1880A24C13
004C5A5F4C5A4C5AEEFFE003035B037F90C7FC91387FFFFC16F016FE707EDA000113E092
38003FF8EE0FFE707E7013807013C07013E018F0EF7FF8A2EF3FFC18FEA2171F18FFA3EA
1FE0487E487EA2487EA218FE173FA218FC49157F6C4816F85BD83F80EDFFF04C13E06C6C
4A13C0D80FF04A1380D807FC4A13006CB46CEB3FFE6C9039F801FFFC6C6CB612F06D5D01
071580010002FCC7FC020F13C038527ACF45>I<177C17FC16011603A21607160F161FA2
163F167F16FFA25DED03EFED07CFA2ED0F8FED1F0F153EA2157C15F8EC01F0A2EC03E0EC
07C01580140FEC1F00143EA25C5C495AA2495A495A495AA249C7FC133E5BA25B485A485A
A2485A485A48C8FCA2123E5A5ABA12C0A5C9D81FFCC7FCAE4C7E4C7E0203B712C0A53A51
7BD045>I<D80380150E01F0157E01FEEC03FED9FFF0137F91B65A5F5F17C05F94C7FC16
FC16F016C001EF49C8FC9038E03FC091CAFCAFEC07FF023F13F091B512FC01E314FF9026
EFFC037F9026FFE0007F0280EB3FF049C76C7E01F86E7E4914074981707E491680C97E18
C0A37013E0A318F0A41207EA1FC0487E487E12FF7FA218E05E5B18C05BD87F805C007CC8
148018006C5D003F4B5A6C6C5D6C6C4A5A6C6C4A5AD803F8ECFFE0D801FE01035B2700FF
E01F5B6DB548C7FC6D5C010F14F0010314809026003FF8C8FC345278CF45>I<923807FF
80033F13F04AB512FC02078091391FFE00FFDA3FF0EB1F80DAFFC0EB0FC04990C7EA03E0
4948141F4948143FD90FF0EC7FF0011F15FF495A495A495AA24890C8FC48EE7FE049ED3F
C00007EE1F8094C7FC485AA2121F5B123FA31504007F903801FFFCD9F00713FF4A14C002
3F14F000FF90397F001FF802FCEB07FCD9F1F06D7ED9F3E06D7E4A6D1380D9F780EC7FC0
01FFC813E0EF3FF04916F8171F4916FCA24916FE170FA318FF5B127FA66C7EA4001F17FE
A36C6C151F18FC12076D16F80003EE3FF0A26C6CED7FE06C6DECFFC06E15806D6C491300
6D6CEB07FED91FFC495A903A0FFF807FF8010390B55A6D15C06D6C91C7FC021F13FC0201
13C038527ACF45>I<EA0780120F7F13FE90B91280A35AA219006060605A6090C9EA07E0
003E4C5A003C5F007C161F4DC7FC0078167E5F5F1601484B5A4C5A5FC9120F4C5A4CC8FC
167E167C16FC4B5A4B5AA24B5A150F5E151F5E153F4BC9FCA25D5D1401A214035DA21407
A2140F5DA2141FA3143FA35DA2147FA514FFAC6E5A6E5A6E5A395478D145>I<913803FF
C0021F13FC91B67E010315E04948C67FD91FF0EB0FFCD93F80EB03FE49C76C7E01FC9138
007F8049153F000117C04848ED1FE0170F485A18F01707120FA27FA27F170F6D16E013FF
6E141F6C01E015C002F8EC3F806C6D147F02FFECFF006C9138C001FE6F485A6C9138F80F
F86D9038FE1FF06D9038FF7FC06D4AC7FC6D5C01035C6D806D6C6D7E6E14E091B67E0103
15FCD90FFC8090261FF03F7F90267FC01F14809026FF000714C04848010114E048486D14
F04848023F13F84848140F48486E13FC491401003F9238007FFE49151F007F160F90C9EA
07FF8300FE8283A3187FA3187E7E6C17FE6D16FC123F6DED01F86C6CED03F06D15076C6C
ED0FE0D807FEED3FC06C6C6CECFF806C01E00103130026007FFEEB3FFC6DB65A010F15E0
01031580D9007F01FCC7FC020713C038527ACF45>I<913803FFC0023F13F891B6FC0103
8149010013E0D91FF8EB1FF0D93FE06D7E4948EB03FC49486D7E4890C77F48486E138000
07167F484816C0EF3FE0485A003F17F0A2007F161F4916F8A218FC12FFA3EF0FFEA618FF
A25F127FA36C6C5DA3001F5E6C7E94B5FC6C6C15EF000315016C6CEC03CF6C6D13076D6C
EB0F8F6D6CEB3F0FD91FF801FE13FE6DB512FC010314F0010014E0023FEB801F91260020
0013FC92C7FCA318F8173F18F0A3D801F8ED7FE0487E486CEDFFC0486C16805E18004C5A
16075F494A5A6C48EC3FF0494A5A01E049485AD803F801075B2801FF803FFEC7FC6C90B5
5A6D14F0011F14C0010791C8FC010013F038527ACF45>I<027FB612FCA5DA0003EBFE00
030013F8167FB3B3B2EA0780EA1FE0487E487E487EA44C5AA25B007F4A5B495D495B6CC7
485B6C6C92C7FCD80FE0EB1FFED807F8495A6CB4EBFFF06C90B55A6C6C1480011F01FCC8
FC010113E0365479D146>74 D<EB3FE0B5FCA51203C6FC137FB3B3B3B03801FFF8B612F0
A51C547AD327>108 D<D93FE04AB4FCB50207B5FCA50003ED001FC61607017F81B3AB5F
A35FA25F133F5F6E147B011F03FB7F6D6CD901F313E06ED907E3EBFF80903A07FF803FC3
010190B512836DECFE03023F13F8020301C049C7FC41367AB44C>117
D<B66C90380FFFFEA5000101F8C7000313E06C496E1380017F923800FE0060013F5E8001
1F5E6E1401010F5E6E140301075E806D4B5AA26F130F6D93C7FC6F5B6D151E6F133E027F
143C6F137C023F147881021F5C811601020F5CEDFE0302075CEDFF076E5C168F6E91C8FC
16DF6E13DE16FEA26F5AA26F5AA26F5AA26F5AA26F5AA25EA2150F93C9FC5D151E153E15
3C157CD83F801378486C13F85D38FFE0015D14034A5A4A5A6C4848CAFC387D807E383F01
FC6CB45A6C5B6C13C0C648CBFC3F4C7CB348>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmsl8 14.518 8
/Ff 8 115 df<B7047FB512C0A400010280040FEBF8006C6C48CA000313C06D487190C7
FC63745A011F61505A6E601A03010F611A076E6050C8FC7F1A1E1A3E6F163C6D187C1A78
62816D4D5A1903626F1507626D4DC9FCA26F151E193E027F163C197C6F157861143F4E5A
6F140361021F1507616F4ACAFCA2020F151E183E183C6F147C6E157860170104805B1703
6E5D170704C05B4DCBFC6E5C171EEEE03E173C6E147C1778705A16F1037F5B16F3EEFBC0
EEFF808194CCFCA25E151F5E5EA26F5AA25EA25E6F5A5A5570D160>86
D<913803FFE0023F13FE49B67E4915E0903A0FFC007FF0D91FF0EB1FF86EEB07FC013F6E
7EA2017F6E7EA2707FA26D5A5CEB0FC090C9FCA45EA20307B5C7FC4AB6FC141F91B512E1
0107EBF803011F138090263FFC005BEBFFF04813C0485B4848C71207485A48485D123F5B
007FEF03C049140F00FF9338F807805B161FA2163FA293397FF00F006C6CECFFF86DD903
EF5B003FDA07C7131ED81FFC90393F87FC7C3C0FFF01FF07FFF86C9026FFFC035B6C02F8
5CC66CD9C0011380D90FFEC7007EC7FC3A3779B540>97 D<F003FEEF07FFA25F19FCEF00
3F180FA419F8A4181FA219F0A4183FA219E0A4187FA219C0A3ED1FFC4AB5EA80FF020F14
E0023F6E13809139FFF807F8499038C000FC010790C7123ED90FFC8049488049486E1300
494880495A485B4890C8FC5A495E120F5B121F491507123F60485AA3170F12FF495EA417
1FA260A4007F163FA260003F167F7F001F16FF5E6C6C5C6C6C020F5B6C6C4A7F6DEC7F7F
C69026C001FE13F890277FF00FF8B512E06DB54814C0010F14C0010349C6FC9026007FF0
EC80003F5578D347>100 D<F13F80953801FFC0922703FF800713E0031FD9F00F13F092
B538FC3FE702039138FF7F0F4A010313FC913A0FFC007FF0DA3FF0EB3FE04A48D91FF013
E04A48ED07C04B6D6CC7FC4990C7FC5B4A811307A2495AA4171F605CA24D5A606D6C147F
604D5A6D6C4990C8FC6D6C495A9238800FFC499038E07FF892B512E0D9078F1480D90F03
49C9FC9138007FE04990CBFC131EA2133EA2133FA28014E091B612C06D15FE717E6D16E0
6D16F884013F8290B9FC480180C7FCD807FCC8000F7FD80FF015014848ED007F485A4970
7E127F90CAFCA248605AA26C177F6C4DC7FC6D4B5A003F4C5A01E0ED0FF86C6C4B5AD80F
FCEDFFE02603FF80010713806C01F8017F90C8FC6C6CB612FC011F15E0010392C9FCD900
1F13E044507FB640>103 D<EC01F0EC07F8EC0FFCEC1FFE143F15FFA25C15FE143F15FC
EC1FF8EC0FF0EC07C091C7FCAFEC3FE0EB7FFFA215C090B5FC13031300A31580A55B1500
A55B5CA513075CA5130F5CA5131F5CA5133F5CA2137FEBFFF8007FEBFFE0B6FC15C0A220
527BD124>105 D<EC01FF0103B5FCA25B15FEEB001F1407A415FCA5140F15F8A5141F15
F0A5143F15E0A5147F15C0A514FF1580A55B1500A55B5CA513075CA5130F5CA5131F5CA5
133F5CA2497E497E007FEBFFF0B612E0A320547BD324>108 D<913A7FC001FFC0D97FFF
010F13F890B5013F13FE4BB6FC922681FE0313800103902687F00013C00100D98FC0137F
039FC7EA3FE015BE5D0378141F5D5D4B143F5B5DA292C8FCA2187F5B4A16C0A418FF1307
4A1680A45F130F4A1600A45F131F4A5DA41707133F4A5DA2496C4A7E496C4A7E007F9026
FFF00FB512FEB6484814FCA33F357BB447>110 D<91397FC007F8D97FFFEB3FFE90B590
B5FC03811480ED83F80103D987E113C00100EB8F81ED9F01DBBE031380153C4B7E03F014
00EE007C4B90C7FC495BA25DA392C9FC5BA25CA413075CA5130F5CA5131F5CA5133F5CA2
497E497E007FEBFFFCB6FCA25D32357CB432>114 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmtt12 24.888 25
/Fg 25 127 df<137E3803FFC04813E0001F13F84813FCA24813FEA2B6FCA86C13FEA26C
13FCA26C13F8000713E06C13C038007E00181857976A>46 D[<F201F8507E507E507E1C
8062A262A2621C0097B5FC6361636163A24F5BA24F5BA2616361636198C7FC96B5FC62A2
4E5BA24E5BA2606260626062A24E5BA24E90C8FCA295B5FC615F615F615F61A24D5BA24D
5BA25F615F96C9FC94B5FC60A24C5BA24C5BA25E605E605E605E60A24C90CAFCA24C5AA2
5D5F5D5F5D5F5D5FA24B5BA24B5BA25D94CBFC92B5FC5E5C5EA24A5BA24A5BA25C5E5C5E
5C5E5C93CCFCA24A5AA2495BA25B5D5B5D5B5DA2495BA2495BA25B92CDFC90B5FC5C5A5C
5A5CA2485BA2485BA25A5C5A5C5A91CEFCB5FC5BA25BA25B127F6C5A6C5A6C5A>81
160 116 270 106 I<EEFFFC030FEBFFE092B612FE0203EDFFC0020F16F0023F16FC91B9
FC4918C04984010F844918FC498449DA800F8090B500F8C76C804802E0021F8048028002
038092C9804849707F4849161F4A707F4849824A707F484982874A824873138091CBFC86
491AC086B5FC86801CE086A56C90CBFCA26C5AEA0FF8EA03E0CDFC621CC0A362A21C8062
A2621C0097B5FC63616163614F5B63614F5B4F5B96B5FC634E91C7FC604E5B4E5B4E5B4E
5B4E5B95B55A4D5C4D91C8FC4D5B4D5B4D5B057F5B94B55A4C5C4C5C4C91C9FC4C5B4C13
F84C5B93B55A4B5C4B5C4B91CAFC4B5B4B13F84B5B4B5B4AB55A4A5C4A91CBFC4A5B4A13
F84A5B4A5B91B55A495C010791CAB4FC49494C138049494C13C04901F04C13E0495B90B5
5A485C4891CAFC000F5B4890BBFC5A5ABDFCA66C1BC06C1B80000F1B00538075FF6A>50
D<013FBA7E498590BB7E4886A663636302F8CDFCB3B093380FFFE04BB512FE031FECFFC0
037F15F002FBB712FC91B9FC861AE08686861AFF9326F8007F8093C7120F03FC02038003
E00200800380033F7F92C97E02FC707F4A707F4A824A846C4982017F717F6DCBFC90CC7E
1C8086A27413C0A286A31CE086A6EA03E0EA0FF8EA3FFE487EA2B56C5F1CC0A262A35013
8091CBFC626C4895B512007F616E4C5B7E6E4C5B6E4C5B6C6D5E6E4C5B6C6D93B55A6E4B
5C6C6D6C14076C02E0021F5C6C02F891B6C7FC6C9126FF800F5C6D91B712F86D606D606D
60010395C8FC6D5F6D6C16F86E16E002071680020103FCC9FCDA001F14C0030101F8CAFC
538075FD6A>53 D<137E3803FFC04813E0001F13F84813FCA24813FEA2B6FCA86C13FEA2
6C13FCA26C13F8000713E06C13C038007E0090C7FCB3B3A5137E3803FFC04813E0001F13
F84813FCA24813FEA2B6FCA86C13FEA26C13FCA26C13F8000713E06C13C038007E001859
57D86A>58 D<4AB512F0023F14FF49B712F0010716FC011F16FF4917C04917F090B97E48
8419FF864885922680003F804AC7000380050080183F060F7F727F6C4981727F6C49816D
5AD91FC0707F90CB7EA28587A285A661050FB6FC0407B7FC93B8FC150F157F0203B9FC14
1F147F49BAFC13075B013FEE000F49158090B600F0C7FC4892C8FC4814F84814E04891C9
FC485B4813F814E05C5A5C91CAFC485AA25BA67F616C7E616E5E6E93B5FC6C6D5D6E5D6C
6D150F02FE157F6C6D6C49B612F86C02F8017F92B512E092BB12F06C1CF86C1CFC6C7E6D
17FB6D17F1010717C06DEF003F010004F86D14F8023F03C0010314F0020302FCC8003F13
E0DA003F018092C8FC5E5C75DA6A>97 D<0407B512C0047F14FE0307B712E0031F16F803
7F16FE4AB9FC020718804A18C0023F18E05C91BAFC4919F04902FCC7FC4902E0141F4914
804949C8FC4913F84913E090B5486F13E05D4891C96C13C04849701380963800FE004849
94C7FC5C485BA2485BA25C5A5CA291CDFC5AA25BA312FF5BAC7FA2127FA27FA36C7FA280
7E80F21FE06C6DEF3FF0F2FFFC6C7F806C6D5E806C6E5D6F5D6C6E17F86D6D5D6D01FC4B
13F06F5D6D6D6C91B512E06D02F0010314C06D02FF133F6D92B71280010019006E5F6E5F
6E17F002075F02015F6E94C7FC033F15FC030715E0030092C8FC040713E04E5C71DA6A>
99 D<060FB512F0063F80874E80A295B6FCA284A284A2180F95C7127FB3A6EE1FFE4BB5
12E0030F14FC037F14FF4AB712C04A16F0020F16F84A16FC027F16FF91BAFC5B5B49ECF8
01499138C0003F4991C7120F4901FC14034901F08090B5486E7E4B81485C4891C97E4A82
4849825C48845C484982A24A825A4A177FA291CBFC5AA25BA312FF5BAD7F127FA36D18FF
A27E6E5EA2616C7FA26E5E6C6D5EA26C6D5E806C606E5E6C6D93B5FC6F5C6C6E5C6D6D5C
03F85C6D01FE143F6D6D6C90B6FC6DDAF00792B512F06D91BA12FC6D846D05FE15FE6D6C
16FC6E04F015FF6E16E0020704C015FE6E1600020003FC6D14FC033F02F07F030702806D
14F09226003FF8CBFC607F79FD6A>I<933807FFC093B512FC0307ECFF80033F15F092B7
12FC4A16FF0207834A17E0023F834A8391B97E498449DAFC00804902E0010F804991C712
034901FC02008049496F7F4901E0151F4B6F7F90B5486F7F4891C9FC4A824849707F485B
737F485B4A177F87484983A2485B1C8091CB7EA25A5BA27413C0A212FF90BCFCA91C801C
006349CEFC127FA37F7EA280A26C7FA26EEF01FE6C4F7E6E4D13806C4F13C0806C7F6E5F
6C7F6C6E5E6F4C13806D6D93B5FC6D01F84B14006D6D5D6D01FF030F5B04C0023F5B6D02
F891B5FC6D9126FF800F5C010092B75A6E606E606E60020795C7FC6E17FC02005F033F16
E0030F1680030103FCC8FCDB001F14C0040101F8C9FC525C75DA6A>I<F30FFCDC1FFC92
B512C00303B500E0010F14E0031F02FC013F14F8037F02FF90B612FC4AB700C115FE4A16
E7020F93B8FC5C5C5C91BDFC49F1F87F49DAF007158049DA8000DAFE0013FE4949C7003F
01F8133F4B6EED1FFC4901F002076DEB0FF049496E6DEB01C099C7FC49496E7F4B8092C9
7E90B5844A82A24A82A248864A82A96E5E6C62A26E5EA26E5E6D96C8FC6F92B5FC6F5C6D
6D4A5BA26D6D4A5B6D01FC021F5B6F5C6D6D6C90B55ADCF0075C4991B75A624995C9FC61
61495F19E002FD5EDAF87F92CAFC031F14FC017F010314E09226001FFCCBFC93CDFCA56D
7EA280A2806D7F15E092B712F06DEFFFC06D18FCF2FFC06D19F04919FC4919FF4986491A
E090BC7E4887488703C0C8001F804849CA6C7F4801F8050F14804A17014801C0716C13C0
1B1F48497213E091CC7E5B007F7413F04985A2498500FF1CF8A2491A7FA66D1AFFA26C6C
4F13F0A26D616D616C6D4E13E06E606C6D4E13C002F895B5FC6C01FE050314806C6D6C04
0F14006C02E0043F5B03F893B5FCC6DAFF80020F14F86D02FE0103B65A6D91B95A6D626D
6201034FC7FC010019F86E60021F18C002034DC8FC020017F8030F1680030003F8C9FC04
0349CAFC608B7ADA6A>103 D<000FB512F0003F80814880A2B6FCA27EA27EA2120FC712
7FB3A6F01FFF4DB512F0050F14FE053F8094B712C00403824C82041F16FC5E4C8293B9FC
92BA7EF0F00795C7FC05FC6E7F05F08005C0804D8294C87E5E4C815E884C815EA25EA25E
A393C9FCA35DB3B3A8000FB700F0017FB71280003F04FC90B812E06048704817F0A2B918
F8A26C04FE18F0A26C4C6C17E084000F04F06D1680657E7EFD6A>I<F00F80F07FF0F0FF
F84D13FC4D13FEA34D13FFA57113FEA37113FC7113F8F07FF0F00F8095C7FCB3020FB712
F84A16FC4A16FE4A16FFA680808091C9123FB3B3B3B3B3A26019FEA418FF19FC5F7FD80F
F84B13F8487E486C5D486C17F05FB56C4A13E04D13C05F94B51280160302F0011F14006C
90B75A60606C5F606C5F6C5F6C4CC7FC000116F86C6C15E0010F1580D9003F01F8C8FC40
AE76FE6A>106 D<001FB512C048804880B67EA67E7E7EC7127FB3A7067FB7128095B812
C04D17E04D17F0A67117E07117C0721680DE000701FCC7FC4F5B4F5B4F5B96B55A4E5C4E
91C8FC4E5B4E5B4E5B4E5B4E5B95B55A4D91C9FC4D5B4D5B4D5B4D5B4D5B4D5B94B55A4C
91CAFC4C5B4C5B4C5B4C7F4C7F5E93B6FC03F98115FB92B77E8505F77F17E305C37F0581
7F05007F5E4C6D7E4C6D7F04E06D7F5E4C6D7F93C76C7F4B6E7F5D4B6E7F727F737EA273
7F737F737FA2737F737F8587737F747E8688747F747F001FB700E0010FB612F848704915
FC48704915FEB86C4915FFA66C4C6D15FE6C4C6D15FC6C4C6D15F8607E7BFD6A>I<001F
B712F048824882B87EA67E7E7EC9127FB3B3B3B3B3AC001FBB12F8481AFC481AFEBDFCA6
6C1AFE6C1AFC6C1AF8507E73FD6A>I<DC07F8ED3FC0261FFFF090267FFF80903803FFFC
48D9F803B56C011F7F486D4802F0496D7EB5D8FE1F6E90B67E4B6E48814B6E488191B800
0F816107BF816C95B7FC6C886CDBF81F15C0D8001FDAE00FED007FDC800702FC6D7E4C6C
4A7F4B5E4B5E4B6D4A7FA24B4C814B6D91C77EA24B5DA34B5DA292C85BA54A5EB3B3A900
1FB500FE013F9026FFF001B61280486E496E4815C0486FB66C4815E0B700C16F4815F0A6
6C03804B6C15E06C4B6C4A6C15C06C4A6D4A6C15806C5A81D96A>I<F01FFF000FB500F0
49B512F0003F6E010F14FE6F013F80486E90B712C0040382B64982041F16FC6C5D4C826C
92B9FC92BA7E000FEFF007C76C92C7FC05FC6E7F05F08005C0804D8294C87E5E4C815E88
4C815EA25EA25EA393C9FCA35DB3B3A8000FB700F0017FB71280003F04FC90B812E06048
704817F0A2B918F8A26C04FE18F0A26C4C6C17E084000F04F06D1680655A7ED96A>I<EE
1FFF4BB512F0030F14FE033F6E7E92B712E0020316F8020F16FE4A824A8391B912E04984
498449DAF8038049912680003F7F4949C7000F7F03F8140349496E804901C06E6C7F90B5
486F7F92C97E4849707F4849707F4A8248864A824849707FA24A177F48864A83A24890CB
6C1380A348487213C0A4498400FF1BE0AD6D60A2007F1BC0A26D60A36C1B806E5FA26C6D
4D1300A26E94B5FC6C626E5E6C626E5E6C6D4C5B6E5E6C6D4C5B6F5D6C6E4B5B6D6D92B5
5A6D6D4A5C03FC14076D6D4A91C7FC6DD9FFC0017F5B6DDAF803B55A6D91B75A6D606D60
6E5F021F94C8FC6E5E020316F8020016E0033F1580030F4AC9FC030114F0DB001F90CAFC
535C75DA6A>I<F01FFE000FB500F00103B512E0003F6E011F14FC6F017F14FF486E48B7
12C0040716F0B649824C826C037F16FF93B97E6C91BA7E88000FDDE00F80C76C9126FE00
018005F86D6C7F05E0021F7F4D140794C86C7F4C6F14804C814C7013C0874C18E04C824C
7013F0A24C7013F88793CAFC7513FCA25D871DFEA21C7FA31DFF88AD641DFEA31CFF811D
FC6382637018F863A2704C13F0705E1DE0705E5113C07093B5FC704B1480704B1400715C
714A5B71023F5B7191B55A05FC01035C9426FF801F5C95B75A644B95C7FC705E7016F804
0F5E7016C0705E04004BC8FC053F14F0050714809426007FF8C9FC95CBFCB3AF000FB712
F0003F16FCA24882A2B9FCA26C5EA26C5EA2000F16F060887ED96A>I<F27FFE000FB600
E00207B512E0003F6F027F14F8486F49B67E70010715FF061F1680B7027F16C095B8FC6C
5E050717E05F6C5E000F4CECC01FC84AEBFC0094B512F004FD14C093B6C76C13C006FC6E
13804E6E13004E6E5A4E91C8FC606095CBFC5F5FA25F5FA25FA25FA25FA294CCFCA35EA5
5EB3B0000FBAFC003F19C05A86A2BB7EA26C61A2627E000F96C9FC5B5A79D96A>114
D<92260FFFFCEB03F04AB638E007F8021F9238FE0FFE91B8129F010717FF5B133F5B48BA
FC5A5A5A489138F8000F92C8FC4801F8153F02C0150F48498149C97E845B484882A24917
7FA47FA27F6C6CEF1FF86D715A02C093C8FC14F06C13FC6CEBFF8015FC6CECFFF06CEDFF
C06C16FE6CEEFFF06C6C16FF6D17E0010F17F86D17FE010083023F17C0020383DA003F16
F8030082040781DC001F80DD007F1480060F14C01801726C13E0D81FE0171F486C7113F0
D87FFC8300FF84851BF86D83A21A7F7FA280A26E17FFA26E4C13F0806E5E616E4C13E06E
5E6E6C037F13C003E04AB5FC03F8020F14809226FF8001B6FC93B8120062621AF001FB60
01F960D9F87F94C7FCD9F01F16FC020716F0D9E0011680273FC0001F02FCC8FC6C480101
91C9FC4D5C71DA6A>I<ED03F8ED0FFC4B7E825DB3A3000FBB12F8003F86488687BDFCA5
6C626C626C62C8003F90CBFCB3B3A7F33FC0F37FE0F3FFF05013F8AA62836F4C13F08362
715C714A13E06F6D91B5FC05FE4914C06F9038FFC00F95B712806F18006F5F6F5F7016F0
705E705E7093C7FC040315FC040015F0051F1480050001F8C8FC55737BF16A>I<000FB5
00F0037FB57E003F6E4AB67E6F84486E4A81A2B65DA26C83A26C83A2000F717EC7007FEE
0003B3B3AE62A362A262A2626F5E97B5FC6E6D5C6170140F705C6E01F891B6FC9326FF80
0792B512806E91BA12E0A26E1BF0806E05FB15F86E17F36F04C315F06F1683030FDBFE01
15E00303EDF000DB007F02806D1480040301F8CBFC655A7ED86A>I<001FB600F0021FB6
12F0486F4A15F8486F4A15FCB76C91B712FEA66C4B6E15FC6C4B6E15F86C4B6E15F0D800
0701C0C90007EBC0006D626F5EA26D97C7FC6F5EA26D616F163FA2027F606F167FA2023F
606F16FFA2021F606F5DA26E60705CA26E60705CA26E60705CA26E95C8FC705CA26E5F70
143FA2037F5E70147FA2033F5E7014FFA2031F5E705BA26F5E715AA26F5E715AA26F5E71
5AA26F93C9FC715AA26F5DEFF83FA2047F5CEFFC7FA2043F5CA2EFFEFF041F5CA294B5FC
705CA4705CA2705CA27091CAFC705BEF3FF85F5A7BD86A>I<000FB600F80203B612FE00
3F6F4AEDFF80486F4A16C0705CB819E0A46C1DC04C806C4B6E1680000F4B6EEDFE002600
3FFCCB00071380A26E60011F98C7FCA56E606D62A56F173F6D62A56F177F6D62A3EF07FC
EF1FFF6F496D13FF6D4B6D5CA294B57EA36F5E6D4A02F05CA34C14F8A218BFDA7FF84C5B
4C14FCA2181FA24C14FEDA3FFC4C5BEFFE0FA2041F14FFA2021F4A6C92C8FCA2DBFE3F15
8FA24D7EA2020F017FEDCFFEA24D7EA303FF16DF6E4A6C5C04FF15FFA24D7FA36E604D7F
A394C77E6E604C806E60DB7FF802035BDB1FF06E90C9FC635A7DD86A>I<DA03F8ED0F80
DA3FFFED1FE091B500C0EC3FF0496E147F01076EECFFF8011F6E5B496E1307496E5B90B7
5B0003DC807F13F04804C1B512E04893B612C048198048D9FC1F160048D9F00F5DB5D8C0
0715F84A6C5D4A6C5D01FC6D5D496E91C7FC6C486E13FC496E5B6C48020713E0D80F80DA
00FEC8FC45186EFD6A>126 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmbx10 20.74 45
/Fh 45 122 df[<177817FC16031607EE0FF8EE3FF0EE7FE0EEFFC04B13804B13004B5A
150F4B5A4B5A4B5A15FF5E4A5B5C4A5B4A90C7FCA24A5A143F5D4A5A14FF5D5B5B5D5B5D
5B5D5BA24990C8FCA25B5CA213FF5C5AA3485BA35A5CA25AA35C5AA45AA25CA35AA65CA2
B5FCB3A57EA280A67EA380A27EA47E80A37EA2807EA36C7FA37E80137FA2807FA26D7FA2
7F817F817F817F7F81147F6E7E81141F6E7EA26E7F6E7F806E7F82157F6F7E6F7E6F7E15
076F7E6F13806F13C0EE7FE0EE3FF0EE0FF8EE07FC160316001778>46
171 109 256 77 40 D[<127812FCB4FC7F6C7EEA3FF06C7E6C7E6C7E6C7E6C7F806C7F
6D7E6D7E80131F6D7E806D7F6D7FA26D7F817F6E7E81143F8181808280828082A26E7FA2
8280A2828082A36F7EA3178081A217C0A38117E0A417F0A281A317F8A681A217FCB3A517
F8A25DA617F0A35DA217E0A417C05DA31780A25D1700A34B5AA35E5C5EA25C5EA24A5BA2
5E5C5E5C93C7FC5C5D5D147F5D4A5A5B5D495BA2495B4990C8FC5C495A133F5C495A495A
485B5C4890C9FC485A485A485A485AEA7FC0485A90CAFC12FC1278>46
171 117 256 77 I<F101F04F7EF10FFEB3B3B3A4001FC2FC482180C312E0A7003F2180
6C2100CCD80FFECDFCB3B3B3A4F103F8735A838375EC9A>43 D<EB7F803801FFF000077F
487F487F487F15804814C0A215E0B6FCA215F0A315F8A27EA37EA27E7E6C13FD000113F1
38007FC1EB000315F0A4140715E0A2140F15C0A2141F1580143F15005C147E14FE495AA2
495A495A130F495A495A495A49C7FC5A485A485A13F06C5A6C5A1D3C729A37>I<B912F0
B134117EAE42>I[<F20F80F21FC0F23FF01A7FA21AFFA261A21BE0611BC0611B80A2611B
006162A2193F62197F62A219FF626062A260626062A26097C7FC6061A2183F61187F61A2
18FF615F61A25F615F61A25F96C8FC5F60173FA260177F6017FF60A25E605E60A25E605E
95C9FCA25E5F163F5FA2167F5F16FF5FA25D5F5D5FA25D5F5D94CAFCA25D5E153F5EA215
7F5E15FF5EA25C5E5C5E5CA25E5C93CBFC5C5DA2143F5D147F5DA214FF5D5B5DA25B5D5B
5DA25B92CCFC5B5CA2133F5C137F5CA213FF5C5A5CA25A5C5A5CA25A91CDFC5A5BA2123F
5B127F5B12FFA25BA25BA25BEA3F806CCEFC>76 172 117 256 99
47 D<EB3F803801FFF0487F000F13FE487FA24814804814C0A3B612E0A76C14C0A36C14
806C1400A26C5B000313F86C5B38003F8090C8FCB3A5EB3F803801FFF0487F000F13FE48
7FA24814804814C0A3B612E0A76C14C0A36C14806C1400A26C5B000313F86C5B38003F80
1B4D72CC37>58 D<1AFE963803FF80A24F7FA24F7FA34F7FA24F7FA34F7FA296B57EA24E
80A34E81A24E81A34E81A24E81A34E81A2DE7FEF80A2DEFFC780A219874D018380A24D01
0181A218FE05076D81A24D486D80A260051F6E8060053F6E80A260057F6E806005FF6E80
A24C496D80A295C7FC4C6F81A24C486E81A25F040F7080A24C486F80A25F043F70805F04
7F7080A24C486F80A25F4B7180A24B90C96C8194BBFCA24B87A24B87A34B8704F0CA123F
033F7280A25E037F72805E03FF7280A24A497180A293CBFC4A7381A24A487281A25D020F
7480A24A487380A25D023F74805D4A6C7380010FB57EB800E0030FB912FEA8877879F796
>65 D<BD12F0F4FFC01DFCF5FF801EE01EFC8A787EC7001F02C0C8000315E0E1003F800A
0F8076807680768076818977808C898CA27780A47780A96865A36865686568535C9DC7FC
9AB6FC525C525C5214F00A1F5C52148099B6C8FC090714FC98B612E094BA12800BFCC9FC
1DF0F5FF801EF01EFE05C0C9003F6D7E0A0714E00A0114F87614FE777F77807780778077
808C77808C898CA2771580A221C0A28AA221E0AA9BB612C0A4531580A3531500A2535C53
5CA2535C535C9AB65A525D0A075D0A1F92C7FC51B65AC012F8671FC09CC8FC1EF81EC053
C9FC1D807B767AF58D>I<96261FFFF8161E060FB600C0153F4DB700FC15FF051FDCFF80
5B94B900E05B040306F85B041F06FE5B047F726C5A4BB7D88001ECC07F030703F0C7001F
01F0B5FC4B92C8000313F9033F02F8030090B6FC92B600C0163F4A92CA120F4A4A170302
0F02F8834A02E0834A4A183F4A4A8491B6CC7E494A85495C494A854C85494A855B494A86
8B495C90B6CE7EA2488A5D5A4B875AA2488A5DA25A8B5D5AA2F700FE20005AA25DA4B6FC
B07EA481A27EA3207E6C1FFF81A27EA2817E676C1FFE817E6F1B036C1FFCA26D6E1A076D
6E1BF81F0F6D6EF21FF06D806DF53FE0701A7F6D6EF2FFC06D6E1B806D6E616E6E4E1300
6E6EF00FFE6E02F04E5A6E6E4E5A020302FEF0FFF06E6E4D5B6E03C004075B033F02F804
3F5B030F02FFDCFFFEC7FC6F03F0020F5B03019226FF8001B512F06F6C92B75A041F1980
04034EC8FC040018F8051F17C005014CC9FCDD000F15E0DE001F01FCCAFC787A75F78F>
I<BD12E0F4FF801DF81DFF1EE01EF81EFF1FC0C7001F02E0C8001F81090015F80A1F800A
0314FF0A00810B3F800B0F14F0778077800B0080787F8A78808D78808A8D78808A8D7880
A28D8B2280A28B22C0A37914E0A322F0A47914F8A622FCB222F8A55514F0A422E0A36722
C0A2228067A222009CB6FC69A2545C6966545C6966545C545C5491C7FC9BB55A535C535C
0B0F5C535C0B7F5C0A03B6C8FC0A0F5C99B65A091F15F0C012C09CC9FC1EFC1EF01E800B
F8CAFC1D800AE0CBFC86767AF598>I<C012E0A48BA4C7001F02F0C81203F3000F1C0176
7E0B1F7F1D078989891E7FA21E3F1E1F8B1E0FA21E07A31E03A28BA21E01F201FEA5787E
A4080393C7FCA31A07A21A0FA21A1F1A7FF101FF190F94B7FCA89438F0000F1901F1007F
1A1F1A0FA21A07A21A03A2F703FC1A01A2F707F8A51F0F20F097CAFCA31F1FA220E01F3F
A31F7FA2F7FFC0A266A266208066666666669BB512001D03651D1F9AB6FC1C0751B65AC0
FCA567A376757AF482>I<C01280A41FC0A4C7001F02F0C81207F3003F1C071C007713E0
1D1F8989898989A21E7F1FF01E3FA21E1FA31E0FA21FF8A21E07A3F203FCA3F603FCA49B
C7FCA21A07A31A0FA21A1FA21A3F1AFF1903191F94B7FCA89438F0001F190319001A3F1A
1FA21A0FA21A07A31A03A997CBFCB3A9BB12E0A86E757AF47D>I<BA00FE4BB81280A8C7
001F02F0CB000302F8C7FCE4001F90C8FC68F77FF8555A545B545B545BE41FFEC9FC545A
545A545A535B0B0713805390CAFC535A535A535A52485A5213C0525B5290CBFC525A525A
F4FFF0515B515B515B5190CCFCF33FFC515A515A505B505B080F5B5048CDFC505A505A50
7E4F7F07077F614F804F804F804EB6FC4E814E814E8160067F8195B8FC05F101E78105F3
13C305F701818194B5000181DEFC00814E7F4E6D804E824E6D8095C77E4D6E804D844D6E
814D8074818A75808775808A75808775818B75818776808B76808876808B76818876818C
76818977808C778089778077818D89778178808D0B03B612FEBA00FE020FB912F0A88C76
7AF59B>75 D<BB12E0A8C7001F02F0CCFCB3B3B3A91EFFA4651EFEA51D03A41EFC1D07A3
1D0FA21D1FA3F53FF81D7FA21DFF64A26464641C3F5213F051B5FC631B1F98B6FC1A0FBF
FCA31EE0A568767AF577>I<B800E00A0FB712FE05F81C3F7164A27199B8FCA37163C700
1F10F0C7FC72F203FBA203F76EF207F3A203F36EF20FE3A203F16EF21FC3A303F06EF23F
83A2706DF27F03A2706D1AFEA2706DF101FCA2706EF003F8A3706EF007F0A2706EF00FE0
A2706EF01FC0A2706EF03F80A2716DF07F00A3716D18FEA2716D4D5AA2716E4C5AA2716E
4C5AA3716E4C5AA2716E4C5AA2716E4C5AA2726D4CC7FCA2726D16FEA3726D4B5AA2726E
4A5AA2726E4A5AA2726E4A5AA2726E4A5AA3726E4A5AA2736D4AC8FCA2736D14FEA2736D
495AA2736E485AA3736E485AA2736E485AA2736E485AA2736E485AA2746D48C9FCA374EB
FEFEA2746D5AA2745CA2745CA2745CA3745CA2745CA27590CAFC0103B57EB800FE6F4803
1FB912FEA2755AA3755A755A755AAF767AF5BC>I<0603B5FC4DB612FE051FEDFFE094B8
12FC0407EFFF80043F18F093BA12FC0303DB800714FF030F02F8C76C14C04B02C0020F80
037F91C8000314F892B500FC030080020302F0043F13FF4A4A70804A02800407804A91CA
6C804A4971804A49718091B548727F4989494A727F494A7280494A7280498A4C84498A49
91CC6C80A290B5487380A2488B4B85488BA2484A741480A24820C0A3484A7414E0A34820
F0A44B864820F8A6B61EFCB16C20F8A36F62A36C20F0A46C20E06F62A36C20C0A26C6E97
B61280A36C6E4F1500A26C676F616C6770606D666D6E4E5CA26D6E4E5C6D666D6E4E5C70
606D9BC7FC6D6E95B55A6D6E4D5C6E6D4D5C6E6E4C5C6E6E4C5C02076E4C14806E02F804
7F91C8FC6E6E93B55A6E6C01FF030314F86F02C0020F5C030F02F8027F14C003039126FF
8007B6C9FC030092B712FC043F18F00407188004014DCAFCDC001F16E005014BCBFCDD00
0391CCFC7E7A75F795>79 D<BDFC1CFCF4FFC01DFC1DFF1EC01EF01EFCC7001F02E0C86C
8009076E7E0900810A3F800A0F807680768076808B8820808920C0A220E08920F0A420F8
AB20F0A320E0A26520C0A220809AB6FC2000525C6764525C0A1F5C5214C099B65A090792
C7FC98B612FC94BA5A1EE09BC8FC1DFC1DE052C9FC99CAFC05F0CEFCB3B3A8BA12FEA875
767AF587>I<922603FFFCED0780033FD9FFF0EC0FC00203B600FE141F020FDBFFC0133F
023F04F0137F91B800FC13FF0103EFFF0349DA800714874901F8C7003F13EF4901C00207
90B5FC017F4914004AC9123F4948824849160748498248844A707E5A4A83488586484983
A2865A86A286B5FC801B7FA280A2806E183FA280806E6CEF1F806F94C7FC6C14F015FEED
FFE016FF6C16F0EFFF806C17FCF0FFC06C18FC19FF6C19C01AF06C19FC6C85747E6C866D
856D856D856D856D850101857F023F1980020F19C01403020019E0150F030018F01607DC
007F16F81703EF001F060115FCF0003F190F85070114FE858686127EB48586A286A46D84
A21CFCA27FA21CF87FA26D4E13F07FA26D4E13E07F6D4E13C014C06E4D13806E4D130002
FC4D5A02FF5E03E04B5B03FC030F5BDBFFC0023F5B01FD02FF0103B55AD9F87F91B71280
496C95C7FCD9C00F17FCD980015F90C76C16E048020F93C8FC48DA007F14F80078030191
C9FC577A75F76E>83 D<000FC012FEA5488BA303F8C76C9138C0000392C8EF001F02FC1B
0702F01B0102C0757E4A8891C985484877138049894989A24989A24989A4491E7F007F20
C0A3491E3FA748CAF21FE0A5CB97C7FCB3B3B3AD4ABC12F0A87B7479F38A>I<BA00FE03
0FB812E0A8C7001F02F0CC003F01F8C7FC0D0190C8FCB3B3B3B3A46E6468A2836E1C0768
A26E1C0F686E801F1F6E6571193F6F515A836F515A6F6E4D5B6F6E5F6F5090C9FC724D5A
6F6EEF3FFC030002FC4D5A706D4C485A706D6C03075B7002E0033F5B040702FC0203B55A
70DAFFE0017F91CAFC040092B712FC053F18F0050F18C0050395CBFCDD007F16FC060F16
E0DE007F92CCFC070114C08B787AF598>I<BA6C90BA6C023FB712F0A8D800010380C900
010380CA0007EC8000A19126001FF8C7FC6D6F70765A7A181F6EA15B71716E183FA26E6E
71647A187F6EA15B71716E18FFA26E6E7199C8FC7A5F6EA15A71837A17036EA15A71716E
1707656E6F68536F160F6EA15A7274161F656F6E68536F163F6F6B7286531A7F6F6B7205
9F6E16FF1DFF6F6E050F97C9FC52705D6F6A724C6C6E15031C036F6E4C6C610A07701507
6F6A734B6C6F140F1C0F6F6F4B6C617C141F1C1F706E4B6D600A3F71143F7069734B6D6E
147F1C7F706E4B6D600AFF7114FF709ECAFC7392C76C6E5B63706E4A6E5F090372130370
68734A80090772130770680880496EED800F1B0F7003C0496E5F091FF1C01F716708E049
6FECE03F1B3F7102F0496F5E097FF1F07F716708F8496FECF8FF1BFF7193C96C93CBFC74
1AFD1AFD71DAFFFE705D23FF71665182A2714B705DA271665182A2724A715CA3724A715C
A272655183A27291CB6C91CCFCA272645084A27249725BA272645084A272645084A27348
735A073F63DF1F80F11F80C4777CF5CD>87 D<030FB5FC0203B612F8021F15FF91B812E0
010317F84917FE011F9026FC001F6D7E4901800103806F010080496D6E13F890B56F7F6F
80727F486E6E7F8784878487A26C5C72806D5BA26D5B6D5BD907FEC9FCEB00F091CAFCA5
183F0403B7FC93B8FC151F92B9FC140F023F150049B612C0010702FCC7FC4914E0013F14
804949C8FC48B512F84814E0485C5D4891C9FC485B5A5C5A5CA2B5FC5CA360A360806C5F
6E5D6C18DF6EED1F9F6C6D037F14FC6C6EDAFF1FEBFF806C02E0902603FE0FECFF806C02
F8D90FFC16C06C02FF9038FFF8076C92B5487E013FEEC001010F4C7E01014BC7123FD900
1F02F002031480DA007F90CCFC5A507BCE60>97 D<ECFFFEB6FCA8C67E131F7FB3ADF0FF
FE050FEBFFF0057F14FE4CB77E040716F0041F16FC047FD9803F7F9327FFF800076D7E92
B500E001008005806E7F4CC86C7F4C6F7F04F06F7F4C6F7F4C6F7F4C18808693C915C074
14E0A21DF0871DF8A31DFCA2871DFEA41DFFAE1DFEA51DFC63A21DF8A21DF098B5FC1DE0
A25014C0A2704B148070180062704B5B705F704B5B04FE037F5BDBF3FF92B55A03E101C0
0103148003C001F0010F91C7FC9226807FFE90B512FCDB001FB75A4A6D16E04A010393C8
FC4A010015FC4A021F14C090C9000101F8C9FC60797AF76E>I<93383FFFE00307B67E03
3F15F04AB712FE0207707E021F83027F8391B526FC003F7F010302E001077F490280497F
4949C78049495C495B49494A7F90B55AA2485C5A5D5A92C86C5B5A725B485B725B48715B
060013C0071EC7FC4895C8FC5CA4B5FCAF7EA280A27EA36C7FA2F20FC06CF11FE0816C19
3F6F17C06C197F6C806FEEFF806C4E13006D6D5D6D6D4B5A6D6D4B5A6D6D6C141F6D02E0
EC7FF86D02F8903803FFF0010002FF013F13C06E91B65A021F94C7FC020716FC020116F0
DA003F15C0030702FCC8FCDB003F13C04B5079CE58>I<973807FFF00607B6FCA8F00003
190086B3AD93381FFF800303B512FC033F14FF92B712C0020716F0021F16FC4A9138007F
FE91B500F0010FB6FC4902C01301010791C87E4949814901F881494981498390B548814B
814884485CA24891CAFCA25A5C5AA25AA25C5AA5B5FCAE7EA47E80A27EA37E807EA26C6E
5D6C60816C606D6D5D6D6D5D6D6D5D6D6D92B67E6D6D4A15FE6D6D020792B5FC6D02E0EB
3FFE6D6C9039FC01FFFC021F90B612F06E16C0020116006E6C14FC030F14F09226007FFE
C791C7FC607979F76E>I<93381FFFE00303B6FC033F15E092B712F8020716FE021F707E
4AD9FC0114E091B526E0001F7F49028001077F010749C76C7F494902007F49496F7E4949
6F1380494917C08590B5486F13E0485C487213F0A24891C914F885481AFC5C5A7313FE5A
A25C5AA21BFF85A2B5FCA291BBFCA51BFE02FCCCFCA67EA3807EA37EA26C7F1B7E1BFF6C
807E6F5E6C1AFE6C6E16036FEE07FC6D180F6D6DEE1FF86D6DEE3FF06D01FFEEFFE06D6E
4A13C06D02E0020F1380010002FC023F13006E903AFFC007FFFE021F91B65A020717F002
0117C06E6C93C7FC030F15FC030115C0DB000701F8C8FC50507BCE5B>I<EF7FFE041FB5
12C093B612F0030715FC031F15FF037F168092B5D8F01F13C00203EC803F4A49484813E0
4A4915F04A4990B5FC4A5B4A494814F816C091B51280A25B16005B7114F05D497013E0A2
7213C0060F1300725A95C8FCB2B912E0A8D8000791CAFCB3B3B3A7007FB712FEA845797A
F83C>I<F33FE0922601FFFE913801FFF8033FD9FFF0010F13FE4AB600FE133F020F9226
FFC07F7F023F04F1B6128091BA12EF49DAE01FDAFE1F13C0499026FE000114F849496D14
E04901F0023F13C049496E13E04918F049496E6D6C138090B5486E13FC75130048736C5A
F300F84891C86C6D90C7FCA44886A96C97C8FCA46C6E4A5BA26C61A26D6D4A5B6D6D4A5B
6D606D6D4A5B6D01FC91B55A6D6D4991C9FC499026FFE01F5B4991B65A19F0D91FCF16C0
02814BCAFC90263F803F14F0030149CBFC017F90CEFCA313FFA280A280A28014FC14FF92
B712E06DEFFF801AF81AFF6D19C01BF06D19FC876D85886D866D866D861307013F8690BC
FC4887000749C97E4801F00401804849EE003F484917074A834890CB6C7F86485A87A66D
96B5FC6C636E5F6C636E5F6C6D4D5B6C6D4D5B6C6D4D5B6C01FE057F5B6C6D6C4BB55A6C
02E0030791C7FC6D01FE037F5B011FD9FFF0010FB512F8010791B812E001011980D9003F
05FCC8FC020717E0DA007F4BC9FC030092CAFC5A727BCE63>I<ECFFFEB6FCA8C67E131F
7FB3AD953803FFF0063FEBFF804DB612E0050715F8051F15FE057F819426FFFC07804CD9
C001804C48C780DC07F8804C4882EE1FC04C486E7F4CC8FC047E835E6F4881A24C835EA2
5EA35EA493C9FCB3B3A6B8D8F001B812E0A8637879F76E>I<14FE903803FF80010F13E0
497F497F497F90B57EA24880A24881A76C92C7FCA26C5CA26D5B6D5B6D5B6D5B01031380
D900FEC8FC91C9FCB0ECFFFE007FB5FCA8C67E131F7FB3B3B3A5B812C0A82A7979F836>
I<ECFFFEB6FCA8C67E131F7FB3AE96B71280A8070791C7FC070113F04F13C04F5B4F90C8
FCF13FFEF17FF84F5A4E5B06075B4E5B4E48C9FC4E5A4E5A4D485A4D13C04D5B4D90CAFC
EF3FFEEF7FF84D5A4C7F4C7F160F4C7F4C7F4C8092B77EA285858516FCDCF07F7F4C6C7F
4C6C7F0480814B487E4B6D80718086718083727F727F868472807280877280847280737F
8785737F73808873804F14F8B8D8C001B712FCA85E787AF768>107
D<ECFFFEB6FCA8C67E131F7FB3B3B3B3B3ABB812E0A82B7879F736>I<902601FFFC9126
03FFF0933807FFE0B6033FD9FF80037F13FF4DB600E00203B612C0050703F8020F15F005
1F03FE023F15FC057F6F91B77E9426FFFC076E48D9F80F7F4CD9C0016E48D98003804C48
C79128E007FC000180C66CDA07F86EDA0FF07F011F4A48704848826DDA1FC0EF3F804C48
6E6D48C86C7F4CC815FE047E7148834CEFFDF8DBFDF86FD9FFF081A2DBFFF04E834C60A2
4C60A34C95C9FCA493C95CB3B3A6B8D8F001B8D8E003B812C0A89A4E79CDA5>I<902601
FFFC913803FFF0B6033FEBFF804DB612E0050715F8051F15FE057F819426FFFC07804CD9
C001804C48C780C66CDA07F880011F4A48826DEC1FC04C486E7F4CC8FC047E835EDBFDF8
81A2DBFFF0835EA25EA35EA493C9FCB3B3A6B8D8F001B812E0A8634E79CD6E>I<93380F
FFF04BB67E031F15F892B8FC020317C0020F17F0023F49C66C13FC4A01E001077F49B500
8001016D7E4949C86C7F49496F7F49496F7F49496F7F49496F7F49496F7F90B5486F7F48
1B8092CAFC481BC0481BE04A83481BF0A2481BF8A348497113FCA3481BFEA5B51AFFAE6C
1BFEA46C1BFC6E5FA26C1BF8A36C6D94B512F0A26C1BE06F5D6C1BC06C1B806F5D6C6E4B
14006D6D4B5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D6C49B55A010102E0010714806D02FE01
7F91C7FC023F90B712FC6E5F020717E0020094C8FC031F15F8030315C0DB000F01F0C9FC
58507BCE63>I<DAFFFEEC7FFEB60207B512F0053F14FF4CB712C0040716F0041F16FC4C
16FF93B5D8803F8092B526F8000780C66C03C06D14F0011F92C8806D4A6F7F04F86F7F4C
814C6F7F4C18804C6F14C093C97E1DE0A27414F0A27414F8A21DFCA2871DFEA4871DFFAE
1DFEA263A31DFCA298B5FC1DF8A21DF0621DE0621DC062701880704B1400A2704B5B704B
5B704B5B04FE92B55A704A5C05C00107148005F0011F91C7FCDC7FFE90B512FC041FB75A
7016E0040393C8FC040015FC051F14C0050101F8C9FC94CCFCB3A6B812F0A8606F7ACD6E
>I<902601FFF8903803FF80B6021F13F0057F13FC94B6FC040315804C15C093260FFE0F
13E093261FF01F13F005E014F8C66C91383F803F011FEC7F006D027E4913FC16FEEDF9FC
5E5E15FB5E03FF6E13F8A24C6D13F07213E07213C04C01011300F0007C96C7FC93CAFCA6
5DB3B3A2B812FCA8464E7ACD52>114 D<912603FFFEEB03C0027F9039FFE00FE00103B6
EAFC3F010F92B5FC133F49EB00072601FFF0EB007F480180141F4890C812074848814981
484881003F177F5B183F127FA2181F12FF7FA27F7F6D6CED0FC06E92C7FC14F814FF6C14
FCEDFFE0EEFF806C16F017FC6C16FF18C06C17F06C836C836C836C836D1780011F17C001
0717E0010117F06D7E020F16F81400030315FCED000F1600051F13FE83007E1603B48283
187F6D163FA36D161FA219FC7FA27F6DEE3FF8A26D17F06D167F6D17E06E15FF02E00203
13C06E4A138002FE021F1300913AFFC003FFFE92B65A01E316F001C016C0D9003F92C7FC
48010714F80078D9007F90C8FC3F5079CE4E>I<ED7F80A715FFA55CA35CA35CA25CA25C
5CA25C91B5FC5B5B5B5B133F90B912C01207BAFCA6D800070280C8FCB3B3A3F007F8AE18
0F6D6E14F0A2181F6D17E070133F6D17C070137F6E6DEBFF806ED9FF0313006E91B5FC6E
5D02035D6E15F06E6C5C030F14809226007FFCC7FC3D6E7CEC4D>I<91B5933801FFFEB7
4AB6FCA8C66C93C7FC011F183F6D84B3B3A962A362A397B5FC6D5FA2616D6E5CF10FEF6D
DD1FCF7F70DA3F8F14C06D6E02FFEDFFE06E6D0103130F6E01FFEB1FFE6E91B512F80207
16F0020116E06E6C1580030FECFC00DB007F01E003E0C7FC634F79CD6E>I<B86C023FB5
12FEA8D8001F91C90001EBFC006D6E9238003FE0A26D6E4C5AA26D6E5F1BFF6D6E94C7FC
626D61701503A26E6D4B5AA26E6D4B5AA26E6D4B5AA26E6E5D1A3F6E6071147FA26E6E4A
5AA26E6E4990C8FCA26E6E495AA26F6D5C19076F5E71130FA26F6D495AA26F6E485AA26F
6E485AA26F02E05B19FF6F93C9FC18F1A26FECFBFEA270EBFFFCA2705CA2705CA2705CA3
705CA2705CA27091CAFCA2705BA2715AA2715AA2715A715A5F4E7CCC68>I<B890B700FC
91B612FCA8D8003F49C8001F01F0C80001EBFC006D739238003FE06F816D677070167F85
6D734C5A70806D9CC7FC70705D6D71604F6E1403826D4D60707114076E654F6E140F826E
4C607071141F6E654F6E143F7015CF6E047F607170147F6E05875F7101FF6E14FF1A036E
4B6F92C8FC05E0606E4B486C5E05F0EF80034F7E6E030704C05B05F818076F4A486D5D05
FCEFE00F4F7F6F021F04F05B05FE496D141F6F023F6005FFEFF83F4F7F6F027F04FC5B4E
486D147F6F63F5FEFF96C77E6F96B5C9FC4E806F62A24E806F624E817061A24E8170614E
817061A270496F5BA24E817061A27090C96C90CAFC4D82DC00FCEE00FC864E7CCC8F>I<
B8021FB612F0A8D8000702C00201EC80006D6E9126007FF8C7FC6D61704B5A6D6E4A5B6E
6D4A5B6E6D93C8FC6E6D4A5A4F5A6E6E131F6E6E495A6E6E495A6E6E495A6E6E485B626F
6D4890C9FC6F6D485A6FEBFF0F6FEC9FFC6FECBFF8F0FFF06F5D6F5D6F5D7091CAFCA270
5B707F708070807080A270804C804C804C805E4C8086DC7FE780DCFFC3804B01C1804B13
814B0100804B486D7F4B486D7F4C6D7F4B487F4B488203FF6E804A496D804A496D804A90
C8804A5A4B6F7F4A486F7F4A486F7F027F70804A486F80495B011F01F86F80B76C91B8FC
A8604D7CCC68>I<B86C023FB512FEA8D8001F91C90001EBFC006D6E9238003FE0A26D6E
4C5AA26D6E4C5AA26D6E4B90C7FCA26D6E5E1A036E6D5E1A07A26E6D4B5AA26E6D4B5AA2
6E6E4A5AA26E6E4A5AA26E6E5D1AFF6E6E92C8FC61A26E6E495AA26F6D495AA26F6D495A
A26F6D495AA26F02805B193F6F02C05B197FA26F6E485AA26F02F190C9FCA26FECFBFEA2
70EBFFFCA2705CA2705CA3705CA2705CA2705CA27091CAFCA2705BA2715AA3715AA2715A
A24D5AA24D5AA26017FF95CBFCD801F85CEA07FE261FFF80495A487F486D495AA24C5AB5
7E4C5AA24C5A4C5A16FF4A5C6C4A90CCFCED07FE4A485A6C49485A6C9038007FF09039FE
03FFE06CB65A6C92CDFC00015C6C14F8013F13C0D907FECEFC5F6F7CCC68>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmmi7 14.518 2
/Fi 2 99 df<ED3FE0913801FFFC020F9038FE01F0023F6D487E91397FF03F87903B01FF
800FCFFC903A03FE0003FF49487F49486D5B495A4948147F495A49485D48163F4890C812
7F5A495E120F4915FF121F60485A5E127F495EA25E12FF4993C7FCA25EA2495DA2040F14
3819785FA2041F14F819F05F007F153F047F1301003F03FF14E06D491403001F4A15C06D
D90FDF13076C6CD91F8F14806C6C90397F07FC0F2703FF03FE9038FE3F006C903AFFF803
FFFE6C6C49C65B011F01C06D5AD903FEC7EA0FE03D3679B44B>97
D<EB03FF0007B57E5A92C8FCA27EEA000F6D5AA2130FA25CA2131FA25CA2133FA25CA213
7FA25CA213FFA25CA25AA29138803FE0913881FFFC48018713FF029F148091393FE07FC0
91397F001FE04801FCEB0FF002F014F84AEB07FC5C4849EB03FE91C7FC5B4915FF121FA2
5BA2123FA25BA2007F5DA25BA25E12FF4915FEA2161F17FC5B17F8163F17F0167F17E016
FF17C04B1380007F16005D4B5A6C6C495A4B5A6C6C495A6C6CEB7FC06C6C48485A2603FE
0790C7FC6CB512FC6C14F0013F13C0D907FCC8FC305578D33D>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmmi8 16.592 2
/Fj 2 99 df<ED03FE92383FFFC092B538E00F8002039138F81FC0020F903903FC3FE091
3A1FF800FE7FDA7FE0EB7EFF4A487F4990C77E49488049485E010F81495A49488049485E
13FF5C485E484993C7FCA25A91C85A485F5B121F171F003F5F5BA2173F007F5F5BA2177F
60485AA217FF60F103E05B5E007FEFC0071AC0A25EF10F80003F4B13806D5C4CEC1F0000
1F5D6D5C000F03FD143E6C6CEB03F90003DA07F05C6CB4903A1FE07FC0FC6C9026C0FF80
EBE1F86DB5486CB45A6D01FC010F5B010F01F06D5B01010180010090C7FC433D7BBB4E>
97 D<EC07F090380FFFF80003B5FC5D5AA27ED800035B7FA35DA25BA25DA25BA292C9FC
A25BA25CA2131FA25CA2133FA25CA2137FA25CED03FE01FF90381FFFC0037F13F002E1B5
12FC9139E7FE07FE489039EFF001FF9126FFC000138092C7EA7FC04AEC3FE0485B4AEC1F
F05C4A15F8485B4A140F91C813FCA25AA249151FA2121FA25BA2003F163FA25BA2007F16
7F18F85BA217FF18F0485AA24C13E0A218C0495C18804C1300127F4C5A5F161F6C6C5D4C
5A4C5A001F4B5A6D495B000F4A90C7FC6C6C495A6C6C495A6C6CEB3FF03A00FF81FFE06D
B512806D49C8FC010F13F80101138036617BDF3F>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmbx12 24.888 22
/Fk 22 122 df[<EF7FFF041FB512FC93B77E030716F0031F16FC037F16FF4AB912C002
07DAF00714F04ADA8000804A01FCC7001F7F027F496E13FF91B500E0020380494A6E8049
4A6E804991C96C7F4B8249864949707F4B8249864949707FA290B5864B824888A24888A2
4B824888A24888A44888A4484A7080A54888A9B61B80B3AE6C1D00A96C646F5EA46C64A4
6C64A36C646F5EA26C64A26C64A26F5E6C646D98C7FC6F5E6D626F5E6D626D6D4C5B6F5E
6D6E92B55A6D626D6E4A5C6D02F002075C6E6D4A91C8FC6E01FE023F5B020F6D6C90B512
F86EDAF0075C020191B712C06E60033F4CC9FC030716F003001680041F02FCCAFCDC007F
90CBFC>97 137 119 262 116 48 D[<EF01F8EF07FC170F171F177FEE01FF1607161F93
B5FC1503153F0203B6FC49B7FCB9FCA615C3ECFC03EBFE00C8FCB3B3B3B3B3AE003FBC12
C0A9>82 135 111 262 116 I[<93381FFFF00303B612E0033F15FC4AB812C0020717F0
021F17FC027F17FF49BA12C0010719F049DA800F814901F8C715FE4901C0021F804948C8
00078149486F814801F00300814849708048018070804890CA6C806E70804813F002FC70
80486D70158080486E6F15C0817315E081B6836F19F0A3861DF8A56C5CA26C5CA26C5C6C
91CAFC6C5B000113F826007FE01AF090CCFC62A21DE0A297B6FC1DC0A24F1580A24F1500
64A24F5C64614F5C644F5C644F91C7FC96B55A4E5C634E5C4E5C4E5C634E49C8FC4E5B4E
5B95B55A4D14C0624D91C9FC4D13FC4D5B4D5B4D13C04D5B94B5CAFC4C13FC4C5B4C5B4C
49ED0FF84C13804C90C9FC4C5A4C48EE1FF04B5B4B13E04B5B4B5B4B90CAFCDB3FFC173F
4B4818E04B5A4A5B4A49177F4A90CBFC4A4818FF5D4A485F4A48053F13C04ABBFC91BCFC
5B5B5B5B491B805B5B90BDFC5A5A5A5A481C005A5ABEFCA464A4>93
135 117 262 116 I[<933807FFFE93B612F80307EDFF80033F16F092B812FE0203717E
020F18E0023F844A9026FE003F14FC91B500C0010780010301FCC70001804901F06E6C14
C04901C06F8092C97E4948708049488590267FFFC06F808190B500F8846F816F845A81A2
486F1880A285A282A24C5CA37E1D0093C8FC7E6D5B6D494B5C6D5B6D5B010301C060D900
7EC95A91CA5DA24F5C6461644F5C96B6C7FC634E5C4E5C4E14E04E5C063F5C95B548C8FC
050314F80407B612E00307B712804B4BC9FC19F885F1FFC01AF86F16FF92C86C14C00607
14F0060114FC7280073F6D7E738073807314F888738085881D807315C0A21DE0861DF0A2
1DF8A27414FCA4D93FF01AFEEBFFFC000313FF4880488048804880A24880A2B67EA21DFC
A45014F8A34B19F07E97B612E05D6C4A19C0A24B4B15806C5C6C49C948150002F84C5C6C
01C0616C6D4C5C6C01F84C5C6C01FE4C5C6D6C6C4B5C6D01F04AB65A6D01FF020792C7FC
6D02F8017F14FC010391B85A010019E0023F1880020F4DC8FC020117F0DA003F16800303
03F8C9FCDB000F49CAFC>95 137 118 262 116 I[<0307BB12F0A992C96C02F0C7FCB3
B3B3B3B3A4EB0FC0EB7FF83801FFFE487F4880488048804880A24880A2B67EA36496B6FC
A364A26C4A4A5DA24B95C8FC6C5F4B5F6C4A4A5C4B4A5C6C91C8FC6C01FC4B5C6C01F04B
5C6C6D4B5C6C01FE4AB6C9FC90267FFFE001075C6D01FE013F14F8010F90B85A6D18C001
0195CAFCD9003F16F8020F16C0020003FCCBFC030791CCFC>100
144 123 269 120 74 D[<B900E04EB912F884848484A2848585C700037094C7000302FC
C7FC73DF000F90C8FC7C5A85858585A27081708170817081868270817081708187837181
718171817181A2718171817181728188847281728172817281A272817281738173818985
738173817381898573817481748174818A867481748174818A8675817581758175818B87
7581758175818C887681768176817681A276817681768177158021C0897715E07715F077
15F87715FCA27715FE7715FF7815877815C722E78A7815F77815FF8AA28A8A8B8B8BA28B
8B8B8BA28B8C8C8C8CA28C8C8C8CA28D8D8D8D8DA24A6D8849B500FE88B900FC86227FA2
223F221F220F2207A27C5A>165 142 120 269 182 78 D[<93260FFFF8163E4BB600E0
153F031F03FE5D037FDBFFC05C0203B800F05B020F05FC5B4A05FF5B027FF0C00F91B526
FE000FECF01F010302C0D9007F6D5A4991C800076D5A4901FC030090B6FC4901F0163F49
49160F4901808290B5170192CBFC4849844849181F87484984A2484984874886A2484985
88A24887A388A2B58680A36E85A280A26E8580A2818103F0725A6C6E96C7FC15FE8116E0
6C15FEEEFFE017FF6C17F0F0FF806C18F8F1FFC06C19FCF2FF806C1AE01BF86C1AFE6C74
7E6D1AE0886D866D866D1AFF6D876D87010087806E86020F86020386020086153F030F85
1501DB001F19801601DC000F18C0EF007F060717E0F0003F070316F0F1003F1A0F080315
F81A00871B1F877514FCA287007F86486C85A288A388A36D86A31EF87FA37F1EF0A26D62
6D1CE0A27F6D5013C0A26E1B806E96B5FC6E1B0002F8606E4E5B6E626E6C5F03E04D5B03
F84D5B03FE057F5BDBFFC093B55A04F803035C496CD9FF80021F91C7FCD9FC1F02FF49B5
5AD9F80792B75A496C19F049C66149011F18804901074DC8FC90C817F848031F16C04803
0003FCC9FC007C04011480>102 146 115 271 129 83 D<93B512FC037FECFFF00207B8
FC023F17E091B912F84918FE0107727E499126C0007F14E04901E0C7000F80496D020380
496D020014FE6F6F7F90B570806F6F8085486E6F807380A27380A28885886C5CA26D4982
886D5B6D5B010713C0010190CAFC90CCFCA90603B7FC050FB8FC0403B9FC167F0307BAFC
153F4AB7EA807F020FEDE000023F02FCC7FC91B612E0010392C8FC4914FC011F14F04914
C0495C90B548C9FC485C485C485C485C5A5D485CA24891CAFCA3B6FC5CA397B6FCA46180
6C60F107EF6C6E150F6F16CF6C183F6FDB7F8F806C6EDBFF0F14E06C02FCDA03FE15FE6C
6E91260FFC0791B5FC6C6E6CD93FF817806C923AF803FFF003013F91B6487E010FEF8000
010394C77E010004FC141F021F03F0140702010380DA007F1400DA000701F8CDFC695F79
DD71>97 D<94387FFFF0041FB612E093B712FE0307707E031F17F092B97E4A18FE020784
021F9126F8000F14804A0280010014C04A49C74814E049B500F85C494A17F0494A5C495C
494A4A14F84991C8FC5D495B90B5FC5D5A485C7314F05A4B6F14E05A7314C0487214804B
93383FFE00F20FF84896C8FCA4485CA5B6FCB07EA281A37EA36C80A37E6F18FE6CF201FF
A26C6E5F1CFE6C801B076C6EEF0FFC6D7F70EE1FF86DF13FF06D6E167F6D6EEEFFE06D02
F84B13C06D6E5D6D02FF030F13806D03C0023F1300023F02F0903801FFFC6E9126FF801F
5B020792B65A6E18C0020060033F4CC7FC030716F8030016C0041F4AC8FCDC007F13C058
5F78DD67>99 D[<F53FE098B6FC4FB7FCA996C77E1B0FA287B3B294383FFF80040FB512
FC93B71280030716E0031F16F8037F16FE4AB9128702074AC66C13C7021F02E0010713F7
4A91C890B6FC4A01FC153F49B548150F4902E081494A81494A814991CA7E495B87494983
90B548835A5D5AA2485CA25A5D5AA35AA25D5AA5B6FCB07EA57E81A37EA27EA2817EA26C
80A26C626C6E5F636D7F6D6D94B6FC6D606D6D1607705D6D6E4B81010102F0157F6D6E92
B712FE6E01FE020301EF91B512806E6D6C011F13CF020FDAF801B5120F020391B612FE6E
17F86E6C16E0030F16800301EDFC00DB003F14E0040049C74AC8FC>113
144 120 270 129 I<94387FFFC0040FB6FC93B712E0030716FC031F16FF037F17C04AB9
12F00207DAF80380021F912680003F13FE4A49C7000F7F4A01F802038049B5486E804902
C06E6C7F494A6F7F4991C9FC49727F4949707F4B84498490B548707F5A4B198048855D48
1CC086481CE05D5A871DF05AA25D5AA21DF887A2B6FCA392BBFCA51DF00380CDFCA77EA4
817EA37EA2817EA26CF307F06FF00FF87E816C1B1F6F19F06C1B3F6D6DF07FE06D7FF4FF
C06D6E4C13806D6E5E6D02F04C13006D6EEE1FFE6D6E4C5A6D6C01FFEEFFF86E02E00203
5B6E02FC021F5B02079126FFC003B55A6E92B7C7FC020060033F17F8030F17E003011780
DB003F03FCC8FC040315C0DC000F01F8C9FC5D5F7ADD6A>I[<ED1FF0017FB5FCB7FCA9EA
003F1307A27FB3B2963803FFFC073FEBFFE096B612F8060715FE061F6F7E4E16E095B87E
4DD9FC03804DD9C000804D48C76C7FDD0FF880DD1FE0824D486E804D5A05FEC881DCF1FC
815F04F385EEF7F04D81EEFFC0A24D84A294C9FCA25EA35EA45EB3B3AFB9D8E001B912C0
A9>114 143 119 270 129 104 D[<EC3FC0ECFFF0010313FC497F497F498049804980A2
90B67EA24881A86C5DA26D5CA26D5C6D5C6D91C8FC6D5B6D5B010013F0EC3FC091CAFCB3
A3ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B3B3B0B91280A9>49
144 119 271 65 I[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B3B3B3B3B3ACB912C0
A9>50 143 119 270 65 108 D<DB3FE0913803FFFC017FB5033FEBFFE0B792B612F806
0715FE061F6F7E4E16E095B87E4DD9FC03804DD9C000804D48C76C7FDD0FF880D8003FDB
1FE08201074B486E804D5A6D03FEC881DCE1FC815F04E385EEE7F04D81EEEFC0A2DCFF80
84A294C9FCA25EA35EA45EB3B3AFB9D8E001B912C0A9725D77DC81>110
D<94381FFFF00407B612C0047F15FC0303B87E030F17E0037F17FC4ABAFC4A9126FC007F
80020F02C0010714E04A49C880027F01F8033F13FC91B5486F7F4902C003077F494A6F80
4991C96C80494970804949717F49874949717FA290B548717F48884B83481D80A2481DC0
4B83481DE0A2481DF0A3484A7114F8A4481DFCA5B61BFEAF6C1DFCA56C6E4D14F8A36C1D
F0A36C1DE06F5F6C1DC0A26C6E4D1480A26C1D006F5F6C646D6D4D5B6F94B5FC6D636D6D
4C5C6D6E4B5C6D6E4B5C6D02F0031F5C6D6E4B91C7FC6D6C01FE92B512FC6ED9FFC00107
5C6E02FC017F5C020791B812C0020196C8FC6E6C17FC031F17F003031780DB007F03FCC9
FC040715C0DC001F01F0CAFC675F7ADD74>I<DB7FC049B47E90B6021F13F8B7027F13FE
4DB67E4D15E04D814D814D01077F94263FF00F7F94387FC01F4D48487FD8003F16000107
DAC1FE491480EEC3FC6D5DEEC7F05F16CF5F16DF4D6D1400A204FFC76C5BA2735B4C6E5B
735B070013C04C92C8FCA45EA65EB3B3AAB912FCA9515D79DC5F>114
D<92261FFFF814F80203B638C001FC023FEDFC0791B8121F010317FF130F013F9038F800
1F4990C8FCD9FFF8153F4801E0150F484915034849814890CAFC197F4848173F191F485A
A2007F180FA31907487EA27FA28002E0705A6E93C8FC14FC14FF15F06CECFF8016FCEEFF
F06CEEFF8018F06C17FE727E6C18E0856C18FC6C846C727E6C856D84011F846D84130301
0084023F83140F020183EC001FDB007F16801603DC000F15C01700183F060F14E0007F17
03486C82727E857F85857FA2857F1BC07FA27F1B806D5F7F1B006E5E6E5F6E163F6E4C5A
02FC4C5A6E03035B6E6C4A5B03F0023F5B03FF0107B55A01F991B7C7FCD9F07F16FCD9E0
1F16F0D9800716C0D9000193C8FC48D9003F14F8007C020349C9FC4B5F78DD5C>I[<ED03
FEA81507A5150FA4151FA3153FA2157FA215FFA25CA25C5CA25C5C5C5C91B5FC13035B13
1F017F91B712F00007BAFCBBFCA7C74AC9FCB3B3AAF101FFB1616E17FE82A219076E17FC
836EEE0FF871131F6E6EEB3FF071137F6E6EEBFFE06EDAFF0313C06E92B512806E170003
3F5D6F5D03075D030015E0041F1480040001FCC7FC>72 132 124
258 90 I<DB0FF8F01FF0017FB594B6FCB74BB7FCA9D8003F94C77E0107190FA26D85B3
B3B063A463A263A27F6398B6FCA26DF001FB7015036EEF07F3E00FE3806E6D151FE07FC3
14FF6E6D6CDAFF83EDFFC06E6E010313036E02FCEB3FFE6E91B612FC020017F86F16E003
1F16800303EDFE00DB007F14F8040102C093C8FC725E77DC81>I<B800FE017FB700F802
3FB612F8A9D8000F02F0C8000702C0C9003FEBF800100313806D6E6F7390C7FC775E6D69
706F6E1607A26D6E6F6277160F6D6970706D161FA26E6E6F61516D163F6E687192B6167F
A26E68714A6F15FF6E68714A608A6E9DC8FC714A6F5C6E6771DA0FFD17078A6E06F86071
021F6F140F6E67714A486C161F8A6F4D6C5F72017F6F143F6F667249486C167F8A6F4D6C
5F72487113FFA26F02F04A6C4B5B4F17C06F4C6D94C9FCDEF807715AA26F02FC496D4B5A
070F17F06F4C6D5EDEFE1FEFF80FA26F02FF496E4A5A073F17FC704B6E5D07FFEFFE3FA2
704B6E4A5A1FFF704B6E5D20FFA27092C86C5DA2704A6F92CAFCA3704A6F5CA2704A6F5C
A3704A705BA27149705BA37149705BA27149705BA37190CA6C5BA271487190CBFC714871
5A9D5D7BDBA8>119 D<007FB800C04AB71280A9D800034ACA000791C7FC6D080013F077
5A6D6E4E5AA26E6E6064836E4F90C8FC836E4F5A836E4F5AA26E6E4C5AA26E6E5F1C3F6E
6E5F1C7F836E4F5A846F4D5B846F4D90C9FCA26F6E4A5AA26F6E5D1B0F846F4D5A846F4D
5A846F4D5AA26F6E4A5AA2706E5C627002C091CAFC6219E0704B5A19F0704B5AA2706E48
5AA2706E485AA27002FE5B1A7F19FF704B5AA2715DA27192CBFCA2715CA2715CA3715CA2
715CA2715CA2715CA2725BA27290CCFCA3725AA2725AA24E5AA24E5AA261187FA24E5AA2
4D5B13FE2603FF804A90CDFC000F13E0486D4A5A487F486D4A5AA260B56C141F4D5AA24D
5A17FF604C5B4A4990CEFC6C5D4C5A6C49EB3FFC4A495A6C4948485A9026FE80075B270F
FFC03F5B6C90B6CFFC6C5D6C15F86C6C5C011F14C0010749D0FC9038007FE071857CDB7B
>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmbx12 29.8656 22
/Fl 22 120 df<EB03FC90381FFF80017F13E048B512F8488048804880481580A24815C0
A24815E0A3B712F0A86C15E0A36C15C0A26C1580A26C15006C5C6C5C6C5C6C6C13E0011F
1380D903FCC7FC90C9FCB3B3A2EB03FC90381FFF80017F13E048B512F848804880488048
1580A24815C0A24815E0A3B712F0A86C15E0A36C15C0A26C1580A26C15006C5C6C5C6C5C
6C6C13E0011F1380D903FCC7FC246E6CED4D>58 D[<F51FF8F57FFEA29AB5FCA25280A2
5280A35280A25280A35280A25280A35280A299B7FCA35182A25182A35182A25182A35182
A25182A35182A298B9FC1CFB1CF350841CF15001E1821CE064506E81A250018082891C00
506E81A25048838950488389A2504883894F498489A24F4984894F49848AA24F49848A4F
90C8828AA24F48858A4F48858AA24F48858A4E49868AA24E49868A4E49868BA24E49868B
4E90CA828B61063F888B4E48878B6106FF7281A24D49888B614D7382A24D49888C4D4988
8C96BEFC4D8AA24D8AA34D8AA294C1FCA34C01F0CC0003828C4C498A8CA24C498A8D4C49
8A8DA24C90CE828D4C488B8DA24C488B8D4C488B8DA24B498C8D4B498C8D5F4B8E8E4B49
8C8E94D0FC4B7881A24B488D8E5E037F78814AB5FC91B600FE8CBA00F04DBDFCAA9126C0
00010CC0C71201>192 173 119 300 211 65 D[<C51280A4A112C0A7C8003F03E0C912
01F60003E5003F15E0200720017A7E211F21078D8D7B14F08E8E8E8EA28EA28EA112F88E
A28EA2237FA3A112FC233FA4231FA3A112FEA2230FA2F67FF0A5FB07FFA4A0C7FCA21EFF
A565A365A2656565656552B5FC1C0F99B6FC96B9FCAB07E0C7FC1C0F1C01767E89898989
89A289A389A51E7FAB9BCCFCB3B3A3BE12F0AA03E0C8120F>152
169 118 296 175 70 D[<C012FCF7FFFCF8FFE021FEF9FFC022F822FEFAFFC023F08F23
FEC8003F03C0C90007707EE4001F820D0116F0E5003F810E0F810E03817A817A6C817B81
7B817B817B818DA17F7B81A27B81A2A114808EA114C0A3A114E0A28EA114F0A5A114F8AC
A114F0A5A114E06AA2A114C0A2A11480A29FB71200A2A15B69A15B575D69A15B575D575D
575D5792C7FC56B65A565D0E0F5D0E3F15E055B75A0D1F93C8FC0C07B75A96BD12F823E0
238058C9FC22F022800FF8CAFC21800EE0CBFC07E0D2FCB3B3B3ABBD12F8AA03E0C8123F
>165 170 118 297 191 80 D[<0507B5EF03E04CB600FC4C7E041FDBFFC0150F93B800
F8151F030305FF153F031F06C0147F037F06F014FF4ABA00FC5B4A07FF5B020FF2C0074A
DB000315E0027F02E0D9000FECF80F91B6C96E5A4902F8041F6D5A4902E004036D5A494A
040091B5FC4991CB123F494984494918074B844949180090B5864B85484A8548884B8548
88A24891CD7E894889A24A875A8AA28A5A8AA38AB6FCA28AA281A26F86A281A2816F1B7F
8181816C8104E0745A7097C8FC16FC6C15FF17C017FC6CEEFFC018FEF0FFE06C18FF1AF0
6CF1FF801BFC6CF2FFC01CFC6CF3FF806C1CE01DF86D1BFE6D757E1EE06D886D1CFC6D88
6D886D1DC06D896E886E88020F886E8814016E88033F88030F880303881500043F870407
87EE007F050386EF003F060185F0001F0700841A0FE0007F17801B07F3007F0A1F16C01C
071C01880B3F15E0898989897715F0EA3FC0486C8700FF89A28AA28AA38A7FA38A21E07F
A47F21C07FA27F54148080A26E1E006E6368806E515B806E515B806F97B55A15E06F4F5C
03FC4F5C6F4F5C6F6C6004E04E91C7FC04FC067F5B04FF95B55A05F004035C02C702FE04
0F5C0283DAFFF0037F5C0200DBFFE0010FB65A496D92B9C8FC031F624901071AF8490101
62496D6C19C049020F96C9FC49020318FC49DA003F17E090C9000394CAFC48DC001F15F0
007CDD003F01FCCBFC>124 176 113 300 155 83 D[<B500FE030FB6070FB56C903803
FFFC91BB99B7FCAAC700010480D04BC7FC730B011480A16D6C48C8FC6E7067A26F585A85
6F575B85A15B6F6F67A26F575B856F575B85A15B6F709BC9FCA26F70525AA26F575A8670
565A86A2706F515BA270555B8670555B86A15A706F65A270705090CAFCA270555A877055
5A87A2716F505AA271535B8771535B876B716F63A271535B87715390CBFC886B717061A2
71704E5AA272525A8872515B88A2726F4D5BA272515B8872515B886A727095CCFCA27270
4C5AA272515A8973505A89A2736F4B5BA2734F5B89734F5B8969736F5FA2734F90CDFC8A
734F5A8A217F73705DA2746F4A5AA2744D5B8A744D5B8AA2746F495BA2744D5B8A744D90
CEFC1F80687404C05BA27470485AA2754C5A8B1FF17503F95BA27592B55AA2755FA2755F
A37594CFFCA2755EA2755EA3765DA2765DA2765DA2765DA3765DA27692D0FCA2765CA376
5CA2775BA2775BA3775BA2775B0B0390D1FC>198 172 122 297
211 86 D<94B6FC93B712FE031FEEFFE092B912FE0203727E020F19F0023F19FC91BCFC
499226C0001F814902E0C7000115E0494A6E6C80496E031F14FC70030780497280706F81
496E6F817580498570857580878A8A878AA26D4A828BA26D5C876D4A866D5C6D5C6D5C6D
6C48CAFCEC1FF891CCFCAA98B7FC073FB8FC063FB9FC050FBAFC94BBFC160F93BCFC0307
1781031FEE800192B7EAF000020393C7FC020F15F0023F158091B648C8FC4915F8010715
E0491580494AC9FC495C495C90B65A485D485D485D5A93CAFC485CA2485CA2485CA4B65A
A363A463A26F5F7E63816CF23FBF6F177F6C6EDDFF3F80F201FE6C6FDB03FC15F86C6F03
0F16FE6C03F0DB1FF8EDFFE06C6FDB7FF0EEFFFC6C03FE4A48487E6D6E6C010F496C16FE
6DDBF801B51280010F92B648487E01034E7F010006F07F023F05C06D7E020794C8121F02
0004FC030315FC030703E0ED003FDB000F01FCCEFC7F7178EF88>97
D[<F707FF9AB7FC0907B8FCAB98C7FC1D0F89A289B3B3A895380FFFF80507B612C0057F
15FC0403B8FC041F17E093B912F8030318FE030F18FF033FDBC00714C34B02F8C7003F13
E34AB600C0020713FB4A92C8000190B7FC020F02FC6F7E4A02F0161F4A4A824A02808291
B6CA1201494A834987494A84494A84494A84A2494A845B90B65AA2485DA25A93CCFC5AA2
5A5DA25AA35AA25D5AA6B6FCB17EA57EA281A27EA37EA2817EA27E827EA26C6F607F656D
6E606D6E60A26D6E95B7FC6D6E5F6D1A076D6E5F6D6E4D826E6E5E6E02E093B87E6E6E03
0317FC020702FC030F01F792B512806E02FF033F13C7020003E049B512876F02FE013FEB
FE07031F91B712FC030718F0030118C06F6C1700040F16FC040116E0DC001F4AC7FCDD00
7F01C005E0C8FC>137 173 119 299 155 100 D<95383FFFF0050FB612C04CB712FC04
0FEEFF80047F17F04BB912FC030718FF031F19C0037FDAFC00814AB600C0010F14F84A92
C70003804A02FC020080021F02F06F7F4A4A031F804A02806F8091B6C96C80494A708049
4A82494A85497380494A838A494A8349884C1A8090B684485D7614C05A93CB15E05A8848
1EF05DA248871FF8A25AA35D5A7614FCA4B6FCA392BDFCA51FF8A203FCCFFCA87EA481A2
7EA37EA2817EA36C6FF10FF8A26CF51FFC826C1D3F7E70F17FF87F70F1FFF07F6D6E4E13
E06D6E60704E13C06D5113806D6E606D03C04D13006D6F4D5A6E6E4C485A6E02FC4C5B6E
6E040F5B02076E6C033F5B6E03F092B55A6E03FE02075C6E6CDAFFF090B6C7FC031F92B7
12FC030761030119E06F6C1880040F05FCC8FC040117F0DC003F1680050303F8C9FCDD00
0749CAFC6E7178EF7F>I<F77FF09B3807FFFC94261FFFFE043F13FF0407B600F892B612
80047FDBFF80010315C00303B800F0010F15E0030F05FC133F033F05FF4915F092BA00C0
B500CF13F8020307F3EBF81F020FDB003F91B5EAC03F4A02F00103040014FC4A02C00100
15F84A91C8003F5C49B500FC030F4A5B494A6F6E7F494A6F80A2494A6F6E15F849757F49
4A6F6E15F08B494A706E6C13E079138090B69739C000FE009DC7FC488993CA7EA24889A4
4889AB6C65A46C65A2705E6C65A26D64A26D6E93B6C9FCA26D6E4B5C6D636D6E4B5CA26D
6E4B5C6D6E4B5C6D6C01FF033F14806E02C091B6CAFC05F001035C4A02FF013F5C91BB12
F0494819C0033F95CBFC902603FC0F17FC030317F04948C66C1680040703F8CCFC010FDA
001F49CDFC94D0FC131FA3133FA380A38080A2818115F081EDFF8093B812FEF3FFFE6DF2
FFF01DFF1EC06D1CF81EFE6D767E1FE06D891FFC6D896D896E898C6E8980020789023F89
49BFFC01078A131F498A90B6CA12074802F8DD0007814802E0F0007F480280190F4891CD
000115804849864A1B3F48894A874820C08AA2B55A8AA76C6D511480A36C6D511400A26C
6D515B6E636C6E505BA26C02E04FB55A6C6E4F5C6C6E4F5C6C02FE071F5C6D6D6C067F5C
6D02E04DB6C7FC010F02F8050714FC6D02FF053F5C010103F80307B612E06D6CDAFFE049
B71280021F92B948C8FC02071BF802011BE0DA003F97C9FC030719F8DB007F1880040105
E0CAFCDC000103E0CBFC7EA378F08B>103 D[<EC01FE91380FFFC0023F13F091B512FC49
80498049814981A24981A24981A24981AA6D5DA26D5DA26D5DA26D5D6D92C8FC6D5C6D5C
023F13F0020F13C0DA01FEC9FC91CBFCB3A8EEFFE0011FB6FC007FB7FCABEA000F13017F
A280B3B3B3B3ABBA12C0AA02E0C7FC>58 173 118 300 77 105
D[<EEFFE0011FB6FCB8FCABEA000F13017FA280B3B3A999B500E0EB0FFE9BB6FCAA0A07
03E0C7FC0A0002F8C8FC7713E09AB55A5291C9FC525B0A0F5B525B525B5213C051B55A51
91CAFC515B5113F8515B097F5B98B55A505C5049CBFC080F5B505B505B5013C04FB55A4F
91CCFC4F5B4F13F84F5B077F5B96B55A604E80060F80604E804E8095B67E05E38117E705
EF8294B87E88A2888806FD8118F84E6C804E6C800680824E7E4D6D814D6D8105F06D814D
834D7F738174808986748174818A86748174818A867580758075818B87758175818B8775
8176808B88768176817681A276818C0A0F15FFBA00E00103B912F8AA02E0C79638C00003
>133 172 120 299 147 107 D[<EEFFE0011FB6FCB8FCABEA000F13017FA280B3B3B3B3
B3B3B3B2BA12F0AA02E0C77E>60 172 118 299 77 I<922601FFC092260FFFF896387F
FFC0013FB64BB600E0050FB6FCB8030F03FC057F15E0083F03FF4CB712F84FB800C0030F
16FE4F05F04B707E070F71037F83073F05FE4AB912F04FD9E00F6E4ADA007F809627FFFC
00016F4901E0010F80060301E06D6F011F90C76C804E01806E6ED93FFC6E804E48C86CDC
7FF080D8000FDC1FF86F6ED9FFC06E8101014C48724849846D4C486F4B90C97E078006FC
01FC856E4BC94C5ADDC1FE704B4882DDC3FC734848854E63DDC7F0505A05CFE0FF7F864E
98CAFCDDDFC07003FE83A2DDFF8062A18495CA5EA24D63A24D63A34D63A54D63B3B3B3A6
BA00F80107BA00C0013FB912FEAA02F0C76C952680000306FCC7121FD76F76EEE8>I<92
2601FFC092380FFFF8013FB64BB612E0B8030F15FC083F15FF4FB812C04F17F0070F8307
3F17FE4FD9E00F809627FFFC000181060301E06D814E01806E804E48C87ED8000FDC1FF8
6F8001014C48846D4C48810780846E4BC9FCDDC1FE82DDC3FC8560EFC7F005CF8660DDDF
C082A2EFFF808D95CAFCA25FA25FA35FA55FB3B3B3A6BA00F80107BA12C0AA02F0C76C95
388000038A6F76EE9B>I<95380FFFFC0507B612F8057FEDFF800403B812F0041F17FE93
BA12C0030319F0030F19FC033F9126FE001F14FF4B02E00101814AB6C8003F14E04A02FC
030F80020F02F0030314FC4A02C00300804A4A707F4A91CA6C8091B5487180494A718049
4A7180494A7180494A718049894C834989494A7280A290B68893CC7E488B488BA2484A73
80A3488BA2488BA24B85A2488BA4482080A6B61EC0B06C2080A56C20006F61A36C67A36C
67A26F616C67A26C6770606C67A26C6F95B65A6D66705F6D9BC7FC6D6E4D5CA26D6E4D5C
6D6E4D5C6D6E4D5C6D6E4D5C6D6F4C5C6E6E93B65A6E02F0030392C8FC020F02FC030F14
FC6E02FF033F5C6E03E049B65A020003FE011F15C0033F91B9C9FC6F61030719F8030019
C0043F95CAFC040717F8DC007F1680050703F8CBFCDD000F01FCCCFC7A7178EF8B>I<DC
FFE092B57E011FB6033F14FEB80203B712E0071F16FC077F16FF0603B912E0060F18F806
3F18FE4E8405E1B526FC007F15C005E302C001078105EF01FCC815F894B500F06F80D800
0F05C0031F80010194C96C806D04FC0403814E70816E03E070814E864E718095CB6C804D
72805F4D72804D888A8E8A8E8A8EA27881A37980A38E8BA38EA48B2380B12300A267A46A
A2676AA36A9CB6FCA26A666AA2545DA2545DA25492C7FC7163714E5C716069714E5C7294
B65A724C5D724C5D724C92C8FC06FC4C5C724C5C726C037F5C07E04AB612E005F701F802
075D05F101FF021F92C9FC05F0DAF001B65A063F90B812F87218E006071880060105FCCA
FC726C16E0070F93CBFC070115F0DF000F01F8CCFC97CFFCB3B2BA12F8AA02F0C77E899F
78EE9B>I<4BB46CEC3FFC013FB64AB512C0B8020714F8071F14FE077F6E7E4EB77E4E16
F04E824ED9E03F7F4EEB007FDE3FFC90B57E95267FF0018019C0D8000F4C484815800101
038113006D4C4915C0EF83FC6EEC87F8A2EF8FF060179F60A2DDBF806D1580A205FFC76C
1500A2745C4D6F5B755B755B4D030713C0090190C7FC98C9FC5FA55FA65FB3B3B2BBFCAA
02E0C7123F626F78EE72>114 D<93263FFFFCEC03E0031FB600E0EB0FF092B700FE133F
02079338FF807F023FEFE1FF91BBFC1303499138F0000F011F01FCC8FC4901E0151F4901
8015034948C97E4849707E4849834849834A8348855C48854A835AA24885A4B56C187FA3
808080806E725A6E6C94C8FC15E015FCEDFF806C15F8EEFFE0EFFF806C17FCF0FFE06C18
FCF1FF806C19F01AFC6C19FF6C866C1AE06C866D19FC6D856D856D860103866D866D6C85
021F851407020185DA003F841507DB007F831601DC000F1780EF003F1801DE001F15C019
071901736C14E0D83FC0181F486C8400FF85866D8486A2877FA2877F1DC07FA27F1D8080
636E1A00806E4E5AA26E616E5F6E4D5B6E6C4C5B6F5E6F4C5B03F8047F5B03FF4BB55A04
E0021F91C7FC02BF01FE0103B512FC021F90B85AD9FE0718E0D9F8036049C695C8FC01C0
013F16F849010716C090C84BC9FC007C030791CAFC5B7177EF6E>I<DC7FF0963803FF80
011FB695B7FCB80407B8FCABD8000F96C77E01011B0F6D87A26E86B3B3B3A765A465A365
A2658065A29AB7FC6E617117FD6E1903F407F96EDF0FF18171EE1FE16E073F8271DCFFC1
15FE6E6E4B018192B512C06E6F020713016F02F0EC3FFE6F02FF903803FFFC030F92B612
F86F18E0030118C06F6C1700041F16FC040316F0DC003F1580050002F8C703F8C8FC8A70
76EE9B>117 D<B56C0103B56C922607FFF0EB3FFC91B895B6FCAAC703F0CB000FECE000
71060049C7FC6EF47FF8836E525A836E515BA271606E65846E515B846E5190C8FC846E51
5AA26E6F4D5AA272177F6F63846F505A846F4F5B846F4F5BA26F6F4B5BA2735D6F98C9FC
856F4F5A856F4F5A85704E5AA2706E4B5AA2735C706185704D5B86704D5B86704D90CAFC
A2706F495AA274133F706086714C5A86714C5A86714B5BA2716E485BA21B837103875B1B
C77103CF90CBFC1BEF71EDFFFEA2715EA3725DA2725DA2725DA2725DA2725DA37292CCFC
A2725CA2725CA2735BA2735BA3735BA2735B735B7390CDFC866F7AED93>I<B56C0107B5
278007FFF049B500C091261FFFE0EB3FFC91B892B894B6FCAAD8000103E0C9000F02F0CA
000FECF0006D6F9C26007FFEC7FC766E725A6EA15A7173187F886E6E565A76806EA15A71
735F886E6E555B77806EA15A72735E9AB6FC6E6F5490C8FC8C6E4F637273161F646E6F54
5A8C646F6E734C5A646F6E545A8C646F6E734B5BF43FFC6F565B724C6C801C7F6F6F734A
5B52487E6F9FC9FC734B6C6E5C636F6F525A51496C806F69734B6C6E143F63706E525A51
496C807068734A6D6E14FF1B1F706E515B51486D807068734A6E6E5A1B7F700380505B51
486E14C0709DCAFC74735A08C149807003E1505A08E3496E14F0706708F3F1F83F08F749
807191B54F5A99C86C14FC7166FAFEFF51817199B55A51817166A2518271665182A2719B
CBFC518271655182A271655182726498CA7EA27264508372645083A27264508472645084
A27299CCFC7249725A720180F007FCBE6F7BEDC9>I E
%EndDVIPSBitmapFont
/Fm 166[138 2[149 161 127 108 138 2[162 172 195 3[70
1[158 115 126 160 146 126 161 65[{TeXBase1Encoding ReEncodeFont}17
206.625 /Palatino-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 @landscape
%%EndSetup
%%Page: 0 1
0 0 bop 286 -196 4720 18 v 5005 369 a
 currentpoint currentpoint translate 0.42818 0.42818 scale neg exch
neg exch translate
 5005 369 a Black
5177 -15 a
 currentpoint currentpoint translate 0.16673 0.16673 scale neg exch
neg exch translate
 5177 -15 a @beginspecial -153 @llx -3 @lly
153 @urx 372 @ury 3060 @rwi @setspecial
%%BeginDocument: CUarmsC.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Arms of University of Cambridge
%%Creator: Philip Hazel, July 1986
%%CreationDate: 12:00:00 31-07-86
%%BoundingBox: -153 -3 153 372
%%EndComments

/cuarmsdict 50 dict def cuarmsdict begin

/mtrx matrix def
/lionfix{filled{gsave lioncolour fill grestore}if stroke}def
/toefix{gsave lioncolour fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db lioneyecolour fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/arg exch def gsave 0.05 0.05 scale
  arg type /booleantype eq { /arg arg {1} {0} ifelse def} if

  arg 3 eq
    {
    % colour definitions
    /erminecolour	{ 0 0 0 setrgbcolor } def
    /lioncolour		{ 1 .9 0 setrgbcolor } def
    /lioneyecolour	{ 1 0 0 setrgbcolor } def
    /bgcolour		{ 1 0 0 setrgbcolor } def
    /crosscolour	{ 1 1 1 setrgbcolor } def
    /bookcolour		{ 1 0 0 setrgbcolor } def
    /bktrimcolour 	{ 1 .9 0 setrgbcolor } def
    /filled		true def
    }
    {
    /erminecolour	{ 0 setgray } def
    /lioncolour		{ 1 setgray } def
    /lioneyecolour	{ 0 setgray } def
    /bgcolour		{ 0 setgray } def
    /crosscolour	{ 1 setgray } def
    /bookcolour		{ 0 setgray } def
    /bktrimcolour 	{ 1 setgray } def
    /filled		arg 1 eq def
    }
    ifelse


  1 1 2
  {pop   %repeat for symmetry

  %outline
  bgcolour
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave crosscolour fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc erminecolour fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc bookcolour fill

  bktrimcolour
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end


%%EndProlog

5 5 scale
cuarmsdict begin 3 cuarms end

%%EndDocument
 @endspecial 5177 -15 a
 currentpoint currentpoint translate 1 0.16673 div 1 0.16673 div scale
neg exch neg exch translate
 5177 -15 a 5030 177 a
 currentpoint currentpoint translate 0.74092 0.74092 scale neg exch
neg exch translate
 5030 177
a Fm(UNIVERSITY)51 b(OF)5030 177 y
 currentpoint currentpoint translate 1 0.74092 div 1 0.74092 div scale
neg exch neg exch translate
 5030 177 a 5029 369
a
 currentpoint currentpoint translate 0.91832 0.91832 scale neg exch
neg exch translate
 5029 369 a Fm(CAMBRIDGE)5029 369 y
 currentpoint currentpoint translate 1 0.91832 div 1 0.91832 div scale
neg exch neg exch translate
 5029 369 a Black
5005 369 a
 currentpoint currentpoint translate 1 0.42818 div 1 0.42818 div scale
neg exch neg exch translate
 5005 369 a Black Black 845 605 a Fl(V)-23
b(algrind:)125 b(A)93 b(Program)g(Sup)8 b(ervision)2230
971 y(F)-23 b(ramew)-8 b(ork)820 1403 y Fk(Nic)i(holas)77
b(Nethercote)2879 1328 y Fj(a)3044 1403 y Fk(and)g(Julian)g(Sew)-6
b(ard)4924 1328 y Fj(b)903 1682 y Fi(a)987 1744 y Fh(Computer)65
b(Lab)6 b(oratory)-17 b(,)66 b(Cam)-6 b(bridge)67 b(Univ)-6
b(ersit)g(y)2186 2023 y Fi(b)2256 2085 y Fh(Cam)g(bridge,)67
b(UK)1260 2585 y Fg(http://www.cl.cam.ac.)q(uk/)q(~nj)q(n25)q(/)1153
2870 y(http://developer.kd)q(e.o)q(rg/)q(~se)q(war)q(dj)2263
3376 y Fk(13)78 b(July)f(2003)p 286 3879 1574 18 v 1859
3879 2098 52 v 3957 3879 1574 18 v 272 4097 a Ff(V)-11
b(algrind)2148 b Fe(0)1817 b(13)46 b(July)h(2003)p eop
%%Page: 1 2
1 1 bop 286 -196 4720 18 v 5005 369 a
 currentpoint currentpoint translate 0.42818 0.42818 scale neg exch
neg exch translate
 5005 369 a Black
5177 -15 a
 currentpoint currentpoint translate 0.16673 0.16673 scale neg exch
neg exch translate
 5177 -15 a @beginspecial -153 @llx -3 @lly
153 @urx 372 @ury 3060 @rwi @setspecial
%%BeginDocument: CUarmsC.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Arms of University of Cambridge
%%Creator: Philip Hazel, July 1986
%%CreationDate: 12:00:00 31-07-86
%%BoundingBox: -153 -3 153 372
%%EndComments

/cuarmsdict 50 dict def cuarmsdict begin

/mtrx matrix def
/lionfix{filled{gsave lioncolour fill grestore}if stroke}def
/toefix{gsave lioncolour fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db lioneyecolour fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/arg exch def gsave 0.05 0.05 scale
  arg type /booleantype eq { /arg arg {1} {0} ifelse def} if

  arg 3 eq
    {
    % colour definitions
    /erminecolour	{ 0 0 0 setrgbcolor } def
    /lioncolour		{ 1 .9 0 setrgbcolor } def
    /lioneyecolour	{ 1 0 0 setrgbcolor } def
    /bgcolour		{ 1 0 0 setrgbcolor } def
    /crosscolour	{ 1 1 1 setrgbcolor } def
    /bookcolour		{ 1 0 0 setrgbcolor } def
    /bktrimcolour 	{ 1 .9 0 setrgbcolor } def
    /filled		true def
    }
    {
    /erminecolour	{ 0 setgray } def
    /lioncolour		{ 1 setgray } def
    /lioneyecolour	{ 0 setgray } def
    /bgcolour		{ 0 setgray } def
    /crosscolour	{ 1 setgray } def
    /bookcolour		{ 0 setgray } def
    /bktrimcolour 	{ 1 setgray } def
    /filled		arg 1 eq def
    }
    ifelse


  1 1 2
  {pop   %repeat for symmetry

  %outline
  bgcolour
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave crosscolour fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc erminecolour fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc bookcolour fill

  bktrimcolour
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end


%%EndProlog

5 5 scale
cuarmsdict begin 3 cuarms end

%%EndDocument
 @endspecial 5177 -15 a
 currentpoint currentpoint translate 1 0.16673 div 1 0.16673 div scale
neg exch neg exch translate
 5177 -15 a 5030 177 a
 currentpoint currentpoint translate 0.74092 0.74092 scale neg exch
neg exch translate
 5030 177
a Fm(UNIVERSITY)51 b(OF)5030 177 y
 currentpoint currentpoint translate 1 0.74092 div 1 0.74092 div scale
neg exch neg exch translate
 5030 177 a 5029 369
a
 currentpoint currentpoint translate 0.91832 0.91832 scale neg exch
neg exch translate
 5029 369 a Fm(CAMBRIDGE)5029 369 y
 currentpoint currentpoint translate 1 0.91832 div 1 0.91832 div scale
neg exch neg exch translate
 5029 369 a Black
5005 369 a
 currentpoint currentpoint translate 1 0.42818 div 1 0.42818 div scale
neg exch neg exch translate
 5005 369 a 2500 115 a Fh(Ov)-6 b(erview)286
479 y Fd(V)-14 b(algrind)59 b(is)f(a:)p Black 286 819
a Fc(\017)p Black 86 w Fd(F)-14 b(ramew)-5 b(ork)59 b(for)f(building)g
(to)5 b(ols)p Black 286 1063 a Fc(\017)p Black 86 w Fd(T)-14
b(o)5 b(ols)58 b(that)f Fb(sup)-9 b(ervise)72 b Fd(programs)59
b(at)e(run)-5 b(time)286 1550 y(What)57 b(I)g(will)k(discuss:)p
Black 286 1891 a Fc(\017)p Black 86 w Fd(Wh)-5 b(y)57
b(suc)-5 b(h)57 b(a)g(framew)-5 b(ork)59 b(is)f(go)5
b(o)g(d)p Black 286 2134 a Fc(\017)p Black 86 w Fd(Example)58
b(to)5 b(ols)58 b(built)g(using)g(it)p Black 286 2378
a Fc(\017)p Black 86 w Fd(P)-5 b(erformance)p Black 286
2622 a Fc(\017)p Black 86 w Fd(Strengths)56 b(and)h(w)-5
b(eaknesses)286 3109 y(What)57 b(I)g(w)-5 b(on't)58 b(discuss:)p
Black 286 3449 a Fc(\017)p Black 86 w Fd(Gory)g(tec)-5
b(hnical)57 b(details)h({)g(read)f(the)g(pap)5 b(er)p
286 3879 1574 18 v 1859 3879 2098 52 v 3957 3879 1574
18 v 272 4097 a Ff(V)-11 b(algrind)2148 b Fe(1)1817 b(13)46
b(July)h(2003)p eop
%%Page: 2 3
2 2 bop 286 -196 4720 18 v 5005 369 a
 currentpoint currentpoint translate 0.42818 0.42818 scale neg exch
neg exch translate
 5005 369 a Black
5177 -15 a
 currentpoint currentpoint translate 0.16673 0.16673 scale neg exch
neg exch translate
 5177 -15 a @beginspecial -153 @llx -3 @lly
153 @urx 372 @ury 3060 @rwi @setspecial
%%BeginDocument: CUarmsC.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Arms of University of Cambridge
%%Creator: Philip Hazel, July 1986
%%CreationDate: 12:00:00 31-07-86
%%BoundingBox: -153 -3 153 372
%%EndComments

/cuarmsdict 50 dict def cuarmsdict begin

/mtrx matrix def
/lionfix{filled{gsave lioncolour fill grestore}if stroke}def
/toefix{gsave lioncolour fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db lioneyecolour fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/arg exch def gsave 0.05 0.05 scale
  arg type /booleantype eq { /arg arg {1} {0} ifelse def} if

  arg 3 eq
    {
    % colour definitions
    /erminecolour	{ 0 0 0 setrgbcolor } def
    /lioncolour		{ 1 .9 0 setrgbcolor } def
    /lioneyecolour	{ 1 0 0 setrgbcolor } def
    /bgcolour		{ 1 0 0 setrgbcolor } def
    /crosscolour	{ 1 1 1 setrgbcolor } def
    /bookcolour		{ 1 0 0 setrgbcolor } def
    /bktrimcolour 	{ 1 .9 0 setrgbcolor } def
    /filled		true def
    }
    {
    /erminecolour	{ 0 setgray } def
    /lioncolour		{ 1 setgray } def
    /lioneyecolour	{ 0 setgray } def
    /bgcolour		{ 0 setgray } def
    /crosscolour	{ 1 setgray } def
    /bookcolour		{ 0 setgray } def
    /bktrimcolour 	{ 1 setgray } def
    /filled		arg 1 eq def
    }
    ifelse


  1 1 2
  {pop   %repeat for symmetry

  %outline
  bgcolour
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave crosscolour fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc erminecolour fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc bookcolour fill

  bktrimcolour
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end


%%EndProlog

5 5 scale
cuarmsdict begin 3 cuarms end

%%EndDocument
 @endspecial 5177 -15 a
 currentpoint currentpoint translate 1 0.16673 div 1 0.16673 div scale
neg exch neg exch translate
 5177 -15 a 5030 177 a
 currentpoint currentpoint translate 0.74092 0.74092 scale neg exch
neg exch translate
 5030 177
a Fm(UNIVERSITY)51 b(OF)5030 177 y
 currentpoint currentpoint translate 1 0.74092 div 1 0.74092 div scale
neg exch neg exch translate
 5030 177 a 5029 369
a
 currentpoint currentpoint translate 0.91832 0.91832 scale neg exch
neg exch translate
 5029 369 a Fm(CAMBRIDGE)5029 369 y
 currentpoint currentpoint translate 1 0.91832 div 1 0.91832 div scale
neg exch neg exch translate
 5029 369 a Black
5005 369 a
 currentpoint currentpoint translate 1 0.42818 div 1 0.42818 div scale
neg exch neg exch translate
 5005 369 a 2141 115 a Fh(Sup)6 b(ervision)68
b(T)-17 b(o)6 b(ols)286 833 y Fd(Lots)57 b(of)g(them:)p
Black 286 1173 a Fc(\017)p Black 86 w Fd(Pro\014lers)p
Black 286 1417 a Fc(\017)p Black 86 w Fd(Bug)g(detectors)f(\(e.g.)h
(memory)h(debuggers,)e(data)h(race)g(detectors\))p Black
286 1661 a Fc(\017)p Black 86 w Fd(Program)i(visualisation,)h
(comprehension)286 2246 y(All)f(rely)f(on)f(instrumen)-5
b(ting)59 b(co)5 b(de:)p Black 286 2586 a Fc(\017)p Black
86 w Fd(Retain)57 b(original)j(b)5 b(eha)-5 b(viour)p
Black 286 2830 a Fc(\017)p Black 86 w Fd(Do)58 b(some)f(extra)h
(stu\013,)f(to)5 b(o)p 286 3879 1574 18 v 1859 3879 2098
52 v 3957 3879 1574 18 v 272 4097 a Ff(V)-11 b(algrind)2148
b Fe(2)1817 b(13)46 b(July)h(2003)p eop
%%Page: 3 4
3 3 bop 286 -196 4720 18 v 5005 369 a
 currentpoint currentpoint translate 0.42818 0.42818 scale neg exch
neg exch translate
 5005 369 a Black
5177 -15 a
 currentpoint currentpoint translate 0.16673 0.16673 scale neg exch
neg exch translate
 5177 -15 a @beginspecial -153 @llx -3 @lly
153 @urx 372 @ury 3060 @rwi @setspecial
%%BeginDocument: CUarmsC.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Arms of University of Cambridge
%%Creator: Philip Hazel, July 1986
%%CreationDate: 12:00:00 31-07-86
%%BoundingBox: -153 -3 153 372
%%EndComments

/cuarmsdict 50 dict def cuarmsdict begin

/mtrx matrix def
/lionfix{filled{gsave lioncolour fill grestore}if stroke}def
/toefix{gsave lioncolour fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db lioneyecolour fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/arg exch def gsave 0.05 0.05 scale
  arg type /booleantype eq { /arg arg {1} {0} ifelse def} if

  arg 3 eq
    {
    % colour definitions
    /erminecolour	{ 0 0 0 setrgbcolor } def
    /lioncolour		{ 1 .9 0 setrgbcolor } def
    /lioneyecolour	{ 1 0 0 setrgbcolor } def
    /bgcolour		{ 1 0 0 setrgbcolor } def
    /crosscolour	{ 1 1 1 setrgbcolor } def
    /bookcolour		{ 1 0 0 setrgbcolor } def
    /bktrimcolour 	{ 1 .9 0 setrgbcolor } def
    /filled		true def
    }
    {
    /erminecolour	{ 0 setgray } def
    /lioncolour		{ 1 setgray } def
    /lioneyecolour	{ 0 setgray } def
    /bgcolour		{ 0 setgray } def
    /crosscolour	{ 1 setgray } def
    /bookcolour		{ 0 setgray } def
    /bktrimcolour 	{ 1 setgray } def
    /filled		arg 1 eq def
    }
    ifelse


  1 1 2
  {pop   %repeat for symmetry

  %outline
  bgcolour
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave crosscolour fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc erminecolour fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc bookcolour fill

  bktrimcolour
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end


%%EndProlog

5 5 scale
cuarmsdict begin 3 cuarms end

%%EndDocument
 @endspecial 5177 -15 a
 currentpoint currentpoint translate 1 0.16673 div 1 0.16673 div scale
neg exch neg exch translate
 5177 -15 a 5030 177 a
 currentpoint currentpoint translate 0.74092 0.74092 scale neg exch
neg exch translate
 5030 177
a Fm(UNIVERSITY)51 b(OF)5030 177 y
 currentpoint currentpoint translate 1 0.74092 div 1 0.74092 div scale
neg exch neg exch translate
 5030 177 a 5029 369
a
 currentpoint currentpoint translate 0.91832 0.91832 scale neg exch
neg exch translate
 5029 369 a Fm(CAMBRIDGE)5029 369 y
 currentpoint currentpoint translate 1 0.91832 div 1 0.91832 div scale
neg exch neg exch translate
 5029 369 a Black
5005 369 a
 currentpoint currentpoint translate 1 0.42818 div 1 0.42818 div scale
neg exch neg exch translate
 5005 369 a 2500 115 a Fh(Problems)286 602
y Fd(Building)59 b(sup)5 b(ervision)57 b(to)5 b(ols)58
b(is)h(hard:)p Black 286 942 a Fc(\017)p Black 86 w Fd(Instrumen)-5
b(tation)58 b(itself)g(often)e(straigh)-5 b(tforw)g(ard.)31
b(.)d(.)p Black 286 1186 a Fc(\017)p Black 86 w Fd(.)h(.)f(.)h(but)56
b(adding)i(the)e(instrumen)-5 b(tation)59 b(is)f(di\016cult)286
1526 y(W)-14 b(an)-5 b(t)57 b(a)g(common)h(infrastructure.)286
2089 y(Using)g(sup)5 b(ervision)57 b(to)5 b(ols)59 b(can)d(b)5
b(e)57 b(hard:)p Black 286 2429 a Fc(\017)p Black 86
w Fd(Recompile)h(and/or)f(relink)p Black 286 2673 a Fc(\017)p
Black 86 w Fd(Incomplete)g(co)-5 b(v)g(erage)p Black
286 2917 a Fc(\017)p Black 86 w Fd(Libraries)59 b(are)e(a)h(pain)286
3257 y(W)-14 b(an)-5 b(t)57 b(to)g(a)-5 b(v)g(oid)59
b(these)d(problems.)p 286 3879 1574 18 v 1859 3879 2098
52 v 3957 3879 1574 18 v 272 4097 a Ff(V)-11 b(algrind)2148
b Fe(3)1817 b(13)46 b(July)h(2003)p eop
%%Page: 4 5
4 4 bop 286 -196 4720 18 v 5005 369 a
 currentpoint currentpoint translate 0.42818 0.42818 scale neg exch
neg exch translate
 5005 369 a Black
5177 -15 a
 currentpoint currentpoint translate 0.16673 0.16673 scale neg exch
neg exch translate
 5177 -15 a @beginspecial -153 @llx -3 @lly
153 @urx 372 @ury 3060 @rwi @setspecial
%%BeginDocument: CUarmsC.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Arms of University of Cambridge
%%Creator: Philip Hazel, July 1986
%%CreationDate: 12:00:00 31-07-86
%%BoundingBox: -153 -3 153 372
%%EndComments

/cuarmsdict 50 dict def cuarmsdict begin

/mtrx matrix def
/lionfix{filled{gsave lioncolour fill grestore}if stroke}def
/toefix{gsave lioncolour fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db lioneyecolour fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/arg exch def gsave 0.05 0.05 scale
  arg type /booleantype eq { /arg arg {1} {0} ifelse def} if

  arg 3 eq
    {
    % colour definitions
    /erminecolour	{ 0 0 0 setrgbcolor } def
    /lioncolour		{ 1 .9 0 setrgbcolor } def
    /lioneyecolour	{ 1 0 0 setrgbcolor } def
    /bgcolour		{ 1 0 0 setrgbcolor } def
    /crosscolour	{ 1 1 1 setrgbcolor } def
    /bookcolour		{ 1 0 0 setrgbcolor } def
    /bktrimcolour 	{ 1 .9 0 setrgbcolor } def
    /filled		true def
    }
    {
    /erminecolour	{ 0 setgray } def
    /lioncolour		{ 1 setgray } def
    /lioneyecolour	{ 0 setgray } def
    /bgcolour		{ 0 setgray } def
    /crosscolour	{ 1 setgray } def
    /bookcolour		{ 0 setgray } def
    /bktrimcolour 	{ 1 setgray } def
    /filled		arg 1 eq def
    }
    ifelse


  1 1 2
  {pop   %repeat for symmetry

  %outline
  bgcolour
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave crosscolour fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc erminecolour fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc bookcolour fill

  bktrimcolour
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end


%%EndProlog

5 5 scale
cuarmsdict begin 3 cuarms end

%%EndDocument
 @endspecial 5177 -15 a
 currentpoint currentpoint translate 1 0.16673 div 1 0.16673 div scale
neg exch neg exch translate
 5177 -15 a 5030 177 a
 currentpoint currentpoint translate 0.74092 0.74092 scale neg exch
neg exch translate
 5030 177
a Fm(UNIVERSITY)51 b(OF)5030 177 y
 currentpoint currentpoint translate 1 0.74092 div 1 0.74092 div scale
neg exch neg exch translate
 5030 177 a 5029 369
a
 currentpoint currentpoint translate 0.91832 0.91832 scale neg exch
neg exch translate
 5029 369 a Fm(CAMBRIDGE)5029 369 y
 currentpoint currentpoint translate 1 0.91832 div 1 0.91832 div scale
neg exch neg exch translate
 5029 369 a Black
5005 369 a
 currentpoint currentpoint translate 1 0.42818 div 1 0.42818 div scale
neg exch neg exch translate
 5005 369 a 1785 125 a Fh(Building)68 b(to)6
b(ols)67 b(is)g(easy\(ish\))286 443 y Fd(V)-14 b(algrind)59
b(core)e(+)g(skin)h(=)f(sup)5 b(ervision)58 b(to)5 b(ol)p
Black 286 783 a Fc(\017)p Black 86 w Fd(W)-14 b(rite)58
b(a)f Fb(skin)71 b Fd(\(plug-in\))59 b(that)e(de\014nes)e(an)i
(instrumen)-5 b(tation)58 b(pass)p Black 286 1027 a Fc(\017)p
Black 86 w Fd(Core)g(inserts)f(instrumen)-5 b(tation)59
b(in)-5 b(to)58 b(running)f(program)i(\(hard)e(part\))p
Black 286 1270 a Fc(\017)p Black 86 w Fd(Core)h(pro)-5
b(vides)57 b(services)g(\(mak)-5 b(e)58 b(skin-writing)i(easier\))p
1323 1503 3290 7 v 1320 1796 7 293 v 1426 1708 a(Core)p
3531 1796 V 1858 w(55,000)e(lines)p 4609 1796 V 1323
1803 3290 7 v 1320 2095 7 293 v 1426 2007 a(C/C++)g(memory)h(debugger)p
3531 2095 V 205 w(7,400)f(lines)p 4609 2095 V 1320 2388
V 1426 2300 a(Data\015o)-5 b(w)59 b(tracer)p 3531 2388
V 1041 w(5,800)f(lines)p 4609 2388 V 1320 2680 V 1426
2593 a(Data)g(race)f(detector)p 3531 2680 V 806 w(3,500)h(lines)p
4609 2680 V 1320 2973 V 1426 2885 a(Cac)-5 b(he)57 b(pro\014ler)p
3531 2973 V 1164 w(2,400)h(lines)p 4609 2973 V 1320 3265
V 1426 3178 a(Instruction)g(coun)-5 b(ter)p 3531 3265
V 764 w(60)58 b(lines)p 4609 3265 V 1323 3272 3290 7
v 286 3552 a(The)f(hard)g(part)h(is)g(done)e(for)i(y)-5
b(ou;)57 b(don't)f(rein)-5 b(v)g(en)g(t)58 b(the)e(wheel.)p
286 3879 1574 18 v 1859 3879 2098 52 v 3957 3879 1574
18 v 272 4097 a Ff(V)-11 b(algrind)2148 b Fe(4)1817 b(13)46
b(July)h(2003)p eop
%%Page: 5 6
5 5 bop 286 -196 4720 18 v 5005 369 a
 currentpoint currentpoint translate 0.42818 0.42818 scale neg exch
neg exch translate
 5005 369 a Black
5177 -15 a
 currentpoint currentpoint translate 0.16673 0.16673 scale neg exch
neg exch translate
 5177 -15 a @beginspecial -153 @llx -3 @lly
153 @urx 372 @ury 3060 @rwi @setspecial
%%BeginDocument: CUarmsC.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Arms of University of Cambridge
%%Creator: Philip Hazel, July 1986
%%CreationDate: 12:00:00 31-07-86
%%BoundingBox: -153 -3 153 372
%%EndComments

/cuarmsdict 50 dict def cuarmsdict begin

/mtrx matrix def
/lionfix{filled{gsave lioncolour fill grestore}if stroke}def
/toefix{gsave lioncolour fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db lioneyecolour fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/arg exch def gsave 0.05 0.05 scale
  arg type /booleantype eq { /arg arg {1} {0} ifelse def} if

  arg 3 eq
    {
    % colour definitions
    /erminecolour	{ 0 0 0 setrgbcolor } def
    /lioncolour		{ 1 .9 0 setrgbcolor } def
    /lioneyecolour	{ 1 0 0 setrgbcolor } def
    /bgcolour		{ 1 0 0 setrgbcolor } def
    /crosscolour	{ 1 1 1 setrgbcolor } def
    /bookcolour		{ 1 0 0 setrgbcolor } def
    /bktrimcolour 	{ 1 .9 0 setrgbcolor } def
    /filled		true def
    }
    {
    /erminecolour	{ 0 setgray } def
    /lioncolour		{ 1 setgray } def
    /lioneyecolour	{ 0 setgray } def
    /bgcolour		{ 0 setgray } def
    /crosscolour	{ 1 setgray } def
    /bookcolour		{ 0 setgray } def
    /bktrimcolour 	{ 1 setgray } def
    /filled		arg 1 eq def
    }
    ifelse


  1 1 2
  {pop   %repeat for symmetry

  %outline
  bgcolour
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave crosscolour fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc erminecolour fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc bookcolour fill

  bktrimcolour
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end


%%EndProlog

5 5 scale
cuarmsdict begin 3 cuarms end

%%EndDocument
 @endspecial 5177 -15 a
 currentpoint currentpoint translate 1 0.16673 div 1 0.16673 div scale
neg exch neg exch translate
 5177 -15 a 5030 177 a
 currentpoint currentpoint translate 0.74092 0.74092 scale neg exch
neg exch translate
 5030 177
a Fm(UNIVERSITY)51 b(OF)5030 177 y
 currentpoint currentpoint translate 1 0.74092 div 1 0.74092 div scale
neg exch neg exch translate
 5030 177 a 5029 369
a
 currentpoint currentpoint translate 0.91832 0.91832 scale neg exch
neg exch translate
 5029 369 a Fm(CAMBRIDGE)5029 369 y
 currentpoint currentpoint translate 1 0.91832 div 1 0.91832 div scale
neg exch neg exch translate
 5029 369 a Black
5005 369 a
 currentpoint currentpoint translate 1 0.42818 div 1 0.42818 div scale
neg exch neg exch translate
 5005 369 a 2102 115 a Fh(Using)67 b(to)6 b(ols)67
b(is)g(easy)286 659 y Fd(Normal)59 b(use:)363 b Fa(./myapp)93
b(<args>)286 902 y Fd(Under)57 b(V)-14 b(algrind:)77
b Fa(valgrind)94 b(--skin=<name>)i(./myapp)d(<args>)286
1446 y Fd(Thanks)57 b(to)g Fb(dynamic)k(binary)g(tr)-9
b(anslation)13 b Fd(:)p Black 286 1786 a Fc(\017)p Black
86 w Fd(No)58 b(recompilation)h(needed)p Black 286 2030
a Fc(\017)p Black 86 w Fd(No)f(relinking)h(needed)p Black
286 2274 a Fc(\017)p Black 86 w Fd(No)f(source)e(co)5
b(de)56 b(needed)p Black 286 2517 a Fc(\017)p Black 86
w Fb(A)l(l)9 b(l)75 b Fd(co)5 b(de)56 b(outside)h(k)-5
b(ernel)57 b(\(including)h(libraries\))i(instrumen)-5
b(ted)p Black 286 2761 a Fc(\017)p Black 86 w Fd(Skin)57
b(selected)f(at)i(startup)286 3327 y(Isn't)f(that)g(easy?)p
286 3879 1574 18 v 1859 3879 2098 52 v 3957 3879 1574
18 v 272 4097 a Ff(V)-11 b(algrind)2148 b Fe(5)1817 b(13)46
b(July)h(2003)p eop
%%Page: 6 7
6 6 bop 286 -196 4720 18 v 5005 369 a
 currentpoint currentpoint translate 0.42818 0.42818 scale neg exch
neg exch translate
 5005 369 a Black
5177 -15 a
 currentpoint currentpoint translate 0.16673 0.16673 scale neg exch
neg exch translate
 5177 -15 a @beginspecial -153 @llx -3 @lly
153 @urx 372 @ury 3060 @rwi @setspecial
%%BeginDocument: CUarmsC.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Arms of University of Cambridge
%%Creator: Philip Hazel, July 1986
%%CreationDate: 12:00:00 31-07-86
%%BoundingBox: -153 -3 153 372
%%EndComments

/cuarmsdict 50 dict def cuarmsdict begin

/mtrx matrix def
/lionfix{filled{gsave lioncolour fill grestore}if stroke}def
/toefix{gsave lioncolour fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db lioneyecolour fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/arg exch def gsave 0.05 0.05 scale
  arg type /booleantype eq { /arg arg {1} {0} ifelse def} if

  arg 3 eq
    {
    % colour definitions
    /erminecolour	{ 0 0 0 setrgbcolor } def
    /lioncolour		{ 1 .9 0 setrgbcolor } def
    /lioneyecolour	{ 1 0 0 setrgbcolor } def
    /bgcolour		{ 1 0 0 setrgbcolor } def
    /crosscolour	{ 1 1 1 setrgbcolor } def
    /bookcolour		{ 1 0 0 setrgbcolor } def
    /bktrimcolour 	{ 1 .9 0 setrgbcolor } def
    /filled		true def
    }
    {
    /erminecolour	{ 0 setgray } def
    /lioncolour		{ 1 setgray } def
    /lioneyecolour	{ 0 setgray } def
    /bgcolour		{ 0 setgray } def
    /crosscolour	{ 1 setgray } def
    /bookcolour		{ 0 setgray } def
    /bktrimcolour 	{ 1 setgray } def
    /filled		arg 1 eq def
    }
    ifelse


  1 1 2
  {pop   %repeat for symmetry

  %outline
  bgcolour
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave crosscolour fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc erminecolour fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc bookcolour fill

  bktrimcolour
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end


%%EndProlog

5 5 scale
cuarmsdict begin 3 cuarms end

%%EndDocument
 @endspecial 5177 -15 a
 currentpoint currentpoint translate 1 0.16673 div 1 0.16673 div scale
neg exch neg exch translate
 5177 -15 a 5030 177 a
 currentpoint currentpoint translate 0.74092 0.74092 scale neg exch
neg exch translate
 5030 177
a Fm(UNIVERSITY)51 b(OF)5030 177 y
 currentpoint currentpoint translate 1 0.74092 div 1 0.74092 div scale
neg exch neg exch translate
 5030 177 a 5029 369
a
 currentpoint currentpoint translate 0.91832 0.91832 scale neg exch
neg exch translate
 5029 369 a Fm(CAMBRIDGE)5029 369 y
 currentpoint currentpoint translate 1 0.91832 div 1 0.91832 div scale
neg exch neg exch translate
 5029 369 a Black
5005 369 a
 currentpoint currentpoint translate 1 0.42818 div 1 0.42818 div scale
neg exch neg exch translate
 5005 369 a 2634 114 a Fh(Status)286 655 y
Fd(Distribution:)p Black 286 995 a Fc(\017)p Black 86
w Fd(First)59 b(released:)76 b(early)58 b(2002)p Black
286 1239 a Fc(\017)p Black 86 w Fd(Curren)-5 b(t)58 b(v)-5
b(ersion:)77 b(1.9.6)p Black 286 1483 a Fc(\017)p Black
86 w Fd(x86/Lin)-5 b(ux,)57 b(GPL)p Black 286 1727 a
Fc(\017)p Black 86 w Fd(Not)h(a)f(to)-5 b(y:)77 b(runs)57
b(large)h(programs)h(\(e.g.)d(Mozilla,)k(Op)5 b(enO\016ce\))p
Black 286 1971 a Fc(\017)p Black 86 w Fd(F)-14 b(our)58
b(skins)286 2555 y(Widely)g(used:)p Black 286 2895 a
Fc(\017)p Black 86 w Fd(A)-5 b(t)58 b(least)f(h)-5 b(undreds)56
b(of)h(users)p Black 286 3139 a Fc(\017)p Black 86 w
Fd(Used)g(extensiv)-5 b(ely)57 b(for)g(KDE)h(3.0)p 286
3879 1574 18 v 1859 3879 2098 52 v 3957 3879 1574 18
v 272 4097 a Ff(V)-11 b(algrind)2148 b Fe(6)1817 b(13)46
b(July)h(2003)p eop
%%Page: 7 8
7 7 bop 286 -196 4720 18 v 5005 369 a
 currentpoint currentpoint translate 0.42818 0.42818 scale neg exch
neg exch translate
 5005 369 a Black
5177 -15 a
 currentpoint currentpoint translate 0.16673 0.16673 scale neg exch
neg exch translate
 5177 -15 a @beginspecial -153 @llx -3 @lly
153 @urx 372 @ury 3060 @rwi @setspecial
%%BeginDocument: CUarmsC.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Arms of University of Cambridge
%%Creator: Philip Hazel, July 1986
%%CreationDate: 12:00:00 31-07-86
%%BoundingBox: -153 -3 153 372
%%EndComments

/cuarmsdict 50 dict def cuarmsdict begin

/mtrx matrix def
/lionfix{filled{gsave lioncolour fill grestore}if stroke}def
/toefix{gsave lioncolour fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db lioneyecolour fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/arg exch def gsave 0.05 0.05 scale
  arg type /booleantype eq { /arg arg {1} {0} ifelse def} if

  arg 3 eq
    {
    % colour definitions
    /erminecolour	{ 0 0 0 setrgbcolor } def
    /lioncolour		{ 1 .9 0 setrgbcolor } def
    /lioneyecolour	{ 1 0 0 setrgbcolor } def
    /bgcolour		{ 1 0 0 setrgbcolor } def
    /crosscolour	{ 1 1 1 setrgbcolor } def
    /bookcolour		{ 1 0 0 setrgbcolor } def
    /bktrimcolour 	{ 1 .9 0 setrgbcolor } def
    /filled		true def
    }
    {
    /erminecolour	{ 0 setgray } def
    /lioncolour		{ 1 setgray } def
    /lioneyecolour	{ 0 setgray } def
    /bgcolour		{ 0 setgray } def
    /crosscolour	{ 1 setgray } def
    /bookcolour		{ 0 setgray } def
    /bktrimcolour 	{ 1 setgray } def
    /filled		arg 1 eq def
    }
    ifelse


  1 1 2
  {pop   %repeat for symmetry

  %outline
  bgcolour
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave crosscolour fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc erminecolour fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc bookcolour fill

  bktrimcolour
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end


%%EndProlog

5 5 scale
cuarmsdict begin 3 cuarms end

%%EndDocument
 @endspecial 5177 -15 a
 currentpoint currentpoint translate 1 0.16673 div 1 0.16673 div scale
neg exch neg exch translate
 5177 -15 a 5030 177 a
 currentpoint currentpoint translate 0.74092 0.74092 scale neg exch
neg exch translate
 5030 177
a Fm(UNIVERSITY)51 b(OF)5030 177 y
 currentpoint currentpoint translate 1 0.74092 div 1 0.74092 div scale
neg exch neg exch translate
 5030 177 a 5029 369
a
 currentpoint currentpoint translate 0.91832 0.91832 scale neg exch
neg exch translate
 5029 369 a Fm(CAMBRIDGE)5029 369 y
 currentpoint currentpoint translate 1 0.91832 div 1 0.91832 div scale
neg exch neg exch translate
 5029 369 a Black
5005 369 a
 currentpoint currentpoint translate 1 0.42818 div 1 0.42818 div scale
neg exch neg exch translate
 5005 369 a 2174 115 a Fh(Execution)68 b(Basics)286
989 y Fd(A)-5 b(t)58 b(run)-5 b(time:)p Black 286 1329
a Fc(\017)p Black 86 w Fd(V)-14 b(algrind)59 b(hijac)-5
b(ks)57 b(execution)f(of)h(clien)-5 b(t)58 b(at)g(startup)p
Black 286 1573 a Fc(\017)p Black 86 w Fd(Clien)-5 b(t)59
b(runs)e(on)g(sim)-5 b(ulated)59 b(CPU)p Black 286 1817
a Fc(\017)p Black 86 w Fd(Clien)-5 b(t)59 b(do)5 b(esn't)56
b(realise)p Black 286 2060 a Fc(\017)p Black 86 w Fd(V)-14
b(algrind)59 b(x86-to-x86)f(JIT)h(compiles)f(co)5 b(de)p
Black 286 2304 a Fc(\017)p Black 86 w Fd(Skin)57 b(adds)g(instrumen)-5
b(tation)p Black 286 2548 a Fc(\017)p Black 86 w Fd(No)58
b(original)i(clien)-5 b(t)58 b(co)5 b(de)56 b(runs,)h(only)h(compiled)g
(\(instrumen)-5 b(ted\))56 b(co)5 b(de)p 286 3879 1574
18 v 1859 3879 2098 52 v 3957 3879 1574 18 v 272 4097
a Ff(V)-11 b(algrind)2148 b Fe(7)1817 b(13)46 b(July)h(2003)p
eop
%%Page: 8 9
8 8 bop 286 -196 4720 18 v 5005 369 a
 currentpoint currentpoint translate 0.42818 0.42818 scale neg exch
neg exch translate
 5005 369 a Black
5177 -15 a
 currentpoint currentpoint translate 0.16673 0.16673 scale neg exch
neg exch translate
 5177 -15 a @beginspecial -153 @llx -3 @lly
153 @urx 372 @ury 3060 @rwi @setspecial
%%BeginDocument: CUarmsC.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Arms of University of Cambridge
%%Creator: Philip Hazel, July 1986
%%CreationDate: 12:00:00 31-07-86
%%BoundingBox: -153 -3 153 372
%%EndComments

/cuarmsdict 50 dict def cuarmsdict begin

/mtrx matrix def
/lionfix{filled{gsave lioncolour fill grestore}if stroke}def
/toefix{gsave lioncolour fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db lioneyecolour fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/arg exch def gsave 0.05 0.05 scale
  arg type /booleantype eq { /arg arg {1} {0} ifelse def} if

  arg 3 eq
    {
    % colour definitions
    /erminecolour	{ 0 0 0 setrgbcolor } def
    /lioncolour		{ 1 .9 0 setrgbcolor } def
    /lioneyecolour	{ 1 0 0 setrgbcolor } def
    /bgcolour		{ 1 0 0 setrgbcolor } def
    /crosscolour	{ 1 1 1 setrgbcolor } def
    /bookcolour		{ 1 0 0 setrgbcolor } def
    /bktrimcolour 	{ 1 .9 0 setrgbcolor } def
    /filled		true def
    }
    {
    /erminecolour	{ 0 setgray } def
    /lioncolour		{ 1 setgray } def
    /lioneyecolour	{ 0 setgray } def
    /bgcolour		{ 0 setgray } def
    /crosscolour	{ 1 setgray } def
    /bookcolour		{ 0 setgray } def
    /bktrimcolour 	{ 1 setgray } def
    /filled		arg 1 eq def
    }
    ifelse


  1 1 2
  {pop   %repeat for symmetry

  %outline
  bgcolour
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave crosscolour fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc erminecolour fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc bookcolour fill

  bktrimcolour
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end


%%EndProlog

5 5 scale
cuarmsdict begin 3 cuarms end

%%EndDocument
 @endspecial 5177 -15 a
 currentpoint currentpoint translate 1 0.16673 div 1 0.16673 div scale
neg exch neg exch translate
 5177 -15 a 5030 177 a
 currentpoint currentpoint translate 0.74092 0.74092 scale neg exch
neg exch translate
 5030 177
a Fm(UNIVERSITY)51 b(OF)5030 177 y
 currentpoint currentpoint translate 1 0.74092 div 1 0.74092 div scale
neg exch neg exch translate
 5030 177 a 5029 369
a
 currentpoint currentpoint translate 0.91832 0.91832 scale neg exch
neg exch translate
 5029 369 a Fm(CAMBRIDGE)5029 369 y
 currentpoint currentpoint translate 1 0.91832 div 1 0.91832 div scale
neg exch neg exch translate
 5029 369 a Black
5005 369 a
 currentpoint currentpoint translate 1 0.42818 div 1 0.42818 div scale
neg exch neg exch translate
 5005 369 a 2141 115 a Fh(Execution)67 b(Details)286
433 y Fd(Actually)58 b(an)f(x86-)p Fb(UCo)-9 b(de)13
b Fd(-x86)59 b(compiler.)286 857 y(UCo)5 b(de)57 b(is)h(in)-5
b(termediate)58 b(format:)p Black 286 1197 a Fc(\017)p
Black 86 w Fd(RISC-lik)-5 b(e)p Black 286 1441 a Fc(\017)p
Black 86 w Fd(Expressed)56 b(in)i(virtual)h(registers)286
1887 y(Compilation)h(of)d(a)h(basic)f(blo)5 b(c)-5 b(k:)p
Black Black 401 2227 a(1.)76 b(Disassem)-5 b(bly)59 b(\(core\):)522
b(x86)796 b Fc(!)57 b Fd(UCo)5 b(de)401 2471 y(2.)76
b(Optimisation)60 b(\(core\):)454 b(UCo)5 b(de)542 b
Fc(!)57 b Fd(UCo)5 b(de)401 2715 y(3.)76 b(Instrumen)-5
b(tation)58 b(\(skin\):)229 b(UCo)5 b(de)542 b Fc(!)57
b Fd(Instr.)77 b(UCo)5 b(de)401 2959 y(4.)76 b(Register)58
b(allo)5 b(c.)77 b(\(core\):)351 b(Instr.)77 b(UCo)5
b(de)57 b Fc(!)g Fd(Instr.)77 b(UCo)5 b(de)401 3203 y(5.)76
b(Co)5 b(de)57 b(generation)g(\(core\):)211 b(Instr.)77
b(UCo)5 b(de)57 b Fc(!)g Fd(x86)286 3543 y(Generated)f(co)5
b(de)56 b(is)i(cac)-5 b(hed)55 b(and)i(link)-5 b(ed)58
b(\(core\).)p 286 3879 1574 18 v 1859 3879 2098 52 v
3957 3879 1574 18 v 272 4097 a Ff(V)-11 b(algrind)2148
b Fe(8)1817 b(13)46 b(July)h(2003)p eop
%%Page: 9 10
9 9 bop 286 -196 4720 18 v 5005 369 a
 currentpoint currentpoint translate 0.42818 0.42818 scale neg exch
neg exch translate
 5005 369 a Black
5177 -15 a
 currentpoint currentpoint translate 0.16673 0.16673 scale neg exch
neg exch translate
 5177 -15 a @beginspecial -153 @llx -3 @lly
153 @urx 372 @ury 3060 @rwi @setspecial
%%BeginDocument: CUarmsC.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Arms of University of Cambridge
%%Creator: Philip Hazel, July 1986
%%CreationDate: 12:00:00 31-07-86
%%BoundingBox: -153 -3 153 372
%%EndComments

/cuarmsdict 50 dict def cuarmsdict begin

/mtrx matrix def
/lionfix{filled{gsave lioncolour fill grestore}if stroke}def
/toefix{gsave lioncolour fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db lioneyecolour fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/arg exch def gsave 0.05 0.05 scale
  arg type /booleantype eq { /arg arg {1} {0} ifelse def} if

  arg 3 eq
    {
    % colour definitions
    /erminecolour	{ 0 0 0 setrgbcolor } def
    /lioncolour		{ 1 .9 0 setrgbcolor } def
    /lioneyecolour	{ 1 0 0 setrgbcolor } def
    /bgcolour		{ 1 0 0 setrgbcolor } def
    /crosscolour	{ 1 1 1 setrgbcolor } def
    /bookcolour		{ 1 0 0 setrgbcolor } def
    /bktrimcolour 	{ 1 .9 0 setrgbcolor } def
    /filled		true def
    }
    {
    /erminecolour	{ 0 setgray } def
    /lioncolour		{ 1 setgray } def
    /lioneyecolour	{ 0 setgray } def
    /bgcolour		{ 0 setgray } def
    /crosscolour	{ 1 setgray } def
    /bookcolour		{ 0 setgray } def
    /bktrimcolour 	{ 1 setgray } def
    /filled		arg 1 eq def
    }
    ifelse


  1 1 2
  {pop   %repeat for symmetry

  %outline
  bgcolour
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave crosscolour fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc erminecolour fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc bookcolour fill

  bktrimcolour
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end


%%EndProlog

5 5 scale
cuarmsdict begin 3 cuarms end

%%EndDocument
 @endspecial 5177 -15 a
 currentpoint currentpoint translate 1 0.16673 div 1 0.16673 div scale
neg exch neg exch translate
 5177 -15 a 5030 177 a
 currentpoint currentpoint translate 0.74092 0.74092 scale neg exch
neg exch translate
 5030 177
a Fm(UNIVERSITY)51 b(OF)5030 177 y
 currentpoint currentpoint translate 1 0.74092 div 1 0.74092 div scale
neg exch neg exch translate
 5030 177 a 5029 369
a
 currentpoint currentpoint translate 0.91832 0.91832 scale neg exch
neg exch translate
 5029 369 a Fm(CAMBRIDGE)5029 369 y
 currentpoint currentpoint translate 1 0.91832 div 1 0.91832 div scale
neg exch neg exch translate
 5029 369 a Black
5005 369 a
 currentpoint currentpoint translate 1 0.42818 div 1 0.42818 div scale
neg exch neg exch translate
 5005 369 a 2679 115 a Fh(Skins)286 433 y Fd(Must)57
b(implemen)-5 b(t:)p Black 286 773 a Fc(\017)p Black
86 w Fa(init\(\))p Black 286 1017 a Fc(\017)p Black 86
w Fa(instrument\(\))p Black 286 1261 a Fc(\017)p Black
86 w Fa(fini\(\))286 1837 y Fd(Instrumen)g(tation:)p
Black 286 2178 a Fc(\017)p Black 86 w Fd(Calls)59 b(to)f(C)g(functions)
e(easiest)h(\(via)h Fa(CCALL)i Fd(UCo)5 b(de)57 b(instruction\))p
Black 286 2421 a Fc(\017)p Black 86 w Fd(Can)h(extend)d(UCo)5
b(de)57 b(for)h(\014ne-grained)f(instrumen)-5 b(tation)286
2998 y(Some)57 b(callbac)-5 b(ks)58 b(m)-5 b(ust)58 b(b)5
b(e)56 b(pro)-5 b(vided)57 b(if)h(using)g(certain)f(core)g(services.)
286 3552 y(More)g(details)h(in)g(pap)5 b(er.)p 286 3879
1574 18 v 1859 3879 2098 52 v 3957 3879 1574 18 v 272
4097 a Ff(V)-11 b(algrind)2148 b Fe(9)1817 b(13)46 b(July)h(2003)p
eop
%%Page: 10 11
10 10 bop 286 -196 4720 18 v 5005 369 a
 currentpoint currentpoint translate 0.42818 0.42818 scale neg exch
neg exch translate
 5005 369 a Black
5177 -15 a
 currentpoint currentpoint translate 0.16673 0.16673 scale neg exch
neg exch translate
 5177 -15 a @beginspecial -153 @llx -3 @lly
153 @urx 372 @ury 3060 @rwi @setspecial
%%BeginDocument: CUarmsC.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Arms of University of Cambridge
%%Creator: Philip Hazel, July 1986
%%CreationDate: 12:00:00 31-07-86
%%BoundingBox: -153 -3 153 372
%%EndComments

/cuarmsdict 50 dict def cuarmsdict begin

/mtrx matrix def
/lionfix{filled{gsave lioncolour fill grestore}if stroke}def
/toefix{gsave lioncolour fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db lioneyecolour fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/arg exch def gsave 0.05 0.05 scale
  arg type /booleantype eq { /arg arg {1} {0} ifelse def} if

  arg 3 eq
    {
    % colour definitions
    /erminecolour	{ 0 0 0 setrgbcolor } def
    /lioncolour		{ 1 .9 0 setrgbcolor } def
    /lioneyecolour	{ 1 0 0 setrgbcolor } def
    /bgcolour		{ 1 0 0 setrgbcolor } def
    /crosscolour	{ 1 1 1 setrgbcolor } def
    /bookcolour		{ 1 0 0 setrgbcolor } def
    /bktrimcolour 	{ 1 .9 0 setrgbcolor } def
    /filled		true def
    }
    {
    /erminecolour	{ 0 setgray } def
    /lioncolour		{ 1 setgray } def
    /lioneyecolour	{ 0 setgray } def
    /bgcolour		{ 0 setgray } def
    /crosscolour	{ 1 setgray } def
    /bookcolour		{ 0 setgray } def
    /bktrimcolour 	{ 1 setgray } def
    /filled		arg 1 eq def
    }
    ifelse


  1 1 2
  {pop   %repeat for symmetry

  %outline
  bgcolour
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave crosscolour fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc erminecolour fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc bookcolour fill

  bktrimcolour
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end


%%EndProlog

5 5 scale
cuarmsdict begin 3 cuarms end

%%EndDocument
 @endspecial 5177 -15 a
 currentpoint currentpoint translate 1 0.16673 div 1 0.16673 div scale
neg exch neg exch translate
 5177 -15 a 5030 177 a
 currentpoint currentpoint translate 0.74092 0.74092 scale neg exch
neg exch translate
 5030 177
a Fm(UNIVERSITY)51 b(OF)5030 177 y
 currentpoint currentpoint translate 1 0.74092 div 1 0.74092 div scale
neg exch neg exch translate
 5030 177 a 5029 369
a
 currentpoint currentpoint translate 0.91832 0.91832 scale neg exch
neg exch translate
 5029 369 a Fm(CAMBRIDGE)5029 369 y
 currentpoint currentpoint translate 1 0.91832 div 1 0.91832 div scale
neg exch neg exch translate
 5029 369 a Black
5005 369 a
 currentpoint currentpoint translate 1 0.42818 div 1 0.42818 div scale
neg exch neg exch translate
 5005 369 a 1110 125 a Fh(Memc)-6 b(hec)g(k:)89
b(A)66 b(C/C++)g(memory)g(debugger)286 443 y Fd(Similar)60
b(to)e(Purify)-14 b(.)76 b(Detects:)p Black 286 783 a
Fc(\017)p Black 86 w Fd(Use)57 b(of)g(uninitialised)j(memory;)p
Black 286 1027 a Fc(\017)p Black 86 w Fd(Accessing)d(memory)h(b)5
b(efore)56 b(start/past)h(end)g(of)g(heap)f(blo)5 b(c)-5
b(ks;)p Black 286 1270 a Fc(\017)p Black 86 w Fd(Mismatc)g(hed)57
b Fa(malloc\(\))p Fd(/)p Fa(new)p Fd(/)p Fa(new[])64
b Fd(vs.)76 b Fa(free\(\))p Fd(/)p Fa(delete)p Fd(/)p
Fa(dele)q(te)q([])p Fd(;)p Black 286 1514 a Fc(\017)p
Black 86 w Fd(A)-5 b(ttempts)57 b(to)h(free)e(non-heap)g(blo)5
b(c)-5 b(ks;)p Black 286 1758 a Fc(\017)p Black 86 w
Fd(Accessing)57 b(heap)f(blo)5 b(c)-5 b(ks)57 b(after)g(they)g(ha)-5
b(v)g(e)57 b(b)5 b(een)55 b(freed;)p Black 286 2002 a
Fc(\017)p Black 86 w Fd(Memory)j(leaks;)p Black 286 2246
a Fc(\017)p Black 86 w Fd(Accessing)f(inappropriate)h(areas)f(on)h(the)
e(stac)-5 b(k;)p Black 286 2490 a Fc(\017)p Black 86
w Fd(P)g(assing)58 b(uninitialised/unaddressable)h(memory)f(to)g
(system)f(calls;)p Black 286 2733 a Fc(\017)p Black 86
w Fd(Ov)-5 b(erlapping)58 b(source/destination)f(areas)h(for)f
Fa(memcpy\(\))p Fd(,)j(etc.)286 3552 y(Errors)f(pin-p)5
b(oin)-5 b(ted)57 b(to)h(a)f(single)h(line)h(of)e(co)5
b(de.)p 286 3879 1574 18 v 1859 3879 2098 52 v 3957 3879
1574 18 v 272 4097 a Ff(V)-11 b(algrind)2113 b Fe(10)1783
b(13)46 b(July)h(2003)p eop
%%Page: 11 12
11 11 bop 286 -196 4720 18 v 5005 369 a
 currentpoint currentpoint translate 0.42818 0.42818 scale neg exch
neg exch translate
 5005 369 a Black
5177 -15 a
 currentpoint currentpoint translate 0.16673 0.16673 scale neg exch
neg exch translate
 5177 -15 a @beginspecial -153 @llx -3 @lly
153 @urx 372 @ury 3060 @rwi @setspecial
%%BeginDocument: CUarmsC.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Arms of University of Cambridge
%%Creator: Philip Hazel, July 1986
%%CreationDate: 12:00:00 31-07-86
%%BoundingBox: -153 -3 153 372
%%EndComments

/cuarmsdict 50 dict def cuarmsdict begin

/mtrx matrix def
/lionfix{filled{gsave lioncolour fill grestore}if stroke}def
/toefix{gsave lioncolour fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db lioneyecolour fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/arg exch def gsave 0.05 0.05 scale
  arg type /booleantype eq { /arg arg {1} {0} ifelse def} if

  arg 3 eq
    {
    % colour definitions
    /erminecolour	{ 0 0 0 setrgbcolor } def
    /lioncolour		{ 1 .9 0 setrgbcolor } def
    /lioneyecolour	{ 1 0 0 setrgbcolor } def
    /bgcolour		{ 1 0 0 setrgbcolor } def
    /crosscolour	{ 1 1 1 setrgbcolor } def
    /bookcolour		{ 1 0 0 setrgbcolor } def
    /bktrimcolour 	{ 1 .9 0 setrgbcolor } def
    /filled		true def
    }
    {
    /erminecolour	{ 0 setgray } def
    /lioncolour		{ 1 setgray } def
    /lioneyecolour	{ 0 setgray } def
    /bgcolour		{ 0 setgray } def
    /crosscolour	{ 1 setgray } def
    /bookcolour		{ 0 setgray } def
    /bktrimcolour 	{ 1 setgray } def
    /filled		arg 1 eq def
    }
    ifelse


  1 1 2
  {pop   %repeat for symmetry

  %outline
  bgcolour
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave crosscolour fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc erminecolour fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc bookcolour fill

  bktrimcolour
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end


%%EndProlog

5 5 scale
cuarmsdict begin 3 cuarms end

%%EndDocument
 @endspecial 5177 -15 a
 currentpoint currentpoint translate 1 0.16673 div 1 0.16673 div scale
neg exch neg exch translate
 5177 -15 a 5030 177 a
 currentpoint currentpoint translate 0.74092 0.74092 scale neg exch
neg exch translate
 5030 177
a Fm(UNIVERSITY)51 b(OF)5030 177 y
 currentpoint currentpoint translate 1 0.74092 div 1 0.74092 div scale
neg exch neg exch translate
 5030 177 a 5029 369
a
 currentpoint currentpoint translate 0.91832 0.91832 scale neg exch
neg exch translate
 5029 369 a Fm(CAMBRIDGE)5029 369 y
 currentpoint currentpoint translate 1 0.91832 div 1 0.91832 div scale
neg exch neg exch translate
 5029 369 a Black
5005 369 a
 currentpoint currentpoint translate 1 0.42818 div 1 0.42818 div scale
neg exch neg exch translate
 5005 369 a 2451 115 a Fh(Memc)-6 b(hec)g(k)286
433 y Fd(Memory:)76 b(eac)-5 b(h)57 b(b)-5 b(yte)57 b
Fb(shadowe)-9 b(d)76 b Fd(b)-5 b(y:)p Black 286 773 a
Fc(\017)p Black 86 w Fd(8)57 b(v)-10 b(alidit)-5 b(y)61
b(\(V\))c(bits)p Black 286 1017 a Fc(\017)p Black 86
w Fd(1)g(addressabilit)-5 b(y)59 b(\(A\))f(bit)286 1357
y(Shado)-5 b(w)57 b(maps)h(created)e(in)i(64KB)f(c)-5
b(h)g(unks)56 b(as)i(needed.)286 1966 y(Registers:)76
b(eac)-5 b(h)57 b(32-bit)h(register)g(shado)-5 b(w)g(ed)57
b(b)-5 b(y:)p Black 286 2306 a Fc(\017)p Black 86 w Fd(32)58
b(v)-10 b(alidit)-5 b(y)60 b(\(V\))d(bits)286 2937 y(A)g(bits:)p
Black 286 3277 a Fc(\017)p Black 86 w Fd(Chec)-5 b(k)g(ed)56
b(for)i(ev)-5 b(ery)56 b(memory)j(access)p Black 286
3521 a Fc(\017)p Black 86 w Fd(Up)5 b(dated)56 b(up)5
b(on)56 b Fa(malloc\(\))p Fd(,)61 b Fa(free\(\))p Fd(,)e(stac)-5
b(k)57 b(gro)-5 b(ws/shrinks,)59 b(etc.)p 286 3879 1574
18 v 1859 3879 2098 52 v 3957 3879 1574 18 v 272 4097
a Ff(V)-11 b(algrind)2113 b Fe(11)1783 b(13)46 b(July)h(2003)p
eop
%%Page: 12 13
12 12 bop 286 -196 4720 18 v 5005 369 a
 currentpoint currentpoint translate 0.42818 0.42818 scale neg exch
neg exch translate
 5005 369 a Black
5177 -15 a
 currentpoint currentpoint translate 0.16673 0.16673 scale neg exch
neg exch translate
 5177 -15 a @beginspecial -153 @llx -3 @lly
153 @urx 372 @ury 3060 @rwi @setspecial
%%BeginDocument: CUarmsC.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Arms of University of Cambridge
%%Creator: Philip Hazel, July 1986
%%CreationDate: 12:00:00 31-07-86
%%BoundingBox: -153 -3 153 372
%%EndComments

/cuarmsdict 50 dict def cuarmsdict begin

/mtrx matrix def
/lionfix{filled{gsave lioncolour fill grestore}if stroke}def
/toefix{gsave lioncolour fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db lioneyecolour fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/arg exch def gsave 0.05 0.05 scale
  arg type /booleantype eq { /arg arg {1} {0} ifelse def} if

  arg 3 eq
    {
    % colour definitions
    /erminecolour	{ 0 0 0 setrgbcolor } def
    /lioncolour		{ 1 .9 0 setrgbcolor } def
    /lioneyecolour	{ 1 0 0 setrgbcolor } def
    /bgcolour		{ 1 0 0 setrgbcolor } def
    /crosscolour	{ 1 1 1 setrgbcolor } def
    /bookcolour		{ 1 0 0 setrgbcolor } def
    /bktrimcolour 	{ 1 .9 0 setrgbcolor } def
    /filled		true def
    }
    {
    /erminecolour	{ 0 setgray } def
    /lioncolour		{ 1 setgray } def
    /lioneyecolour	{ 0 setgray } def
    /bgcolour		{ 0 setgray } def
    /crosscolour	{ 1 setgray } def
    /bookcolour		{ 0 setgray } def
    /bktrimcolour 	{ 1 setgray } def
    /filled		arg 1 eq def
    }
    ifelse


  1 1 2
  {pop   %repeat for symmetry

  %outline
  bgcolour
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave crosscolour fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc erminecolour fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc bookcolour fill

  bktrimcolour
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end


%%EndProlog

5 5 scale
cuarmsdict begin 3 cuarms end

%%EndDocument
 @endspecial 5177 -15 a
 currentpoint currentpoint translate 1 0.16673 div 1 0.16673 div scale
neg exch neg exch translate
 5177 -15 a 5030 177 a
 currentpoint currentpoint translate 0.74092 0.74092 scale neg exch
neg exch translate
 5030 177
a Fm(UNIVERSITY)51 b(OF)5030 177 y
 currentpoint currentpoint translate 1 0.74092 div 1 0.74092 div scale
neg exch neg exch translate
 5030 177 a 5029 369
a
 currentpoint currentpoint translate 0.91832 0.91832 scale neg exch
neg exch translate
 5029 369 a Fm(CAMBRIDGE)5029 369 y
 currentpoint currentpoint translate 1 0.91832 div 1 0.91832 div scale
neg exch neg exch translate
 5029 369 a Black
5005 369 a
 currentpoint currentpoint translate 1 0.42818 div 1 0.42818 div scale
neg exch neg exch translate
 5005 369 a 2451 115 a Fh(Memc)-6 b(hec)g(k)286
433 y Fd(V)57 b(bits)h(c)-5 b(hec)g(k)g(ed)55 b(on:)p
Black 286 773 a Fc(\017)p Black 86 w Fd(Conditional)k(branc)-5
b(h)57 b(tests)p Black 286 1017 a Fc(\017)p Black 86
w Fd(Syscall)h(inputs)p Black 286 1261 a Fc(\017)p Black
86 w Fd(Address)f(computations)286 2115 y(Not)g(c)-5
b(hec)g(k)g(ed)56 b(on:)p Black 286 2455 a Fc(\017)p
Black 86 w Fd(Copies)i(\(cop)-5 b(ying)57 b(uninitialised)j(bits)e(is)g
(ok,)f(common\))p Black 286 2699 a Fc(\017)p Black 86
w Fd(Arithmetic)i(ops)e(\(do)5 b(esn't)56 b(a\013ect)h(external)g(b)5
b(eha)-5 b(viour,)57 b(y)-5 b(et\))286 3552 y(Up)5 b(dated)56
b(on)h(copies,)g(v)-10 b(alue-pro)5 b(ducing)57 b(computations)p
286 3879 1574 18 v 1859 3879 2098 52 v 3957 3879 1574
18 v 272 4097 a Ff(V)-11 b(algrind)2113 b Fe(12)1783
b(13)46 b(July)h(2003)p eop
%%Page: 13 14
13 13 bop 286 -196 4720 18 v 5005 369 a
 currentpoint currentpoint translate 0.42818 0.42818 scale neg exch
neg exch translate
 5005 369 a Black
5177 -15 a
 currentpoint currentpoint translate 0.16673 0.16673 scale neg exch
neg exch translate
 5177 -15 a @beginspecial -153 @llx -3 @lly
153 @urx 372 @ury 3060 @rwi @setspecial
%%BeginDocument: CUarmsC.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Arms of University of Cambridge
%%Creator: Philip Hazel, July 1986
%%CreationDate: 12:00:00 31-07-86
%%BoundingBox: -153 -3 153 372
%%EndComments

/cuarmsdict 50 dict def cuarmsdict begin

/mtrx matrix def
/lionfix{filled{gsave lioncolour fill grestore}if stroke}def
/toefix{gsave lioncolour fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db lioneyecolour fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/arg exch def gsave 0.05 0.05 scale
  arg type /booleantype eq { /arg arg {1} {0} ifelse def} if

  arg 3 eq
    {
    % colour definitions
    /erminecolour	{ 0 0 0 setrgbcolor } def
    /lioncolour		{ 1 .9 0 setrgbcolor } def
    /lioneyecolour	{ 1 0 0 setrgbcolor } def
    /bgcolour		{ 1 0 0 setrgbcolor } def
    /crosscolour	{ 1 1 1 setrgbcolor } def
    /bookcolour		{ 1 0 0 setrgbcolor } def
    /bktrimcolour 	{ 1 .9 0 setrgbcolor } def
    /filled		true def
    }
    {
    /erminecolour	{ 0 setgray } def
    /lioncolour		{ 1 setgray } def
    /lioneyecolour	{ 0 setgray } def
    /bgcolour		{ 0 setgray } def
    /crosscolour	{ 1 setgray } def
    /bookcolour		{ 0 setgray } def
    /bktrimcolour 	{ 1 setgray } def
    /filled		arg 1 eq def
    }
    ifelse


  1 1 2
  {pop   %repeat for symmetry

  %outline
  bgcolour
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave crosscolour fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc erminecolour fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc bookcolour fill

  bktrimcolour
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end


%%EndProlog

5 5 scale
cuarmsdict begin 3 cuarms end

%%EndDocument
 @endspecial 5177 -15 a
 currentpoint currentpoint translate 1 0.16673 div 1 0.16673 div scale
neg exch neg exch translate
 5177 -15 a 5030 177 a
 currentpoint currentpoint translate 0.74092 0.74092 scale neg exch
neg exch translate
 5030 177
a Fm(UNIVERSITY)51 b(OF)5030 177 y
 currentpoint currentpoint translate 1 0.74092 div 1 0.74092 div scale
neg exch neg exch translate
 5030 177 a 5029 369
a
 currentpoint currentpoint translate 0.91832 0.91832 scale neg exch
neg exch translate
 5029 369 a Fm(CAMBRIDGE)5029 369 y
 currentpoint currentpoint translate 1 0.91832 div 1 0.91832 div scale
neg exch neg exch translate
 5029 369 a Black
5005 369 a
 currentpoint currentpoint translate 1 0.42818 div 1 0.42818 div scale
neg exch neg exch translate
 5005 369 a 2361 115 a Fh(P)-6 b(erformance)286
689 y Fd(SPEC2000)58 b(slo)-5 b(wdo)g(wn)59 b(factors:)p
286 1054 4670 7 v 283 1347 7 293 v 1034 1347 V 1141 1259
a(Nulgrind)208 b(Memc)-5 b(hec)g(k)205 b(Addrc)-5 b(hec)g(k)205
b(Cac)-5 b(hegrind)p 4952 1347 V 286 1353 4670 7 v 283
1646 7 293 v 389 1558 a(min)p 1034 1646 V 911 w(1.8)685
b(11.6)781 b(5.9)748 b(18.5)p 4952 1646 V 283 1939 V
389 1851 a(max)p 1034 1939 V 877 w(8.5)685 b(47.9)695
b(32.7)662 b(107.4)p 4952 1939 V 286 1945 4670 7 v 283
2238 7 293 v 389 2150 a(median)p 1034 2238 V 652 w(5.2)685
b(28.7)695 b(18.5)748 b(49.9)p 4952 2238 V 286 2245 4670
7 v 286 2722 a(P)-5 b(ap)5 b(er)57 b(has)g(more)h(\014gures,)f
(including)h(space)e(p)5 b(erformance.)286 3296 y(Correctness)57
b(is)h(more)g(imp)5 b(ortan)-5 b(t)58 b(than)f(p)5 b(erformance!)p
286 3879 1574 18 v 1859 3879 2098 52 v 3957 3879 1574
18 v 272 4097 a Ff(V)-11 b(algrind)2113 b Fe(13)1783
b(13)46 b(July)h(2003)p eop
%%Page: 14 15
14 14 bop 286 -196 4720 18 v 5005 369 a
 currentpoint currentpoint translate 0.42818 0.42818 scale neg exch
neg exch translate
 5005 369 a Black
5177 -15 a
 currentpoint currentpoint translate 0.16673 0.16673 scale neg exch
neg exch translate
 5177 -15 a @beginspecial -153 @llx -3 @lly
153 @urx 372 @ury 3060 @rwi @setspecial
%%BeginDocument: CUarmsC.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Arms of University of Cambridge
%%Creator: Philip Hazel, July 1986
%%CreationDate: 12:00:00 31-07-86
%%BoundingBox: -153 -3 153 372
%%EndComments

/cuarmsdict 50 dict def cuarmsdict begin

/mtrx matrix def
/lionfix{filled{gsave lioncolour fill grestore}if stroke}def
/toefix{gsave lioncolour fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db lioneyecolour fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/arg exch def gsave 0.05 0.05 scale
  arg type /booleantype eq { /arg arg {1} {0} ifelse def} if

  arg 3 eq
    {
    % colour definitions
    /erminecolour	{ 0 0 0 setrgbcolor } def
    /lioncolour		{ 1 .9 0 setrgbcolor } def
    /lioneyecolour	{ 1 0 0 setrgbcolor } def
    /bgcolour		{ 1 0 0 setrgbcolor } def
    /crosscolour	{ 1 1 1 setrgbcolor } def
    /bookcolour		{ 1 0 0 setrgbcolor } def
    /bktrimcolour 	{ 1 .9 0 setrgbcolor } def
    /filled		true def
    }
    {
    /erminecolour	{ 0 setgray } def
    /lioncolour		{ 1 setgray } def
    /lioneyecolour	{ 0 setgray } def
    /bgcolour		{ 0 setgray } def
    /crosscolour	{ 1 setgray } def
    /bookcolour		{ 0 setgray } def
    /bktrimcolour 	{ 1 setgray } def
    /filled		arg 1 eq def
    }
    ifelse


  1 1 2
  {pop   %repeat for symmetry

  %outline
  bgcolour
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave crosscolour fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc erminecolour fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc bookcolour fill

  bktrimcolour
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end


%%EndProlog

5 5 scale
cuarmsdict begin 3 cuarms end

%%EndDocument
 @endspecial 5177 -15 a
 currentpoint currentpoint translate 1 0.16673 div 1 0.16673 div scale
neg exch neg exch translate
 5177 -15 a 5030 177 a
 currentpoint currentpoint translate 0.74092 0.74092 scale neg exch
neg exch translate
 5030 177
a Fm(UNIVERSITY)51 b(OF)5030 177 y
 currentpoint currentpoint translate 1 0.74092 div 1 0.74092 div scale
neg exch neg exch translate
 5030 177 a 5029 369
a
 currentpoint currentpoint translate 0.91832 0.91832 scale neg exch
neg exch translate
 5029 369 a Fm(CAMBRIDGE)5029 369 y
 currentpoint currentpoint translate 1 0.91832 div 1 0.91832 div scale
neg exch neg exch translate
 5029 369 a Black
5005 369 a
 currentpoint currentpoint translate 1 0.42818 div 1 0.42818 div scale
neg exch neg exch translate
 5005 369 a 1764 115 a Fh(Strengths)66 b(and)g(W)-17
b(eaknesses)286 421 y Fd(Similar)60 b(framew)-5 b(orks)59
b(\(e.g.)d(DynamoRIO,)i(DELI,)g(Strata\):)p Black 286
745 a Fc(\017)p Black 86 w Fd(Instrumen)-5 b(t)57 b(mac)-5
b(hine)57 b(co)5 b(de)56 b(directly)p Black 286 980 a
Fc(\017)p Black 86 w Fd(Go)5 b(o)g(d)57 b(for)g(dynamic)h(optimisation)
p Black 286 1216 a Fc(\017)p Black 86 w Fd(Go)5 b(o)g(d)57
b(for)g(simple)i(instrumen)-5 b(tation)286 1540 y(V)-14
b(algrind:)p Black 286 1864 a Fc(\017)p Black 86 w Fd(T)g(o)5
b(o)57 b(slo)-5 b(w)59 b(for)f(optimisation)p Black 286
2100 a Fc(\017)p Black 86 w Fd(Better)f(for)g(complex)h(instrumen)-5
b(tation)286 2424 y(UCo)5 b(de)57 b(adv)-10 b(an)-5 b(tages:)p
Black 286 2747 a Fc(\017)p Black 86 w Fd(Simple)58 b(\(RISC-lik)-5
b(e;)59 b(compare)e(to)h(x86\))p Black 286 2983 a Fc(\017)p
Black 86 w Fd(Unconstrained)f(b)-5 b(y)57 b(original)j(co)5
b(de)56 b(\(e.g.)h(enough)f(registers?\))p Black 286
3219 a Fc(\017)p Black 86 w Fd(No)i(fear)f(of)g(c)-5
b(hanging)57 b(original)j(co)5 b(de's)56 b(e\013ect)g(\(e.g.)h
(condition)h(co)5 b(des?\))286 3543 y(Also)58 b(services)f(\(error)h
(recording,)g(debug)e(info,)h(etc.\))76 b(are)57 b(v)-5
b(ery)58 b(useful.)p 286 3879 1574 18 v 1859 3879 2098
52 v 3957 3879 1574 18 v 272 4097 a Ff(V)-11 b(algrind)2113
b Fe(14)1783 b(13)46 b(July)h(2003)p eop
%%Page: 15 16
15 15 bop 286 -196 4720 18 v 5005 369 a
 currentpoint currentpoint translate 0.42818 0.42818 scale neg exch
neg exch translate
 5005 369 a Black
5177 -15 a
 currentpoint currentpoint translate 0.16673 0.16673 scale neg exch
neg exch translate
 5177 -15 a @beginspecial -153 @llx -3 @lly
153 @urx 372 @ury 3060 @rwi @setspecial
%%BeginDocument: CUarmsC.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Arms of University of Cambridge
%%Creator: Philip Hazel, July 1986
%%CreationDate: 12:00:00 31-07-86
%%BoundingBox: -153 -3 153 372
%%EndComments

/cuarmsdict 50 dict def cuarmsdict begin

/mtrx matrix def
/lionfix{filled{gsave lioncolour fill grestore}if stroke}def
/toefix{gsave lioncolour fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db lioneyecolour fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/arg exch def gsave 0.05 0.05 scale
  arg type /booleantype eq { /arg arg {1} {0} ifelse def} if

  arg 3 eq
    {
    % colour definitions
    /erminecolour	{ 0 0 0 setrgbcolor } def
    /lioncolour		{ 1 .9 0 setrgbcolor } def
    /lioneyecolour	{ 1 0 0 setrgbcolor } def
    /bgcolour		{ 1 0 0 setrgbcolor } def
    /crosscolour	{ 1 1 1 setrgbcolor } def
    /bookcolour		{ 1 0 0 setrgbcolor } def
    /bktrimcolour 	{ 1 .9 0 setrgbcolor } def
    /filled		true def
    }
    {
    /erminecolour	{ 0 setgray } def
    /lioncolour		{ 1 setgray } def
    /lioneyecolour	{ 0 setgray } def
    /bgcolour		{ 0 setgray } def
    /crosscolour	{ 1 setgray } def
    /bookcolour		{ 0 setgray } def
    /bktrimcolour 	{ 1 setgray } def
    /filled		arg 1 eq def
    }
    ifelse


  1 1 2
  {pop   %repeat for symmetry

  %outline
  bgcolour
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave crosscolour fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc erminecolour fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc bookcolour fill

  bktrimcolour
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end


%%EndProlog

5 5 scale
cuarmsdict begin 3 cuarms end

%%EndDocument
 @endspecial 5177 -15 a
 currentpoint currentpoint translate 1 0.16673 div 1 0.16673 div scale
neg exch neg exch translate
 5177 -15 a 5030 177 a
 currentpoint currentpoint translate 0.74092 0.74092 scale neg exch
neg exch translate
 5030 177
a Fm(UNIVERSITY)51 b(OF)5030 177 y
 currentpoint currentpoint translate 1 0.74092 div 1 0.74092 div scale
neg exch neg exch translate
 5030 177 a 5029 369
a
 currentpoint currentpoint translate 0.91832 0.91832 scale neg exch
neg exch translate
 5029 369 a Fm(CAMBRIDGE)5029 369 y
 currentpoint currentpoint translate 1 0.91832 div 1 0.91832 div scale
neg exch neg exch translate
 5029 369 a Black
5005 369 a
 currentpoint currentpoint translate 1 0.42818 div 1 0.42818 div scale
neg exch neg exch translate
 5005 369 a 2349 115 a Fh(F)-17 b(uture)66
b(W)-17 b(ork)286 694 y Fd(Skins:)p Black 286 1034 a
Fc(\017)p Black 86 w Fd(Not)58 b(just)e(pro\014ling)p
Black 286 1278 a Fc(\017)p Black 86 w Fb(De)-9 b(ep)69
b Fd(bug)57 b(detection)f(\(meta)-5 b(v)-10 b(alues\))p
Black 286 1522 a Fc(\017)p Black 86 w Fd(More)57 b(formal)i(v)-5
b(eri\014cation)58 b(to)5 b(ols?)286 2123 y(Core:)p Black
286 2463 a Fc(\017)p Black 86 w Fd(Di\013eren)-5 b(t)59
b(skins)e(\(done,)f(for)i(x86-only)g(case\))p Black 286
2707 a Fc(\017)p Black 86 w Fd(Di\013eren)-5 b(t)59 b(arc)-5
b(hitectures)56 b(\(doable\))p Black 286 2951 a Fc(\017)p
Black 86 w Fd(Di\013eren)-5 b(t)59 b(OS/en)-5 b(vironmen)g(ts)57
b(\(di\016cult,)h(esp.)75 b(signals,)59 b(threads\))286
3291 y(Av)-5 b(oid)58 b(M)p Fc(\002)p Fd(N)p Fc(\002)p
Fd(P)f(co)5 b(de)56 b(blo)-5 b(w-up.)p 286 3879 1574
18 v 1859 3879 2098 52 v 3957 3879 1574 18 v 272 4097
a Ff(V)-11 b(algrind)2113 b Fe(15)1783 b(13)46 b(July)h(2003)p
eop
%%Page: 16 17
16 16 bop 286 -196 4720 18 v 5005 369 a
 currentpoint currentpoint translate 0.42818 0.42818 scale neg exch
neg exch translate
 5005 369 a Black
5177 -15 a
 currentpoint currentpoint translate 0.16673 0.16673 scale neg exch
neg exch translate
 5177 -15 a @beginspecial -153 @llx -3 @lly
153 @urx 372 @ury 3060 @rwi @setspecial
%%BeginDocument: CUarmsC.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Arms of University of Cambridge
%%Creator: Philip Hazel, July 1986
%%CreationDate: 12:00:00 31-07-86
%%BoundingBox: -153 -3 153 372
%%EndComments

/cuarmsdict 50 dict def cuarmsdict begin

/mtrx matrix def
/lionfix{filled{gsave lioncolour fill grestore}if stroke}def
/toefix{gsave lioncolour fill grestore stroke} def

/ea{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arc
savematrix setmatrix}def

/ec{/savematrix mtrx currentmatrix def
translate 5 -1 roll rotate scale 0 0 1 5 -2 roll arcn
savematrix setmatrix}def

/db /rlineto load def /dt /lineto load def /mt /moveto load def

/lion1{0.77 0.77 scale
-200 -600 translate
406 338 mt 440 375 45 -115 38 arc
120 -90 90 15 11 445 425 ea
120 -90 90 15 15 402 442 ea
130 -143 25 33 20 360 454 ea

360 485 32 217 73 arcn 397 507 dt
464 524 45 241 70 arc 464 554 20 36 -133 arcn
377 396 161 63 97 arc 362 494 62 93 227 arc
512 690 308 235 255 arc 437 373 16 70 -105 arcn
420 360 dt -100 20 db -50 0 db -20 40 db

262 55 125 80 55 200 465 ea
270 -41 185 23 15 265 517 ea
260 540 dt -4 20 db -6 10 db -16 -2 db -14 -8 db
90 -90 90 40 20 200 560 ea
-14 8 db -16 2 db -6 -10 db -4 -20 db
90 -5 221 23 15 135 517 ea
98 55 125 80 55 200 465 ea
420 340 285 164 183 arc
} def

/lion2{126 299 27 70 126 arc
98 333 15 271 190 arcn
287 438 230 207 170 arcn
307 0 145 50 25 33 522 ea

240 485 240 162 177 arc
20 496 18 177 270 arc
96 -10 190 26 12 7 450 ea

111 -25 180 36 12 15 388 ea 40 350 dt
119 -30 190 33 10 36 318 ea 70 296 dt

127 -15 180 28 7 66 260 ea
130 213 45 138 120 arcn
120 296 36 -75 -40 arc
}def

/lion3{69 255 81 11 -37 arcn
-123 362 300 -33 -47 arcn
40 57 160 30 11 49 98 ea
40 175 350 40 15 57 90 ea

72 150 345 50 18 115 123 ea
90 150 330 45 14 155 177 ea
80 150 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion4{332 247 36 115 210 arc
307 160 31 40 -55 arcn
160 390 305 -58 -70 arcn
22 30 160 20 7 243 90 ea
27 170 330 30 12 250 77 ea 288 90 dt

60 125 300 45 15 312 100 ea 340 125 dt
72 155 360 30 12 356 140 ea
380 190 25 210 400 arc
90 230 50 18 13 383 208 ec
363 240 22 300 356 arc
}def

/lion5{476 296 108 212 242 arc
412 171 32 50 -30 arcn
55 90 310 40 20 420 84 ea

498 102 54 200 235 arc
93 200 360 40 11 470 105 ea
95 165 350 30 8 474 173 ea
479 205 5 210 360 arc 490 270 dt
470 260 13 350 195 arcn
348 247 108 10 60 arc
}def

/lion6{90 0 360 30 15 72 445 ea toefix
243 324 108 180 208 arc stroke}def

/lion7{10 0 360 30 20 53 148 ea toefix}def
/lion8{-5 0 360 33 13 243 115 ea toefix}def

/lion9{50 0 360 27 13 393 103 ea toefix
317 280 mt 335 292 18 235 380 arc
385 238 dt stroke}def

/lion10{160 360 mt 4 -20 db 16 -20 db 16 20 db 4 20 db 10 -14 db
10 -6 db 10 6 db 10 24 db 14 0 db 16 10 db stroke
gsave 200 490 translate
1 1 2{pop 16 0 mt 24 40 db -26 -20 db lioneyecolour fill
-1 1 scale}for grestore
90 90 270 60 25 200 465 ea 200 450 dt closepath 1 setlinewidth stroke
500 710 203 240 271 arc stroke
} def

/lion11{280 280 dt 262 203 18 133 220 arc
228 156 36 42 -50 arcn
52 38 315 44 23 160 20 ea 195 40 dt

67 135 322 44 17 220 54 ea
85 100 305 27 20 263 90 ea
75 130 340 22 10 293 118 ea
314 137 8 -150 40 arc

380 197 72 202 148 arcn
250 317 99 323 350 arc

422 334 72 208 248 arc
47 360 240 24 11 394 242 ec
60 60 310 30 20 364 178 ea

65 110 340 30 15 408 196 ea
72 150 350 15 8 435 239 ea
450 260 11 220 40 arc
505 375 108 237 200 arcn
}def

/lion12{30 0 360 30 20 135 56 ea toefix
35 0 360 22 15 352 212 ea toefix
280 280 mt 347 300 dt stroke
}def

/lion13{0 45 -40 31 20 178 242 ec
40 90 310 31 20 137 168 ea 170 174 dt

80 90 320 41 20 189 163 ea
82 160 310 35 20 226 218 ea
73 180 325 25 10 263 266 ea 333 284 dt

341 260 18 145 215 arc
325 183 27 30 -58 arcn
37 90 320 35 15 287 84 ea

80 50 280 23 12 325 80 ea
75 160 335 25 17 350 124 ea
112 140 290 15 11 378 154 ea 383 170 dt
395 180 9 265 31 arc
462 230 72 210 180 arcn

405 160 32 60 -10 arcn
82 90 340 34 17 432 13 ea
105 150 330 35 15 455 63 ea
100 160 330 30 11 466 126 ea 461 161 dt
80 180 345 26 8 475 187 ea
125 180 60 40 15 456 251 ec
325 265 108 14 43 arc
}def

/lion14{335 306 22 265 336 arc 390 230 dt stroke
10 0 360 25 13 122 198 ea toefix
13 0 360 22 13 266 106 ea toefix
60 0 360 28 15 400 24 ea toefix
}def

/lion15{69 255 81 11 -40 arcn
40 57 160 30 11 49 123 ea
40 175 350 40 15 57 113 ea

72 150 320 50 18 115 145 ea
90 120 270 27 15 155 188 ea
80 170 340 50 10 186 230 ea
110 105 240 32 22 218 284 ea
}def

/lion16{10 0 360 30 20 53 168 ea toefix}def


/cuarms{/arg exch def gsave 0.05 0.05 scale
  arg type /booleantype eq { /arg arg {1} {0} ifelse def} if

  arg 3 eq
    {
    % colour definitions
    /erminecolour	{ 0 0 0 setrgbcolor } def
    /lioncolour		{ 1 .9 0 setrgbcolor } def
    /lioneyecolour	{ 1 0 0 setrgbcolor } def
    /bgcolour		{ 1 0 0 setrgbcolor } def
    /crosscolour	{ 1 1 1 setrgbcolor } def
    /bookcolour		{ 1 0 0 setrgbcolor } def
    /bktrimcolour 	{ 1 .9 0 setrgbcolor } def
    /filled		true def
    }
    {
    /erminecolour	{ 0 setgray } def
    /lioncolour		{ 1 setgray } def
    /lioneyecolour	{ 0 setgray } def
    /bgcolour		{ 0 setgray } def
    /crosscolour	{ 1 setgray } def
    /bookcolour		{ 0 setgray } def
    /bktrimcolour 	{ 1 setgray } def
    /filled		arg 1 eq def
    }
    ifelse


  1 1 2
  {pop   %repeat for symmetry

  %outline
  bgcolour
  0 1475 moveto 600 1475 lineto
  600 343 0 0 500 arcto 4 {pop} repeat
  0 0 lineto gsave crosscolour fill grestore 15 setlinewidth stroke

  125 1475 moveto 125 1000 lineto 600 1000 lineto
  filled {600 1475 lineto fill} if

  125 75 moveto 125 700 lineto 600 700 lineto
  filled {600 343 0 0 500 arcto 4 {pop} repeat fill}
  {20 setlinewidth stroke} ifelse

  %ermine
  [[0 1170] [63 1045] [63 1295] [225 850] [375 850] [525 850]
   [300 730] [450 730] [0 275] [0 540] [63 120] [63 400]]
    {
    aload pop
    gsave translate
    0 115 10 0 360 arc erminecolour fill
    172 107 170 180 210 arc
    8 20 lineto 0 0 lineto -8 20 lineto
    -172 107 170 -30 0 arc
    closepath fill
    grestore
    }
    forall

  %book
  gsave 0 745 translate
  0 0 moveto 60 0 lineto 60 -80 lineto 100 -80 lineto 100 0 lineto
  140 0 lineto 140 225 lineto
  70 213 20 37 143 arc 0 213 20 37 90 arc bookcolour fill

  bktrimcolour
  70 213 12 0 180 arc
  58 183 lineto 82 183 lineto fill
  0 213 12 0 90 arc
  0 183 lineto 12 183 lineto fill

  80 -22 12 0 180 arc
  80 -43 12 180 0 arc fill
  80 -67 6 0 360 arc fill

  105 25 8 0 360 arc fill
  105 180 8 0 360 arc fill

  0 -90 90 50 25 0 112.5 ea
  0 90 -90 45 20 0 112.5 ec fill

  0 -90 90 20 5 0 112.5 ea fill

  grestore -1 1 scale
  }for

%point of shield
0 0 7.5 0 360 arc fill

%lions
2 setlinewidth

gsave -405 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

gsave -400 675 translate
lion1 lion2 lion13 lionfix
lion6 lion14 lion10
grestore

gsave 322 1450 translate
lion1 lion2 lion3 lion4 lion5 lionfix
lion6 lion7 lion8 lion9 lion10
grestore

317 675 translate
lion1 lion2 lion15 lion11 lionfix
lion6 lion16 lion12 lion10

grestore}def
end


%%EndProlog

5 5 scale
cuarmsdict begin 3 cuarms end

%%EndDocument
 @endspecial 5177 -15 a
 currentpoint currentpoint translate 1 0.16673 div 1 0.16673 div scale
neg exch neg exch translate
 5177 -15 a 5030 177 a
 currentpoint currentpoint translate 0.74092 0.74092 scale neg exch
neg exch translate
 5030 177
a Fm(UNIVERSITY)51 b(OF)5030 177 y
 currentpoint currentpoint translate 1 0.74092 div 1 0.74092 div scale
neg exch neg exch translate
 5030 177 a 5029 369
a
 currentpoint currentpoint translate 0.91832 0.91832 scale neg exch
neg exch translate
 5029 369 a Fm(CAMBRIDGE)5029 369 y
 currentpoint currentpoint translate 1 0.91832 div 1 0.91832 div scale
neg exch neg exch translate
 5029 369 a Black
5005 369 a
 currentpoint currentpoint translate 1 0.42818 div 1 0.42818 div scale
neg exch neg exch translate
 5005 369 a 2057 115 a Fh(T)-17 b(ak)-6 b(e-home)67
b(message)286 1163 y Fd(With)58 b(V)-14 b(algrind:)p
Black 286 1503 a Fc(\017)p Black 86 w Fd(Building)59
b(sup)5 b(ervision)58 b(to)5 b(ols)58 b(is)g(easy\(ish\))p
Black 286 1747 a Fc(\017)p Black 86 w Fd(Running)f(sup)5
b(ervision)57 b(to)5 b(ols)58 b(is)h(easy)286 2817 y(Av)-10
b(ailable)60 b(at)d Fa(http://developer.)q(kd)q(e.o)q(rg)q(/~s)q(ew)q
(ard)q(j)p 286 3879 1574 18 v 1859 3879 2098 52 v 3957
3879 1574 18 v 272 4097 a Ff(V)-11 b(algrind)2113 b Fe(16)1783
b(13)46 b(July)h(2003)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
